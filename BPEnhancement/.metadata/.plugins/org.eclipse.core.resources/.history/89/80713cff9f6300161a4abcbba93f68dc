<apex:component Controller="VendorOrderReceivingCtrl">
<!-- <c:NewViewCustomerStyle /> -->

        <style>
              .Vendor-Order-Part-PopupNew{
                    display: block;
                    background: #fff;
                    color: #000;
                    padding-left:20px;/* padding: 10px 20px; */
                    width: 650px;
                    height:200px;
              }
              
              /* .Vendor-Order-Part-Popup:before{
                  content: '';
                    display: block;
                    position: absolute;
                    z-index: -1;
                    top: 13px;
                    left: -13px;
                    height: 30px;
                    width: 30px;
                    -moz-box-shadow: -3px 3px 5px 0px #7a7a7a;
                    -webkit-box-shadow: -3px 3px 5px 0px #7a7a7a;
                    -o-box-shadow: -3px 3px 5px 0px #7a7a7a;
                    box-shadow: -3px 3px 5px 0px #7a7a7a;
                    transform: rotate(45deg);
                    -ms-transform: rotate(45deg);
                    -webkit-transform: rotate(45deg);
                    background-color: #fff;
              } */
              .Vendor-Order-Part-PopupNew .under-line-row{
                  padding: 10px;
                  border-bottom: 1px solid #939598;
                  margin-left: 0px;
              }
              .button-On-PopUp {
                    background-color: orange;
                    color: white;
                    font-weight: bold;
              }
              .my-legend .legend-title {
                text-align: left;
                margin-bottom: 5px;
                font-weight: bold;
                font-size: 90%;
                }
              .my-legend .legend-scale ul {
                margin: 0;
                margin-bottom: 5px;
                padding: 0;
                float: left;
                list-style: none;
                }
              .my-legend .legend-scale ul li {
                font-size: 80%;
                list-style: none;
                margin-left: 0;
                line-height: 18px;
                margin-bottom: 2px;
                }
              .my-legend ul.legend-labels li span {
                display: block;
                float: left;
                height: 16px;
                width: 30px;
                margin-right: 5px;
                margin-left: 0;
                border: 1px solid #999;
                }
              .my-legend .legend-source {
                font-size: 70%;
                color: #999;
                clear: both;
                }
              .my-legend a {
                color: #777;
                }
                
               .closeBtn{
                  height: 32px;
                }
                .gid_container_Customer .table {
                    border: 0;
                }
                .main_section_COU_Header .actionRow .actionText {
                    margin-left: 5px;
                    color: #939CA9;
                }
                .first_img {
                    height: 30px;
                }
                .gid_container_Customer .table th {
                    border: none;
                    padding-top: 15px;
                    padding-bottom: 15px;
                }
                .gid_container_Customer .table tbody {
                    border: none;
                }
                .gid_container_Customer .table tbody > tr > td {
                    border: none;
                    padding-top: 2px;
                    padding-bottom: 2px;
                    vertical-align: middle;
                }
                .gid_container_Customer .table tbody .tddropdown td {
                    padding-top: 2px;
                    padding-bottom: 2px;
                    vertical-align: middle;
                }
                .angucomplete-dropdown {
                    width: 100%;
                    margin-top: 28px;
                }
                .gid_container_Customer .tableHeader {
                    margin-left: -15px;
                    margin-right: -15px;
                }
                .gid_container_Customer .S2 {
                    margin-left: 12px;
                    margin-right: 12px;
                }
                .gid_container_Customer table tr.edit_panel {
                    background: #fff;
                }
                .gid_container_Customer table tr.edit_panel,
                .gid_container_Customer table tr.Editable_row {} .gid_container_Customer table tr.edit_panel.show_tr {
                    display: table-row;
                }
                .gid_container_Customer table tr.edit_panel input[type="radio"] {
                    float: left;
                    position: relative;
                }
                .gid_container_Customer table tr.edit_panel td .edit_box .edit-body .editform_btn {
                    position: absolute;
                    right: 20px;
                    top: 87px;
                    width: 50px;
                }
                .gid_container_Customer table tr.edit_panel td {
                    overflow: hidden;
                    height: 0;
                    padding-top: 5px;
                }
                .gid_container_Customer table tr.edit_panel td .edit_box {
                    border: 1px dashed #A8A8A8;
                    margin: 10px 5px;
                    position: relative;
                }
                .gid_container_Customer table tr.edit_panel.animate_tr td {
                    border-left: 3px solid #939393;
                    height: auto;
                    padding: 4px;
                }
                .gid_container_Customer table tr.edit_panel td .edit_box.ng-hide {
                    height: 0;
                }
                .gid_container_Customer table tr.edit_panel td .edit_box {
                    transition: all 0.5s ease;
                }
                .edit_box {
                    transition: .5s linear all;
                    height: 130px;
                }
                .gid_container_Customer table tr.edit_panel.animate_tr {
                    margin-top: 10px;
                    transition: all 0.5s ease;
                }
                .gid_container_Customer table tr.edit_panel td .edit_box .its-heading {
                    position: absolute;
                    left: 24px;
                    top: -15px;
                    min-width: 175px;
                    background: #fff;
                    min-height: 30px;
                    padding: 6px;
                    font-size: 14px;
                    color: #939CA9;
                    font-weight: bold;
                }
                .gid_container_Customer .table .edite_btn {
                    height: 38px;
                    width: 38px;
                    float: left;
                    padding: 4px;
                    margin: 4px 0;
                }
                .gid_container_Customer table tr.edit_panel td .edit_box .edit-body {
                    margin: 26px;
                }
                
                .gid_container_Customer table tr td .notification{
                  color: #C9302C;
                  display: block;
                  clear: both;
                  font-size: 11px;
                  font-style: italic;
                }
                .gid_container_Customer table tr td .AvalaibleQtyNotification{
                  color: #1abc9c;
                  display: block;
                  clear: both;
                  font-size: 11px;
                  font-style: italic;
                }
                .gid_container_Customer table tr td .Infonotification{
                  color: #2E64FE;
                  display: block;
                  clear: both;
                  font-size: 11px;
                  font-style: italic;
                }
                
                #CO_Merchandise_block_grid_container .Editable_row .form-control{
                    width: 75%;
                    border-color: #00AEEF;
                    text-align: center;
                    display: table-row;
                    float: left;
                }
                
                .gid_container_Customer table tr.edit_panel input[type="radio"]{
                    float: left;
                    position: relative;
                }
                .gid_container_Customer table tr.edit_panel td .edit_box .edit-body .radio label span {
                    display: block;
                    float: left;
                    margin-top: 0px;
                    font-size: 14px;
                    color: #707070;
                }
                .gid_container_Customer table tr.edit_panel td .edit_box .edit-body .radio label span.select_box_container {
                    display: block;
                    float: left;
                    margin-left: 22px;
                    margin-top: -4px;
                }
                
                .Vendor-Order-Part-line{
                    float: left;
                    width: 100%;
                    margin: 24px 0 24px 0px;
                    padding: 0;
                    border-top: 1px solid #ECF0F1;
                }
                .MB24{
                    margin-bottom: 24px;
                }   
                 ::-webkit-scrollbar{
                    width: 11px;
                    height: 20px;
                }
                ::-webkit-scrollbar-button{
                    background: #ECF0F1;
                }
                ::-webkit-scrollbar-track-piece{
                    background: #ECF0F1;
                }
                ::-webkit-scrollbar-thumb{
                    background: #B7BEC6;
                    border-radius : 3px;
                    border: 1px solid #fff;
                }  
                
                .savecancle_btncntnr .grayBtn, .savecancle_btncntnr .grayBtn:hover, .savecancle_btncntnr.grayBtn:focus, 

.savecancle_btncntnr.grayBtn:active{
                    background: #727983;
                    color: #ffffff;
                    border: none !important;
                    font-weight: bold;
                    border-radius: 1px;
                    transition: box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1);
                    transition-delay: 0.2s;
                    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
                }
                .M20{
                    margin-top: 20px;
                }
                .savecancle_btncntnr .greenBtn, .savecancle_btncntnr .greenBtn:hover, .savecancle_btncntnr 

.greenBtn:focus,.savecancle_btncntnr .greenBtn:active {
                    background: #71BF3E;
                    color: #ffffff;
                    border: none !important;
                    font-weight: bold;
                    border-radius: 1px;
                    transition: box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1);
                    transition-delay: 0.2s;
                    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);
                }   
                
                .rectanglecont{
                    margin-top: -15px;
                    border-radius: 15px 15px 0px 0px;
                 }
                .rectanglecont1{
                    margin-top:-7px;
                }
                .inorder_tringle{
                    margin-top: -15px;
                }
                .rectanglecont text{
                    margin-top: -20px;
                }
                .instocktext{
                    margin-top: -15px;
                }
                .Vendor-Order-Part-PopupNew .row{
                    margin: 0;
                }
                .tablePartDetails{
                    width: 97%;
                }
                .widgetAvailable{
                	height:185px;
                }
                .widgetUnAvailable{
                	height:60px;
                }
        </style>
        <script>
            var PartPopUpModuleOnLoad = angular.module('PartPopUpModuleOnLoad', []);
            PartPopUpModuleOnLoad.controller("newPartCtrl", function($scope, $q,  partOrderReceivingService,$window ) {
              
               if($scope.PartPopUpOnLoad == undefined){
                    $scope.PartPopUpOnLoad = {};
                     $scope.PartPopUpOnLoad.partModel={};
                }
           $scope.$on('PartPopUpEventOnLoad', function(event, partId) { 
           		debug("inside load function");
                $scope.PartPopUpOnLoad.partModel={};
                jsonRectangles={};jsonRectangles2={};
                 $scope.PartPopUpOnLoad.loadData(partId);
                angular.element('.partPopUp-flyout').scrollTop = 0;  
           }); 
           
         
            
            
            ////////////////////////widget2//////////////
            $scope.$on('activeButtonChanged', function (event, args) {  
                $scope.PartPopUpOnLoad.item = args.item;
            });
             ////////////////////////widget2//////////////
           $scope.PartPopUpOnLoad.loadData = function(partId){
                 partOrderReceivingService.getPartRecord(partId).then(function (partRecord) {
                        if (partRecord.PartDetailRec != undefined) {
                            $scope.PartPopUpOnLoad.partModel = partRecord.PartDetailRec;
                           debug("service Result");
                            debug( $scope.PartPopUpOnLoad.partModel);
                            $scope.PartPopUpOnLoad.loadChart();
                        }
                    }, function (errorSearchResult) {
                        $scope.VORModel.OverlayInfo = errorSearchResult;
                    });
               }
             $scope.PartPopUpOnLoad.loadChart=function(){
             	$scope.PartPopUpOnLoad.isZeroTotalValue = false
             	$scope.PartPopUpOnLoad.isZeroTotalValue1 = false;
             
                d3.selectAll(".PartPopupOnVenderOrdernew svg").remove();
                
                debug($scope.PartPopUpOnLoad.partModel);
                
                debug("$scope.PartPopUpOnLoad.partModel.QtyCommited : "+$scope.PartPopUpOnLoad.partModel.QtyCommited);
                debug("$scope.PartPopUpOnLoad.partModel.QtyAvailable : "+$scope.PartPopUpOnLoad.partModel.QtyAvailable);
                debug("$scope.PartPopUpOnLoad.partModel.QtyOnOrder : "+$scope.PartPopUpOnLoad.partModel.QtyOnOrder);
                
                var commited = $scope.PartPopUpOnLoad.partModel.QtyCommited;  
                var available = $scope.PartPopUpOnLoad.partModel.QtyAvailable;
                var onorder = $scope.PartPopUpOnLoad.partModel.QtyOnOrder;
                
                var instocktotal = $scope.PartPopUpOnLoad.partModel.QtyCommited + $scope.PartPopUpOnLoad.partModel.QtyAvailable; 
                debug("instocktotal : "+instocktotal);
                var total_instock = commited + available;
                var max = 0;
                if(commited < 0){
                	if(Math.abs(commited)>max)
                		max = Math.abs(commited);
                }
                if(available < 0){
                	if(Math.abs(available)>max)
                		max = Math.abs(available);
                }
                if(onorder < 0){
                	if(Math.abs(onorder)>max)
                		max = Math.abs(onorder);
                }
                if(total_instock < 0){
                	if(Math.abs(total_instock)>max)
                		max = Math.abs(total_instock);
                }
                available = available + max;
                commited = commited + max;
                onorder = onorder + max;
                total_instock = total_instock + max;
                
                debug(" Final available"+available);
                debug(" Final commited"+commited);
                debug(" Final onorder"+onorder);
                debug(" Final total_instock"+total_instock);
                 
                var jsonRectangles = [{  "color" : "#414449" , "commited": commited  },
                                       {  "color" : "#727983" , "available" : available  },
                                       {  "color" : "#939CA9" , "onorder" : onorder}];
                
                var total_value = jsonRectangles[0].commited + jsonRectangles[1].available + jsonRectangles[2].onorder ;
                debug("total_value : "+total_value);
                if(total_value != 0) {
                	debug("in if : isZeroTotalValue = " + $scope.PartPopUpOnLoad.isZeroTotalValue);
	                jsonRectangles[0].commited = ((jsonRectangles[0].commited)/total_value)*100
	                jsonRectangles[1].available = ((jsonRectangles[1].available)/total_value)*100
	                jsonRectangles[2].onorder  = ((jsonRectangles[2].onorder)/total_value)*100
	                var ft1=(580*jsonRectangles[0].commited)/100; 
	                var ft2= (580*jsonRectangles[1].available)/100;
	                var ft3= (580*jsonRectangles[2].onorder)/100;
	                debug("ft1 : "+ft1);
	                debug("ft2 : "+ft2);
	                debug("ft3 : "+ft3);
	                var commitedName= "COMMITED:" ;
	                var availablename= "AVAILABLE:" ;
	                var onordername= "ON ORDER:" ;
	                
	                var inStock = "INSTOCK:" ;
	                var instock_tringle=ft1+ft2;
	                var jsonRectangles1 = [{ "color" : "#71BF3E" , "commited": instock_tringle }];
	                
	                /* text node */
	                var textsvg=d3.select('#loadPartWrapper')
	                                .append('svg')
	                                .data(jsonRectangles)
	                                .attr({'width':580 + "px",'height':45 + "px"}); 
	                             
	                 if(jsonRectangles[0].commited >= 0) 
	                 {
	                 /* displaying name */
	                 textsvg.append("text").attr("dx", function (d,i) {
                                                    var p;
                                                    if(ft1<100)
                                                    {
                                                    	p=0;
                                                    } else if((580-ft1)>500){
                                                    	p = 450;
                                                    } else
                                                    {
	                                                    debug(ft1);
	                                                    p=(ft1/2)-50;
                                                    }
                                                    return p; 
                                             })
                                            .attr("dy", 25) 
                                            .style('fill', "#414449")
                                            .text(function(d) { return commitedName });
                                            
                       /* displaying quantity */                    
                                           textsvg.append("text").attr("dx", function (d,i) {
							                                                   var p;
							                                                    if(ft1<100)
							                                                    {
							                                                    	p=0;
							                                                    } else if((580-ft1)>500){
							                                                    	p = 450;
							                                                    } else
							                                                    {
								                                                    debug(ft1);
								                                                    p=(ft1/2)-50;
							                                                    }
							                                                    return (p+85); 
							                                             })
														                 .attr("dy", 25)
														                 .attr("font-weight", "bold")
														                 .style('fill', "#414449")
														                 .text( function (d) { return $scope.PartPopUpOnLoad.partModel.QtyCommited }); 
                                     	
                                     }
                                
                                    if(jsonRectangles[1].available >= 0)  
                                    {
                                    
                                    /* displaying name */  
                                            textsvg.append("text")
                                            .attr("dx", function (d,i) {
                                                   if((ft2<=50) && (ft1>530))
                                                    {
                                                    	p = 450;
                                                    } 
                                                    else if((ft1<=530)&&(ft1>50)){
                                                    	p=ft1 + (ft2/2)-50;
                                                    }
                                                    else if((ft2<=100) && (ft1<50)){
                                                    	p=0;
                                                    }
                                                    else
                                                    {
                                                    	p=ft1 + (ft2/2)-50;
                                                    } 
                                                    return p;  
                                             })
                                            .attr("dy", 45)
                                            .style('fill', "#727983")
                                            .text(function(d) { return availablename});
                                            
                                            /* displaying quantity */                    
                                           textsvg.append("text").attr("dx", function (d,i) {
                                           										var p;
							                                                  if((ft2<=50) && (ft1>530))
							                                                    {
							                                                    	p = 450;
							                                                    } 
							                                                    else if((ft1<=530)&&(ft1>50)){
							                                                    	p=ft1 + (ft2/2)-50;
							                                                    }
							                                                    else if((ft2<=100) && (ft1<50)){
							                                                    	p=0;
							                                                    }
							                                                    else
							                                                    {
							                                                    	p=ft1 + (ft2/2)-50;
							                                                    } 
							                                                    return (p+80); 
							                                             })
														                 .attr("dy", 45)
														                 .attr("font-weight", "bold")
														                 .style('fill', "#727983")
														                 .text( function (d) { return $scope.PartPopUpOnLoad.partModel.QtyAvailable }); 
                                     	
                                     }
                                
                                    if(jsonRectangles[2].onorder>=0) 
                                    {
                                    
                                    /* displaying name */    
                                            textsvg.append("text")
                                             .attr("dx", function (d,i) {
                                                    if((ft1+ft2)>=480)
                                                    {
                                                    	p = 450;debug("if 1");
                                                    } 
                                                    else if(((ft1+ft2)<480)&&((ft1+ft2)>50)){
                                                    	p=ft1 + ft2 + (ft3/2)-50;debug("if 2");
                                                    }
                                                    else if((ft1+ft2)<=50){
                                                    	p=ft1 + ft2 + (ft3/2)-50;
                                                    	debug("if 3");
                                                    }
                                                    return p; 
                                             })
                                            .attr("dy", 30)  
                                            .style('fill', "#939CA9")
                                            .text(function(d) { return onordername});
                                            
                                         /* displaying quantity */                    
                                           textsvg.append("text").attr("dx", function (d,i) {
                                           									var p;
							                                                  if((ft1+ft2)>=480)
							                                                    {
							                                                    	p = 450;debug("if 1");
							                                                    } 
							                                                    else if(((ft1+ft2)<480)&&((ft1+ft2)>50)){
							                                                    	p=ft1 + ft2 + (ft3/2)-50;debug("if 2");
							                                                    }
							                                                    else if((ft1+ft2)<=50){
							                                                   		p=ft1 + ft2 + (ft3/2)-50;
							                                                    	debug("if 3");
							                                                    }
							                                                    return (p+85); 
							                                             })
														                 .attr("dy", 30)
														                 .attr("font-weight", "bold")
														                 .style('fill', "#939CA9")
														                 .text( function (d) { return $scope.PartPopUpOnLoad.partModel.QtyOnOrder}); 
                                     	
                                    }
                                
                /* text node */                
                                
                         /* Tringle  node */  
                var svg = d3.select('#loadPartWrapper')
                               .append('svg')
                               .attr({'width':580 + "px",'height':25 + "px"});  
                                
                                if(jsonRectangles[0].commited >= 0)   
                                {
                                        var arc = d3.svg.symbol().type('triangle-up')
                                                  .size(function(d){ return scale(d); });
                                        var data = [.5];
                                        var scale = d3.scale.linear()
                                                    .domain([1,8])
                                                    .range([100,580]);
                                        
                                        var group = svg.append('g');
                                        
                                        if(ft1!=0)
                                        	group.attr('transform','translate('+ ft1/2  +','+ 10 +')'); 
                                        else
                                        	group.attr('transform','translate('+ (ft1/2+5) +','+ 10 +')'); 
                                        	
                                        var line = group.selectAll('path')
                                                .data(data)
                                                .enter()
                                                .append('path')
                                                .attr('d',arc)
                                                .attr('stroke','#FFF')
                                                .style("fill","#414449")
                                                .attr('stroke-width',1)
                                                .attr('transform',function(d,i){ return "translate("+(i*38)+","+(5)+")"; });
                                 }
                            
                                if(jsonRectangles[1].available >= 0)  
                                {
                                        var arc = d3.svg.symbol().type('triangle-up')
                                                  .size(function(d){ return scale(d); });
                                        var data = [.5];
                                        var scale = d3.scale.linear()
                                                    .domain([1,8])
                                                    .range([100,580]);
                                        var group = svg.append('g').attr('transform','translate('+ (ft1 + (ft2/2)) +','+ 10 +')');
                                                                                          
                                        var line = group.selectAll('path')
                                                    .data(data)
                                                    .enter()
                                                    .append('path')
                                                    .attr('d',arc)
                                                    .attr('stroke','#FFF')
                                                    .style("fill","#727983")
                                                    .attr('stroke-width',1)
                                                    .attr('transform',function(d,i){ return "translate("+(i*38)+","+(5)+")"; });
                                    }   
                                    
                                    if(jsonRectangles[2].onorder >= 0) 
                                    {
                                          var arc = d3.svg.symbol().type('triangle-up')
                                                    .size(function(d){ return scale(d); });
                                                var data = [.5];
                                                var scale = d3.scale.linear()
                                                            .domain([1,8])
                                                            .range([100,580]);
                                                var group = svg.append('g');
                                                
                                                if(ft3!=0)
			                                    	group.attr('transform','translate('+ (ft1 + ft2 + (ft3/2))  +','+ 10 +')');
			                                    else
			                                    	group.attr('transform','translate('+ (ft1 + ft2 + (ft3/2) - 5)  +','+ 10 +')'); 
                                                            
                                                var line = group.selectAll('path')
                                                        .data(data)
                                                        .enter()
                                                        .append('path')
                                                        .attr('d',arc)
                                                        .attr('stroke','#FFF')
                                                        .style("fill","#939CA9")
                                                        .attr('stroke-width',1)
                                                        .attr('transform',function(d,i){ return "translate("+(i*38)+","+(5)+")"; });
                                        }
                                     /* Tringle  node */   
                                     
                                      /* rectangle  node */   
                                var svgContainer = d3.select("#loadPartWrapper").append("svg")
                                          .attr("width", 580 + "px")
                                          .attr("height", 36 + "px")
                                          .attr("class","rectanglecont")
                                 
                                 var rectangles = svgContainer.selectAll("rect")
                                                           .data(jsonRectangles)
                                                           .enter()
                                                           .append("rect");
                                                           rectangles.append("text")
                                                           .attr("x", function(d) { return  100 })
                                                           .attr("y", 200)
                                                           .attr("dy", ".35em")
                                                           .attr('fill', 'red')
                                                           
                                var rectangleAttributes = rectangles
                                                                  .attr("x", function (d,i) { 
                                                                      if(i==0){
                                                                         d.x=0;
                                                                      } 
                                                                      if(i==1)
                                                                      {
                                                                         d.x=(((jsonRectangles[i-1].commited)*580)/100);
                                                                      }
                                                                      if(i==2)
                                                                     {
                                                                         d.x= (((jsonRectangles[i-2].commited)*580)/100) + (((jsonRectangles

[i-1].available)*580)/100);
                                                                     }
                                                                     
                                                                      if(i==3)
                                                                     {
                                                                         d.x= (((jsonRectangles[i-3].commited)*580)/100) + (((jsonRectangles

[i-2].available)*580)/100) + (((jsonRectangles[i-1].onorder)*580)/100);
                                                                     }
                                                                     
                                                                         return d.x;
                                                                })
                                                                .attr("y", function (d) { return 10; })
                                                                 .attr("height", function (d) { return 50; })
                                                                 .attr("width", function (d,i) {
                                                                        if(i==0)
                                                                        {
                                                                        d.width=d.commited + "%";
                                                                        }
                                                                        if(i==1)
                                                                        {
                                                                        d.width=d.available + "%";
                                                                        }
                                                                        if(i==2)
                                                                        {
                                                                        d.width=d.onorder + "%";
                                                                        }
                                                                        return d.width;                 
                                                                   })
                                                                  .style("fill", function(d) { return d.color; });
                                                              
                       /* rectangle  node */   
                       
                       var svgContainer1 = d3.select("#loadPartWrapper1").append("svg")
                                        .attr("width", 580 + "px")
                                        .attr("height", 36 + "px")
                                        .attr("class","rectanglecont1")
                                        
                       var rectangles = svgContainer1.selectAll("rect")
                                                          .data(jsonRectangles1)
                                                          .enter()
                                                          .append("rect");
                                                          
                      var rectangleAttributes = rectangles
                                                              .attr("x", function (d) { 
                                                                  d.x=0;
                                                                  return d.x;
                                                              })
                                                              .attr("y", function (d) { return 10; })
                                                              .attr("height", function (d) { return 50; })
                                                              .attr("width", function (d) {
                                                                    d.width=d.commited + "%";
                                                                    return d.width;                 
                                                               })
                                                              .style("fill", function(d) { return d.color; });
                                                              
                    var svg = d3.select('#loadPartWrapper1')
                                                    .append('svg')
                                                    .attr({'width':580 + "px",'height':30 + "px"})
                                                    .attr("class","inorder_tringle");
                                                    
                     var arc = d3.svg.symbol().type('triangle-down')
                                                        .size(function(d){ return scale(d); });
                                            var data = [.5];
                                            var scale = d3.scale.linear()
                                                        .domain([1,8])
                                                        .range([100,580]);
                                            var group = svg.append('g');
                                            
                                            if(instock_tringle != 0 )
                                            	group.attr('transform','translate('+( (instock_tringle)/2) +','+ 10 +')'); 
                                            else
                                            	group.attr('transform','translate('+( (instock_tringle)/2 + 5) +','+ 10 +')'); 
                                            var line = group.selectAll('path')
                                                    .data(data)
                                                    .enter()
                                                    .append('path')
                                                    .attr('d',arc)
                                                    .attr('stroke',"#71BF3E")
                                                    .style("fill","#71BF3E")
                                                    .attr('stroke-width',1)
                                                    .attr('transform',function(d,i){ return "translate("+(i*38)+","+(10)+")"; });
                                           var textsvg=d3.select('#loadPartWrapper1')
                                                        .append('svg')
                                                        .data(jsonRectangles)
                                                        .attr("class","instocktext")
                                                        .attr({'width':580 + "px",'height':30 + "px"});
                                           
                                           if(instock_tringle >= 0) 
                                           {
                                            /* displaying text */  
                                            textsvg.append("text")
                                             .attr("dx", function (d,i) {
                                                    var p;
                                                   
                                                    if(instock_tringle<60)
                                                    {
                                                    	p=0;
                                                    }else
                                                    {
	                                                    debug(instock_tringle);
	                                                    p=((instock_tringle)/2)-40;
                                                    }
                                                    return p;
                                             })
                                            .attr("dy", 30)  
                                            .style('fill', "#71BF3E")
                                            .text(function(d) { return inStock});
                                            
                                             /* displaying quantity */                    
                                           textsvg.append("text").attr("dx", function (d,i) {
                                           									var p;
							                                                  if(instock_tringle<60)
							                                                    {
							                                                    	p=0;
							                                                    }else
							                                                    {
								                                                    debug(instock_tringle);
								                                                    p=((instock_tringle)/2)-40;
							                                                    }
							                                                    return (p+70); 
							                                             })
														                 .attr("dy", 30)
														                 .attr("font-weight", "bold")
														                 .style('fill', "#71BF3E")
														                 .text( function (d) { return instocktotal });
                                     	
                                    } 
                                    
	            }else{
	            	
	            	$scope.PartPopUpOnLoad.isZeroTotalValue = true;
	            	debug("in else : isZeroTotalValue :"+$scope.PartPopUpOnLoad.isZeroTotalValue);
	            }    
                //////////////////////widget2///////////////////////
                var reOrder =0;  var isSmaller=false;;
                
                debug("$scope.PartPopUpOnLoad.partModel.QtyAvailable : "+$scope.PartPopUpOnLoad.partModel.QtyAvailable);
                debug("$scope.PartPopUpOnLoad.partModel.QtyOnOrder : "+$scope.PartPopUpOnLoad.partModel.QtyOnOrder);
                
                var available=$scope.PartPopUpOnLoad.partModel.QtyAvailable;
                var onorder=$scope.PartPopUpOnLoad.partModel.QtyOnOrder;
                
                var max1 = 0;
                if(available < 0){
                	if(Math.abs(available)>max1)
                		max1 = Math.abs(available);
                }
                if(onorder < 0){
                	if(Math.abs(onorder)>max1)
                		max1 = Math.abs(onorder);
                }
                available = available + max1;
                onorder = onorder + max1;
                
                
                var reorderAt = $scope.PartPopUpOnLoad.partModel.AutoReorderAt;
                var reorderTo = $scope.PartPopUpOnLoad.partModel.AutoReorderTo;
                
                debug("reorderAt : "+reorderAt);
                 debug("reorderTo : "+reorderTo);
                
                var total_value1 = 0;
                var jsonRectangles2 = [ {  "color" : "#727983" , "available" : available  },
                                       {  "color" : "#939CA9" , "onorder" : onorder},
                                       {  "color" : "white" , "reOrder": reOrder  }];
                if((onorder + available) > reorderTo ){
                    total_value1 = onorder + available;
                    debug("in if");
                }
                else{
                    total_value1 = 1.5 * reorderTo;
                    isSmaller = true;
                    debug("in else");
                }
                debug("jsonRectangles2[0].available : "+jsonRectangles2[0].available);
                debug("jsonRectangles2[1].onorder : "+jsonRectangles2[1].onorder);
                debug("total_value1 : "+total_value1);
                
                if(total_value1 != 0){
	                jsonRectangles2[0].available = ((jsonRectangles2[0].available)/total_value1)*100;
	                jsonRectangles2[1].onorder  = ((jsonRectangles2[1].onorder)/total_value1)*100;
	                
	                debug("jsonRectangles2[0].available : "+jsonRectangles2[0].available);
	                debug("jsonRectangles2[1].onorder : "+jsonRectangles2[1].onorder);
	                
	                jsonRectangles2[2].reOrder = 0;
	                if(isSmaller)
	                	jsonRectangles2[2].reOrder = 100 - (jsonRectangles2[0].available + jsonRectangles2[1].onorder);
	                
	                var ft4=(580*jsonRectangles2[0].available)/100;
	                var ft5=(580*jsonRectangles2[1].onorder)/100;
	                var ft6 = 0;
	                if(isSmaller)
	                	ft6 = 580-(ft4+ft5); 
	                	
	                debug("ft4 : "+ft4);
	                debug("ft5 : "+ft5);
	                debug("ft6 : "+ft6);
	                
	                var reorderAtName= "REORDER MIN:" ;
	                var reorderToName= "REORDER TO:" ;
	                              
	                var ft7 = (reorderAt*580)/total_value1; 
	                var ft8 = (reorderTo*580)/total_value1;
	                debug("ft7 : "+ft7);
	                debug("ft8 : "+ft8);
	                
	                var availablename= "AVAILABLE:" ;
	                var onordername= "ON ORDER:" ;
	                
	            	/* text node */
	                var textsvg1=d3.select('#loadPartWrapper2')
	                                .append('svg')
	                                .data(jsonRectangles2)
	                                .attr({'width':580 + "px",'height':45 + "px"});
	                                    
	                                    if(jsonRectangles2[0].available >= 0) 
	                                    {
	                                      /* displaying name */      
	                                             textsvg1.append("text")
	                                            .attr("dx", function (d,i) {
	                                                    var p;
	                                                     if(ft4<100)
	                                                    {
	                                                    p=0;
	                                                    } else if((580-ft4)>500){
	                                                    	p = 450;
	                                                    } else
	                                                    {
	                                                    debug(ft4);
	                                                    p=(ft4/2)-50;
	                                                    }
	                                                    return p;
	                                             })
	                                            .attr("dy", 25) 
	                                            .style('fill', "#414449")
	                                            .text(function(d) { return availablename});
	                                            
	                                            
	                                            /* displaying quantity */                    
	                                           textsvg1.append("text").attr("dx", function (d,i) {
								                                                   var p;
								                                                     if(ft4<100)
								                                                    {
								                                                    p=0;
								                                                    } else if((580-ft4)>500){
								                                                    	p = 450;
								                                                    } else
								                                                    {
								                                                    debug(ft4);
								                                                    p=(ft4/2)-50;
								                                                    }
								                                                    return (p+80); 
								                                             })
															                 .attr("dy", 25)
															                 .attr("font-weight", "bold")
															                 .style('fill', "#414449")
															                 .text( function (d) { return $scope.PartPopUpOnLoad.partModel.QtyAvailable }); 
	                                     	
	                                     }
	                                
	                                    if(jsonRectangles2[1].onorder >= 0)
	                                    {
	                                    /* displaying quantity */     
	                                            textsvg1.append("text")
	                                            .attr("dx", function (d,i) {
	                                                    var p;
	                                                   
	                                                    if(ft5>=480)
	                                                    {
	                                                    	p = 450;
	                                                    } 
	                                                    else if((ft5<480)&&(ft5>100)){
	                                                    	p=ft4 + (ft5/2)-50;
	                                                    }
	                                                    else if((ft5<=100)&&(ft4!=0)){
	                                                    	p=ft4 + (ft5/2)-110;
	                                                    }
	                                                    else if((ft5<=100)&&(ft4==0))
									                        p=0;
	                                                    return p; 
	                                             })
	                                            .attr("dy", 45)
	                                            .style('fill', "#727983")
	                                            .text(function(d) { return onordername});
	                                            
	                                             /* displaying quantity */                    
	                                           textsvg1.append("text").attr("dx", function (d,i) {
								                                                   var p;
								                                                     
									                                                    if(ft5>=480)
									                                                    {
									                                                    	p = 450;
									                                                    } 
									                                                    else if((ft5<480)&&(ft5>100)){
									                                                    	p=ft4 + (ft5/2)-50;
									                                                    }
									                                                    else if((ft5<=100)&&(ft4!=0)){
									                                                    	p=ft4 + (ft5/2)-110;
									                                                    }
									                                                    else if((ft5<=100)&&(ft4==0))
									                                                    	p=0;
								                                                    return (p+85); 
								                                             })
															                 .attr("dy", 45)
															                 .attr("font-weight", "bold")
															                 .style('fill', "#727983")
															                 .text( function (d) { return $scope.PartPopUpOnLoad.partModel.QtyOnOrder });
	                                     	
	                                     }
	                        
	                                
	                /* text node */  
	                      /* Tringle  node */       
	                         
	                    var svg = d3.select('#loadPartWrapper2')
	                               .append('svg')
	                               .attr({'width':580 + "px",'height':25 + "px"});
	                                
	                                if(jsonRectangles2[0].available >= 0) 
	                                {
	                                        var arc = d3.svg.symbol().type('triangle-up')
	                                                  .size(function(d){ return scale(d); });
	                                        var data = [.5];
	                                        var scale = d3.scale.linear()
	                                                    .domain([1,8])
	                                                    .range([100,580]);
	                                        var group = svg.append('g');
	                                        
	                                        
	                                        if(ft4 != 0)
	                                        	group.attr('transform','translate('+ ft4/2  +','+ 10 +')');
	                                        else
	                                        	group.attr('transform','translate('+ (ft4/2 + 5)  +','+ 10 +')');
	                                                    
	                                         var line = group.selectAll('path')
	                                                .data(data)
	                                                .enter()
	                                                .append('path')
	                                                .attr('d',arc)
	                                                .attr('stroke','#FFF')
	                                                .style("fill","#414449")
	                                                .attr('stroke-width',1)
	                                                .attr('transform',function(d,i){ return "translate("+(i*38)+","+(5)+")"; });
	                                 } 
	                            
	                                if(jsonRectangles2[1].onorder >= 0) 
	                                {
	                                        var arc = d3.svg.symbol().type('triangle-up')
	                                                  .size(function(d){ return scale(d); });
	                                        var data = [.5];
	                                        var scale = d3.scale.linear()
	                                                    .domain([1,8])
	                                                    .range([100,580]);
	                                        var group = svg.append('g');
	                                        
	                                        if(ft5 != 0)
	                                        	group.attr('transform','translate('+ (ft4 + (ft5/2) ) +','+ 10 +')');
	                                        else
	                                        	group.attr('transform','translate('+ (ft4 + (ft5/2) - 5) +','+ 10 +')');
	                                                   
	                                                   
	                                        var line = group.selectAll('path')
	                                                    .data(data)
	                                                    .enter()
	                                                    .append('path')
	                                                    .attr('d',arc)
	                                                    .attr('stroke','#FFF')
	                                                    .style("fill","#727983")
	                                                    .attr('stroke-width',1)
	                                                    .attr('transform',function(d,i){ return "translate("+(i*38)+","+(5)+")"; });
	                                    }    
	                                    
	                                     /* Tringle  node */   
	                                     
	                                            /* rectangle  node */   
	                                                          
	                       var svgContainer2 = d3.select("#loadPartWrapper2").append("svg")
	                                          .attr("width", 580 + "px")
	                                          .attr("height", 36 + "px")
	                                          .attr("class","rectanglecont")
	                                                                                    
	                                          var rectangles = svgContainer2.selectAll("rect")
	                                                           .data(jsonRectangles2)
	                                                           .enter()
	                                                           .append("rect");
	                                                           rectangles.append("text")
	                                                           .attr("x", function(d) { return  100 })
	                                                           .attr("y", 200)
	                                                           .attr("dy", ".35em")
	                                                           .attr('fill', 'red')
	                                                           
	                                                            var rectangleAttributes = rectangles
	                                                                  .attr("x", function (d,i) { 
	                                                                      if(i==0){
	                                                                         d.x=0;
	                                                                      } 
	                                                                      if(i==1)
	                                                                      {
	                                                                         d.x=(((jsonRectangles2[i-1].available)*580)/100);
	                                                                         
	                                                                      }
	                                                                      if(i==2)
	                                                                     {
	                                                                         d.x= (((jsonRectangles2[i-2].available)*580)/100) + (((jsonRectangles2[i-1].onorder)*580)/100);
	                                                                     }
	                                                                     if(i==3)
	                                                                     {
	                                                                         d.x= (((jsonRectangles2[i-2].available)*580)/100) + (((jsonRectangles2[i-1].onorder)*580)/100) + (((jsonRectangles2[i-3].reOrder)*580)/100);
	                                                                     }
	                                                                      
	                                                                         return d.x;
	                                                                })
	                                                                 .attr("y", function (d) { return 10; })
	                                                                 .attr("height", function (d) { return 25; })
	                                                                 .attr("width", function (d,i) {
	                                                                        if(i==0)
	                                                                        {
	                                                                        d.width=d.available + "%";
	                                                                        }
	                                                                        if(i==1)
	                                                                        {
	                                                                        d.width=d.onorder + "%";
	                                                                        }
	                                                                        if(i==2)
	                                                                        {
	                                                                        d.width=d.reOrder + "%";
	                                                                        }
	                                                                        return d.width;                 
	                                                                   })
	                                                                   .attr("stroke-width", 1)
	                         											.attr("stroke", "rgb(114, 121, 131)")
	                                                                  .style("fill", function(d) { return d.color; });
	                                                                  
	                                                              
	                       //////////////////line////////////////
	                         var x1, x2;
	                        
	                         x1 = ft7;
	                         x2 = ft8;
	                         
	                         if(x1==0)
	                         	x1 = x1+5;
	                         if(x2==0)
	                         	x2 = x2+5; 
	                         debug("x1 : "+x1 +" x2 : "+x2);
	                        //Draw the line
	                        // white
	 var lineMin = svgContainer2.append("line")
	                          .attr("x1", x1)
	                          .attr("y1", 10)
	                         .attr("x2", x1)
	                         .attr("y2", 27)
	                         .attr("stroke-width", 2)
	                         
	if((onorder + available) < reorderAt ){
		lineMin.attr("stroke", "rgb(114, 121, 131)");// black
	}else{
		lineMin.attr("stroke", "rgb(227, 227, 228)");// white
	}
	                         
	              
	                         
	 ////////triangle bottom at min
	 if(reorderAt>=0)//>
	 {
	                                        var arc = d3.svg.symbol().type('triangle-up')
	                                                  .size(function(d){ return scale(d); });
	                                        var data = [.5];
	                                        var scale = d3.scale.linear()
	                                                    .domain([1,8])
	                                                    .range([100,580]);
	                                        var group = svgContainer2.append('g').attr('transform','translate('+ (x1) +','+ 27 +')');           
	                                         var line = group.selectAll('path')
	                                                .data(data)
	                                                .enter()
	                                                .append('path')
	                                                .attr('d',arc)
	                                                .attr('stroke',"rgb(179, 180, 181)")
	                                                .style("fill","white")
	                                                .attr('stroke-width',2)
	                                                .attr('transform',function(d,i){ return "translate("+(i*38)+","+(5)+")"; })
	                                                .attr("id", "minTriangle"); 
	                                 } 
	 ////////triangle bottom at min                    
	                      
	 var lineMax = svgContainer2.append("line")
	                          .attr("x1", x2)
	                          .attr("y1", 10)
	                         .attr("x2", x2)
	                         .attr("y2", 27)
	                         .attr("stroke-width", 2);
	                        
	                         
	 if(isSmaller)
	 	lineMax.attr("stroke", "rgb(114, 121, 131)");// black
	 else
	 	lineMax.attr("stroke", "rgb(227, 227, 228)");// white
	 	
	 	
	
	
	 ////////triangle bottom at max
	 if(reorderTo>=0)//>
	 {
	                                        var arc = d3.svg.symbol().type('triangle-up')
	                                                  .size(function(d){ return scale(d); });
	                                        var data = [.5];
	                                        var scale = d3.scale.linear()
	                                                    .domain([1,8])
	                                                    .range([100,580]);
	                                        var group = svgContainer2.append('g').attr('transform','translate('+ x2 +','+ 27 +')');
	                                        
	                                       
	                                         var line = group.selectAll('path')
	                                                .data(data)
	                                                .enter()
	                                                .append('path')
	                                                .attr('d',arc)
	                                                .attr('stroke',"rgb(179, 180, 181)")
	                                                .style("fill","white")
	                                                .attr('stroke-width',2)
	                                                .attr('transform',function(d,i){ return "translate("+(i*38)+","+(5)+")"; })
	                                                .attr("id", "maxTriangle"); 
	                                 } 
	 ////////triangle bottom at max  
	                       //////////////////line////////////////
	                                            
	                       /* rectangle  node */   
	                                             
	                         
	                    
	                                    
	                                 var textsvg2=d3.select('#loadPartWrapper2')
	                                .append('svg')
	                                .data(jsonRectangles2)
	                                .attr({'width':580 + "px",'height':45 + "px"});
	                                   
	                                 if(reorderAt>=0)//>
	                                 {
	                                 	 /* displaying name */  
	                                      textsvg2.append("text")
	                                             .attr("dx", function (d,i) {
	                                                    var p;
	                                                    if(ft7<60)
	                                                    {
	                                                    	p=0;
	                                                    } 
	                                                    else
	                                                    {
		                                                    debug(ft7);
		                                                    p=ft7-60;
	                                                    }
	                                                   return p;
	                                             })
	                                            .attr("dy", 45)
	                                            .style('fill', "#939CA9")
	                                            .text(function(d) { return reorderAtName});
	                                            
	                                           /* displaying quantity */                    
	                                           textsvg2.append("text").attr("dx", function (d,i) {
								                        var p;
								                        if(ft7<60)
	                                                    {
	                                                    	p=0;
	                                                    } 
	                                                    else
	                                                    {
		                                                    debug(ft7);
		                                                    p=ft7-60;
	                                                    }
								                        return (p+105); 
								                     })
													.attr("dy", 45)
													.attr("font-weight", "bold")
													.style('fill', "#939CA9")
													.text( function (d) { return $scope.PartPopUpOnLoad.partModel.AutoReorderAt });
	                                     	
	                                    } 
	                                    
	                                    if(reorderTo>=0)//>
	                                    {
	                                    	/* displaying name */
	                                        textsvg2.append("text")
	                                             .attr("dx", function (d,i) {
	                                                    var p;
	                                                    if(ft8<60)
	                                                    {
	                                                    	p=ft7 + (ft8/2);
	                                                    }
	                                                    else
	                                                    {
	                                                    	p=ft8-90;
	                                                    }
	                                                    return p;
	                                             })
	                                            .attr("dy", 25)
	                                            .style('fill', "#939CA9")
	                                            .text(function(d) { return reorderToName});
	                                        
	                                           /* displaying quantity */                    
	                                           textsvg2.append("text").attr("dx", function (d,i) {
								                        var p;
								                        if(ft8<60)
	                                                    {
	                                                    	p=ft7 + (ft8/2);
	                                                    }
	                                                    else
	                                                    {
	                                                    	p=ft8-90;
	                                                    }
								                        return (p+100); 
								                     })
													.attr("dy", 25)
													.attr("font-weight", "bold")
													.style('fill', "#939CA9")
													.text( function (d) { return $scope.PartPopUpOnLoad.partModel.AutoReorderTo });
	                                    } 
	                                    
	               //////////////////////widget2///////////////////////          
	               }
	               else{
	                	$scope.PartPopUpOnLoad.isZeroTotalValue1 = true;
	               }         
             }
          }); 
          
          
          PartPopUpModuleOnLoad.service("partOrderReceivingService", function ($q) {

            //Get Part popup Data
            this.getPartRecord = function (partId){
            	partId = encodeString(partId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.getPartByPartId}',
                                partId,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var partRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            partRec = partRec.replace(re, '');
                            deferred.resolve(JSON.parse(partRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
         });  
        </script>
        
        <div class="Vendor-Order-Part-PopupNew PartPopupOnVenderOrdernew pull-left"  ng-controller="newPartCtrl" id="PartInfoPopupOnVenderOrder" >
            <div>
                <div class="row clearfix" style="height:20px;">
                </div> 
                 
                <div class="vendorOrder-flyout partPopUp-flyout" ng-show="PartPopUpOnLoad.item=='CurrentStock'">
                	<div ng-if="!PartPopUpOnLoad.isZeroTotalValue" class="widgetAvailable">
	                	<div id="loadPartWrapper"></div>
	                    <div id="loadPartWrapper1"></div>
                    </div>
                    <div ng-if="PartPopUpOnLoad.isZeroTotalValue" class="widgetUnAvailable T6">There is no inventory for this part</div>
                </div> 
                <div class="vendorOrder-flyout partPopUp-flyout" ng-show="PartPopUpOnLoad.item=='Ordering'">
                	<div ng-if="!PartPopUpOnLoad.isZeroTotalValue1" class="widgetAvailable">
	                	<div id="loadPartWrapper2">
	                	</div>
	                </div>
	                <div ng-if="PartPopUpOnLoad.isZeroTotalValue1" class="widgetUnAvailable T6">There is no inventory for this part</div>
                </div>     
        	</div>  
        </div>
        
</apex:component>