<apex:page standardStylesheets="false"
           showChat="false" showHeader="false" sidebar="false" Controller="VendorOrderCtrl">
    
<html ng-app="vendorOrderApp">
    <head>
        <title>{!$Label.Vendor_Order}</title>  
    </head>

    <c:Css_and_Js ></c:Css_and_Js> 
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.0-beta.6/angular-animate.js"></script>
    <apex:includeScript value="{!$Resource.d3}"/>
    <apex:includeScript value="{!$Resource.JqueryUI}"/>
     <script src="https://rawgithub.com/brandonaaron/jquery-mousewheel/master/jquery.mousewheel.js"></script>
     <c:VendorInfo />
    <c:Price_mini_page_layout ></c:Price_mini_page_layout>
    <c:Customer_mini_page_layout />
    <c:Invoice_mini_page_layout />
    <c:AutoCompleteSuggestion /> 
    <c:NewDirPagination /> 
  	<c:NewVendorOrderPopUp />
    <c:NewVenderOrderLineItemPartDetail /> 
   	<c:NewVendorOrderStyle />
    <c:NewCOPopup />
    <c:NewPartPopUpOnVendorOrder />
    
    <style>
    body {
	    font-size: 14px;
	}
    	 .volineItem_row_item .secondchild .form-control{
    	height:25px;
    	text-align: center;
    }
    .subEdit .thirdchild{
    	margin-left: 3%;
    }
    .subEdit .firstchild {
	    margin-left: 2%;
	    width: 26%;
    }   
    .subEdit{
    	background: #fff;
    }
    .subEdit .edit-service-item{
    	padding-top:2px;
    	padding-bottom:2px;
    	width:97.5%;
    }
    .subEdit .edit-service-item .serviceitemedit {
	    border: 1px solid #BBE5F9;
	    height: 160px;
	    transition: all 0.5s ease;
	}
	.subEdit .edit-service-item .serviceitemedit .its-heading {
	    position: static;
	    min-width:175px;
	    font-size: 14px;
	    color: #939CA9;
	    font-weight: bold;
	}
	.subEdit .serviceitemedit .edit-body .radio label,.subEdit .checkbox label {
	    padding: 0;
	    height: 30px;
	}
	.subEdit .edit_panel .edit_box .edit-body .editform_btn:after{/* .subEdit .its-heading:after{ */
		content:'';
		width: 0;
        height: 0;
        border-style: none;
        border-width: 0px;
        border-color: transparent;
        position: absolute;
        right: 0px;
        top: 0px;
	}
    .subEdit .edit_panel .edit_box .edit-body .editform_btn{
    	height: initial;
	    right: auto;
	    width: 70px;
	    top: 120px;
	    position: absolute;
	    color: #333;
	    background-color: #fff;
	    border:1px solid #ccc;
	    background: none;
	    padding: 6px 12px;
	    bottom: initial;
	}
	.subEdit .edit_panel .edit_box {
		margin-left: 15px;
    }
    .subEdit .edit_panel .edit_box .edit-body {
	    margin: 15px 26px 15px 0px;
	}
    /* end style for edit section */
    
    /* style added for headers */
    .actionRowForOrder .ActionIcons{
    	display: inline-block;
    } 
    /* end style for headers */
    .bgRed {
	    background: #DE0F0F;
	}
    /* style added for vendorName in left panel */
    .vendorName{
    	color: #337ab7;
    }
    /* end style for vendorName in left panel */
    /* style added for available inventory */
    .available_td, .edit-service-item{
    	padding-left:0px;
    	padding-right:0px;
    }
    .gid_container_Customer table tr.edit_panel td {
	    overflow: hidden;
	    height: 0;
	    padding-top: 5px;
	}
	.gid_container_Customer table tr.edit_panel td.edit-service-item .serviceitemedit {
	    border: 1px solid #BBE5F9;
	    height: 160px;
	    transition: all 0.5s ease;
	}
	.gid_container_Customer table tr.edit_panel td.edit-service-item .serviceitemedit .its-heading {
	    position: static;
	}
	.gid_container_Customer table tr.edit_panel td .serviceitemedit .edit-body {
	    margin: 15px 26px 15px 0px;
	}
	.gid_container_Customer table tr.edit_panel td .serviceitemedit .edit-body .radio label, .checkbox label {
	    padding: 0;
	    height: 30px;
	}
	.edit-service-chek {
	    margin: 0;
	    margin-right: 10px;
	}
	.chk_tick {
	    width: 20px !important;
	    height: 20px !important;
	    border-radius: 4px;
	    border: 1px solid #cccccc;
	    display: block;
	    float: left;
	    cursor: pointer;
	}
	.chk_tick .chksqure {
	    font-size: 0px;
	    height: 12px;
	    width: 12px;
	    margin: 3px;
	    border-radius: 2px;
	    background: #D8D8D8;
	}
	.chked .chksqure {
	    font-size: 0px !important;
	    height: 12px;
	    width: 12px;
	    margin: 3px;
	    border-radius: 2px;
	    background: #71BF3E;
	}
	.gid_container_Customer table tr.edit_panel td .serviceitemedit .edit-body .radio label, .checkbox label {
	    padding: 0;
	    height: 30px;
	}
	.gid_container_Customer table tr.edit_panel td .serviceitemedit .edit-body .editform_btn  {
	    right: auto;
	    width: 70px;
	    top: 120px;
	    position: absolute;
	}
	.gid_container_Customer table tr.edit_panel td .edit_box{
		margin: 10px 0px;
	    position: relative;
	}
    /* end style for available inventory */
    
    /* style added for grid */
    .Finalize_Container  /* ,.ReceivingHistory_Container */
    {
    	margin:0 0 48px 0;
    }
    /* end style for grid */
    
    /* style added for img in grid */
    .clickable_row .first_img {
	    height: 30px;
	}
	/* end style for img in grid */
	
    /* style added for vendor name in left panel */
    .userNameblock .vendorName:hover{
    	text-decoration : none;
    }
    /* style added for vendor name in left panel */
    
    /* style added for fixed header */
    .fixedHeaderText {
	    padding: 0 5px 0 10px;
	    margin-top: 7px;
	    width: 500px;
	    background: #FFFFFF;
	    height: 41px;
	    border-top-right-radius: 2px;
	    border-top-left-radius: 2px;
	    border-top: 1px solid #D1D2D2;
	    border-left: 1px solid #D1D2D2;
	    border-right: 1px solid #D1D2D2;
	}
	.fixedContent {
	    padding: 9px;
	    position: fixed;
	    top: 50px;
	    right: 0;
	    width: 45%;
	    z-index: 99;
	}
	.fixedHeaderText .T2.ng-binding {
	    text-transform: capitalize;
	}
    /* end style for fixed header */
    
    /* style added for submit order button in finalize section */
    .finalizeInvoiceBtnSection .C5 {
	    background-color: #B7BEC6;
	}
    /* end style for submit order button in finalize section */
    
    /* style added for scroll bar in left side panel */
    .sidePanel .leftPanelLinks:hover {
	    overflow: auto;
	}
	.sidePanel .leftPanelLinks {
	    overflow: hidden;
	}
	/* end style for scroll bar in left side panel */
    
    /* style added for icons in grid */
    .clickable_row .first_icon {
	    margin-top: 9px;
	}
	/* end style for icons in grid */
    
    .gid_container_Customer .table th {
	    border: none;
	    padding-top: 15px;
	    padding-bottom: 15px;
	}
	
    /* style added for pagination */
    .pagination_container{
    	margin-left: 10px;
    	margin-right: 0;
    } 
    /* end style for pagination */
    
    /* style added for no records found */
    .gid_container{
    	padding-left:44px;
    }
    /* end style for no records found */
       
    /* style added for nice scroll */
    ::-webkit-scrollbar{
        width: 11px;
        height: 20px;
    }
    ::-webkit-scrollbar-button{
        background: #ECF0F1;
    }
    ::-webkit-scrollbar-track-piece{
    	background: #ECF0F1;
    }
    ::-webkit-scrollbar-thumb{
        background: #B7BEC6;
    	border-radius : 3px;
    	border: 1px solid #fff;
    } 
    /* end style for nice scroll */
        
    /* added to fa icon for positioning search box */
    .fixedContent .searchBox {
	    width: 70%;/*60%;*/
	    padding-left: 0;
	    padding-right: 0;
	}
	
	.searchToAdd .activeSearchDiv{
    	border:2px solid #00AEEF; 
    }
    /* end of positioning search box */
            
    /* added style for side panel */
    .sidePanel{
    	padding: 0;
    	color: #939CA9;
    }
    .sidePanel .leftPanelLinks .active:after{
    	content: none; 
    }
    .sidePanel .orderNumber{
        height: 48px;
        background-color: #E6EBEC;
        color: #00AEEF;
        font-weight: bold;
        padding: 15px 20px;
        margin-bottom: 20px;
    }
    .ownerInfo{
    	padding: 5px 10px 5px 20px;
        border-top: 2px solid #ECF0F1;
        color: #939CA9;
        border-bottom: 2px solid #ECF0F1;
    }
    .ownerInfo .Name{
      	margin-left: 20px;
    }		
	/* .statusRow{
		margin: 5px 0px 10px 20px !important;
	}  */
    .sideBarTotals{
    	position: fixed;
        bottom: 10px;
        width: 16.6%;
        border-top: 2px solid #ECF0F1;
    }
    .orderleftPanelLinks .ordertotal, .totalDue{padding:12px 20px;}
    .orderleftPanelLinks, .totalDue{padding-bottom:20px;}
    .orderleftPanelLinks .ordertotal a:hover, .totalDue a:hover{text-decoration:none;}
    .orderleftPanelLinks .ordertotal a, .totalDue a {
    	width:48%; float:left;
        text-transform: uppercase;
        text-decoration:none;
    }
    .orderType{
        margin: 0 5px;
    	color: #939CA9;
    }
	/* .userStatus {
	    margin: 0 10px 0 5px;
	    color: #71BF3E;
	   
	} */
	.userNameblock .T3 {
	    margin: 0 5px 0 0;
	}		
	.userNameblock p {
	    margin: 0;
	}
	.userNameblock{
		text-transform:capitalize;
		margin-top:0px;
	}
	
	/* style added for lock button */		
	.Servicegray {
	    background: #A5AFB1;
	    padding: 3px 7px;
	    color: #FFF;
	    text-transform: uppercase;
	    border: none;
	    margin-left:4px;
	    margin-bottom: 8px;
	}
	/* end style for lock button */
	
    /* end style for side panel */
        
    /* style added for action button */
    .actionRow .actionText {
    	margin-left: 5px;
        color: #939CA9;
        background-color: #F6F7F9;
        padding:0px 5px 2px 5px;
    }
    /* end style for action button */
       
    /* style added for fa-icons */
    .fixedContent .fa-refresh , .fixedContent .fa-floppy-o, .fixedContent .fa-cog
    {
    	color:#000
    }
    /* end style for fa-icons */
       
    /* style added for dates in general section left part */
    .date-type-container .form-label a{
		padding-left:5px;
	}
	/* end style for dates in general section left part */
				
	/* style added for dates and order type in general section left part */
	.order-type-container span, .date-type-container span{
		width:22%;
	}
	/*  end style for dates and order type in general section left part  */
		
	/* style added for order section */
	.main_section_COU {
        margin-bottom: 24px;
        margin-top: 24px;
    }
    .gid_container_Customer .table {
    	border: 0;
    }
    .gid_container_Customer .tableHeader {
    	margin-left: -15px;
    	margin-right: -15px;
	}
	.gid_container_Customer .table th {
    	border: none;
    	padding-top: 15px;
    	padding-bottom: 15px;
	}
	tr th {
    	text-transform: uppercase;
	}
	.gid_container_Customer .table tbody {
    	border: none;
	}
	.gid_container_Customer .table tbody > tr > td {
    	border: none;
    	padding-top: 2px;
    	padding-bottom: 2px;
    	vertical-align: middle;
	}
    /*  end style for order section */
    
    /* style added for fixed header */
    /* .fixedHeaderText .divider {
    	margin-top:0px;
    } */
    .fixedRow{
    	left:inherit;
    }
    
    /* style added for addnewItem */
    .addnewItem {
	    border: 1px dashed #939598;
	    margin: 20px 0;
	    text-align: center;
	    padding: 20px 0;
	}
	/* end style for addnewItem */
	
	/* style added for alignment of subEdit */
	.subEdit .volineItem_row_clickable .edit_panel {
		width: 100%;
    	margin-left: 0%;
	}
	.main_section_COU_Header .actionRow .actionText {
		cursor:pointer;
	}
    .FC2 {
	    color: #00AEEF;
	}
	.statusRow label{
		margin-right:5px;
	}
	.disabledSearchToAddElement .angucomplete-holder .form-control  {
		background: #dddddd;
		pointer-events: none;
	}			
	.disabledSearchToAddElement .angucomplete-holder .form-control .anguinput  {
		background: #dddddd;
	}
    </style>
    <script>
        var orderName = '';
        
        var vendorOrderApp = angular.module('vendorOrderApp', ['searchToAddModule', 'BPGlobalHeader', 'dir.listPagination', 'ngAnimate', 'ui-notification', 'PartPopUpModule', 'vendorInfo']); 
        
        //Directive to Restrict number only
        vendorOrderApp.directive('numberOnlyInput', function () {
            return {
                restrict: 'EA',
                template: '<input type="text" class="form-control" ng-model="inputValue" />',
                scope: {
                    inputValue: '='

                },
                link: function (scope) {
                    scope.$watch('inputValue', function(newValue,oldValue) {
                        var arr = String(newValue).split("");
                        var pieces = String(newValue).split(".");
                        if (arr.length === 0) return;
                        if (arr[0] == '-' && arr[1] != 0) {
                            return;
                        }
                        else if (isNaN(newValue)|| newValue == 0 || newValue == -0) {
                            scope.inputValue = oldValue;
                        }
                        else if(typeof(pieces[1]) != "undefined" && pieces[1].length > 2){
                            scope.inputValue = oldValue;
                        }
                    });
                }
            };
        });
        
        
        //controlller
        vendorOrderApp.controller('vendorOrderController', function ($scope, $sce, $q, $timeout, $rootScope, Notification, vendorOrderService) //, CustomerInfoService
        {
            //declarations
                       
            $scope.VendorOrderModel = {};
            
            $scope.VORModel = {};
            $scope.VORModel.VOR_Header = {};
            
 			$scope.VendorOrderModel.SelectedSection = {};
            $scope.VendorOrderModel.SelectedSection.item = 'Info';  
            // Set permission ability for current user
            $scope.VendorOrderModel.isPermittedToEditVOHeader = {!isPermittedToEditVOHeader};
            
            $scope.VendorOrderModel.VendorOrderHeader = {};
            $scope.VendorOrderModel.vendorOrderLineItemGroupList = {};
            $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = {};
            $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = {};
            $scope.VendorOrderModel.groupItems_editRow = [];
            $scope.VendorOrderModel.requiredForCustomerItems_editRow = [];
            $scope.VendorOrderModel.requiredForStockItems_editRow = [];
            $scope.FilterID="";
            $scope.SearchToadd = {};
            $scope.typeToSearch = "";
            $scope.PreferredObject = "Vendor";
            
            
            /******************************** new : helpText **********************************/
            $scope.VendorOrderModel.helpText = {    Order         :   '{!$Label.Order}',
            									Items		: '{!$Label.Items}',
                                                RequiredForCustomer        :   '{!$Label.Required_For_Customer}',
                                                RequiredForStock      :   '{!$Label.Required_For_Stock}', 
                                                StockExcess :   '{!$Label.Stock_Excess}',
                                                ReceivingHistory       :   '{!$Label.Receiving_History}',
                                                Finalize         :   '{!$Label.Finalize}'
                                                
                                    };
             /******************************** new : helpText **********************************/                       
            
            
           
            
            /*************************************** new - for search ***************************************/
             $scope.VendorOrderModel.resetHideResults = function () {
				$scope.VendorOrderModel.searchDivActive = true;
				
			};
			
			$scope.VendorOrderModel.hideResults = function () {
				$scope.VendorOrderModel.searchDivActive = false;	
			};
			
			$scope.VendorOrderModel.select = function () {
				$scope.VendorOrderModel.searchDivActive = true;
			};
            /*************************************** new - for search ***************************************/
             
            /*****************grey area******************/
            $scope.VendorOrderModel.displaySections = {
                'Info' : true,
                'Order' : true,
                'StockExcess' : true,
                'ReceivingHistory' : true,
                'Finalize' : true
            };  
             $scope.VendorOrderModel.activeSidepanelink = '#InfoSection';
            $scope.VendorOrderModel.selectedItem = 'Info'; 
            
            angular.element(document).off("scroll");
            angular.element(document).on("scroll", function () {
                $scope.VendorOrderModel.onScroll();
            });

            $scope.VendorOrderModel.sidepanelLink = function (event, relatedContent) {
                event.preventDefault();
                $scope.VendorOrderModel.displaySections[relatedContent] = true;
                angular.element(document).off("scroll");
                var target = angular.element(event.target.closest('a')).attr("href");
                debug("related content:"+relatedContent+"target:"+target);
                angular.element('html, body').stop().animate({
                    scrollTop : angular.element(target).offset().top - 120//110 //120
                }, 500, function () {
                    angular.element(document).on("scroll", function () {
                        $scope.VendorOrderModel.onScroll();
                    });
                    $scope.VendorOrderModel.onScroll();
                });
            }

            $scope.VendorOrderModel.onScroll = function () {
                var activeSidepanelink;
                var selectedItem;
                var heading = '';
                debug('****'+angular.element('#InfoSection').position().top);
                var scrollPos = angular.element(document).scrollTop();
                debug(scrollPos);
                //debug(angular.element('#OrderSection').position().top + angular.element('#OrderSection').height() + 50);
                if ((scrollPos < angular.element('#InfoSection').position().top + angular.element('#InfoSection').height() + 95) ||
                ($scope.VendorOrderModel.VendorOrderHeader.VendorId == null ) || ($scope.VendorOrderModel.VendorOrderHeader.VendorId == '')) //75//50
                {
                    activeSidepanelink = '#InfoSection';
                    selectedItem = 'Info';
                } else if (scrollPos < angular.element('#OrderSection').position().top + angular.element('#OrderSection').height() + 70)//50
                {
                    debug("inside OrderSection section");
                    activeSidepanelink = '#OrderSection';
                    selectedItem = 'Order';
                } else if (scrollPos < angular.element('#StockExcessSection').position().top + angular.element('#StockExcessSection').height() + 70) //50
                {
                	debug("inside stock section");
                	
                	if($scope.VendorOrderModel.StockExcessList != undefined && $scope.VendorOrderModel.StockExcessList.length != 0){
                		activeSidepanelink = '#StockExcessSection';
                    	selectedItem = 'StockExcess';
                	}
                	else{
                		if($scope.VendorOrderModel.VRHistoryList != undefined && $scope.VendorOrderModel.VRHistoryList.length != 0){
	                		activeSidepanelink = '#ReceivingHistorySection';
                    		selectedItem = 'ReceivingHistory';
	                	}
	                	else if($scope.VendorOrderModel.EnableFinaliseOrder() == true){
	                		activeSidepanelink = '#FinalizeSection';
                    		selectedItem = 'Finalize';
	                	}
	                	else {
	                		activeSidepanelink = '#OrderSection';
                    		selectedItem = 'Order';
	                	}
                		
                	}    
                } else if (scrollPos < angular.element('#ReceivingHistorySection').position().top + angular.element('#ReceivingHistorySection').height() + 70) //70
                {
                    if($scope.VendorOrderModel.VRHistoryList != undefined && $scope.VendorOrderModel.VRHistoryList.length != 0){
                		activeSidepanelink = '#ReceivingHistorySection';
                   		selectedItem = 'ReceivingHistory';
                	}
                	else if($scope.VendorOrderModel.EnableFinaliseOrder() == true){
                		activeSidepanelink = '#FinalizeSection';
                   		selectedItem = 'Finalize';
                	}
                	else {
                		activeSidepanelink = '#StockExcessSection';
                    	selectedItem = 'StockExcess';
                	}
                }else if (scrollPos < angular.element('#FinalizeSection').position().top + angular.element('#FinalizeSection').height() + 65) //50
                {
                    if($scope.VendorOrderModel.EnableFinaliseOrder() == true){
                		activeSidepanelink = '#FinalizeSection';
                   		selectedItem = 'Finalize';
                	}
                	else {
                		activeSidepanelink = '#ReceivingHistorySection';
                   		selectedItem = 'ReceivingHistory';
                	}
                } else {  
                    activeSidepanelink = '#FinalizeSection';
                     selectedItem = 'Finalize';
                }
                
                $scope.VendorOrderModel.activeSidepanelink = activeSidepanelink;
                $scope.VendorOrderModel.selectedItem = selectedItem;
                if (!$scope.$$phase) {
                    $scope.$digest();
                }
            }    
            
            
            $scope.VendorOrderModel.dropDownItem = function (event, selectedSection) {
                var activeSection = $scope.VendorOrderModel.activeSidepanelink.replace('#','');
                $scope.VendorOrderModel.selectedItem = selectedSection;
                if(activeSection != selectedSection) {
                    $scope.VendorOrderModel.sidepanelLink(event, selectedSection);
                    
                }
            }
             /*************************************** new - for scrolling ***************************************/
             

            // Map variable to hold order of sorting
            var sortOrderMap = {
                "ASC"   :   "DESC",
                "DESC"  :   ""
            };
            
            // Pagination and sort related JSON
            $scope.VendorOrderModel.itemsPageSortAttrsJSON = {};
            $scope.VendorOrderModel.customersPageSortAttrsJSON = {};
            $scope.VendorOrderModel.stocksPageSortAttrsJSON = {};
            //$scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON = {};//new-pg
            
            // Method to set default page sort attributes JSON
            $scope.VendorOrderModel.setDefaultPageSortAttrs = function() {
                
                $scope.VendorOrderModel.itemsPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "ItemDesc",
                        SortDirection   :   "ASC"
                    }]
                };
                try{
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
                
                $scope.VendorOrderModel.customersPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "Item",
                        SortDirection   :   "ASC"
                    }]
                };
                try{
                    $scope.VendorOrderModel.customersPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
                
                $scope.VendorOrderModel.stocksPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "Item",
                        SortDirection   :   "ASC"
                    }]
                };
                try{
                    $scope.VendorOrderModel.stocksPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
                
            }
            
            //refresh vendororder added by bidhu 
             $scope.VendorOrderModel.refreshVendorOrder = function(){
                 $scope.VendorOrderModel.isrefresh = true;
                 $scope.VendorOrderModel.loadVendor();
             }
             
             //start: customer flyout
             
            //end : customer flyout
            
            // start : side panel height adjusment according to screen size
            $scope.VendorOrderModel.calculateSidebarHeight = function(){
               	  var leftPanelLinks =  angular.element(window).height() - ( angular.element(".headerNav").height() + angular.element(".orderNumber").height() + angular.element(".sidepaneluserinfo").height() + angular.element(".statusRow").height() + angular.element(".ownerInfo").height() + angular.element(".sideBarTotals").height() + 65);//85
                  angular.element(".leftPanelLinks").css("height", leftPanelLinks);
               
            }
            // end : side panel height adjusment according to screen size
             
            //Load suggestion and items of a vender order
            $scope.VendorOrderModel.loadVendor = function () {
                $scope.VendorOrderModel.voHeaderId = "{!JSENCODE(URLENCODE($CurrentPage.parameters.id))}" ? "{!JSENCODE(URLENCODE($CurrentPage.parameters.id))}" : null;
                $scope.VendorOrderModel.setDefaultPageSortAttrs();
                $scope.SearchToAddCallback = $scope.VendorOrderModel.searchToAddCallback;
                
                if($scope.VendorOrderModel.VendorOrderHeader.VendorId==null || $scope.VendorOrderModel.VendorOrderHeader.VendorId == '') {
                	$scope.VendorOrderModel.populateLeftSideHeadingLables();
                }
                
/*                 setTimeout(function(){ angular.element('[data-toggle="tooltip"]').tooltip(); }, 1000);
 */             $scope.VendorOrderModel.loadAllGridDetails();
				debug("tool tip");
				/* debug(angular.element('[data-toggle="tooltip"]').tooltip()); */
 					
                /*************************************** new - for search ***************************************/
             	$scope.VendorOrderModel.searchDivActive = false;
       			$scope.VendorOrderModel.hideTimer = null;
       			$scope.VendorOrderModel.pause = 500;
             /*************************************** new - for search ***************************************/
             // start : side panel height adjusment according to screen size
             	setTimeout(function(){ $scope.VendorOrderModel.calculateSidebarHeight(); }, 10); 
             // end : side panel height adjusment according to screen size
             
              	setTimeout(function(){ angular.element('[data-toggle="tooltip"]').tooltip({placement : 'bottom'}); }, 2000);//angular.element('[data-toggle="tooltip"]').tooltip({placement : 'bottom'});
             	debug("$scope.VendorOrderModel.VendorOrderHeader : "+JSON.stringify($scope.VendorOrderModel.VendorOrderHeader));
             	// $scope.VendorOrderModel.VendorOrderHeader.OrderType = 'STANDARD';
            }
            
            $scope.VendorOrderModel.hidePanel = function(event, id){
                    var targetelement = angular.element(event.target).closest('h1').find('.fa:first');
                    if(targetelement.hasClass('fa-chevron-right')){
                        targetelement.removeClass('fa-chevron-right');
                        targetelement.addClass('fa-chevron-down');
                    } else {
                        targetelement.removeClass('fa-chevron-down');
                        targetelement.addClass('fa-chevron-right');
                    }
                    $('#'+id).toggle();
            }
            
            $scope.VendorOrderModel.loadAllGridDetails = function() {
                if ($scope.VendorOrderModel.voHeaderId != null) {
                    var RequiredType=null 
                    //Called service to get Vendor Order line
                    // new-pg   $scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON,
                    vendorOrderService.getVOLineItem($scope.VendorOrderModel.voHeaderId, 
                                                     $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                     $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                     $scope.VendorOrderModel.stocksPageSortAttrsJSON,
                                                    
                                                     RequiredType
                                                    )
                    .then(function (successfulResult) {
                    debug("successfull");
                    debug(successfulResult);
                        $scope.VendorOrderModel.populatePageModels(successfulResult);
                        $scope.VendorOrderModel.isrefresh = false;
                          
                    });
                }
               
            }
            
            // Add Vendor callback method
            $scope.VendorOrderModel.addVendor = function (selectedVendorId) {
          
                $scope.VendorOrderModel.setDefaultPageSortAttrs();
                
                //Called service to get Vendor Order line
                //new-pg    ,$scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON
                vendorOrderService.addVendor(selectedVendorId,
                                             $scope.VendorOrderModel.voHeaderId, 
                                             $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                             $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                             $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                             
                                            )
                .then(function (successfulResult) {
                	debug(successfulResult);
                	debug("result");
	               $scope.VendorOrderModel.populatePageModels(successfulResult);
                });
             
            }
            
            
            
            
            //Populate Left Side panel Items
            $scope.VendorOrderModel.populateLeftSideHeadingLables = function(){
            	debug("inside left heading labels");
            	/*************************** new ******************************/
                $scope.VendorOrderModel.LeftSideHeadingLables = {};
                var currentHeadingSequenceIndex = 65;
                
                // Info Header
                
                $scope.VendorOrderModel.LeftSideHeadingLables['Info'] = String.fromCharCode(currentHeadingSequenceIndex++);
                
                $scope.VendorOrderModel.LeftSideHeadingLables['Order'] = String.fromCharCode(currentHeadingSequenceIndex++);
                
                if($scope.VendorOrderModel.StockExcessList != undefined && $scope.VendorOrderModel.StockExcessList.length != 0){
                	debug("stock excess true");
                	$scope.VendorOrderModel.LeftSideHeadingLables['Stock_Excess'] = String.fromCharCode(currentHeadingSequenceIndex++);//1;
                }
                else {
                	debug("stock excess false");
                }
                if($scope.VendorOrderModel.VRHistoryList != undefined && $scope.VendorOrderModel.VRHistoryList.length != 0) {
                	$scope.VendorOrderModel.LeftSideHeadingLables['Receiving_History'] = String.fromCharCode(currentHeadingSequenceIndex++);//2;
                }
                
                if($scope.VendorOrderModel.EnableFinaliseOrder() == true) {
                $scope.VendorOrderModel.LeftSideHeadingLables['Finalize'] = String.fromCharCode(currentHeadingSequenceIndex++);
                }
                
                
                /*************************** new ******************************/
                // Merchandise: Items Header
                $scope.VendorOrderModel.LeftSideHeadingLables['Received'] = String.fromCharCode(currentHeadingSequenceIndex++);;
                
                
                $scope.VendorOrderModel.LeftSideHeadingLables['R_Items'] = 1
                $scope.VendorOrderModel.LeftSideHeadingLables['R_Outstanding']  = 2  
                
                // Checkout Header
                if($scope.VORModel.VOR_Header.Status =="In Progress" ){
                    $scope.VendorOrderModel.LeftSideHeadingLables['Finalize'] = String.fromCharCode(currentHeadingSequenceIndex++);
                }
                
                
                
                // Invoice History Header
                if($scope.VORModel.VOR_Header.Status =="Invoiced" ||  $scope.VORModel.VOR_Header.Status =="Stocked" ){
                    $scope.VORModel.LeftSideHeadingLables['Invoice_History'] = String.fromCharCode(currentHeadingSequenceIndex++);
                    debug(String.fromCharCode(currentHeadingSequenceIndex++))
                } 
                
                
            }
            
            // Populate new models
            $scope.VendorOrderModel.populatePageModels = function(newResult) {
                $scope.VendorOrderModel.OrderTypes = newResult.OrderTypes;
                debug($scope.VendorOrderModel.OrderTypes);
                if($scope.VendorOrderModel.voHeaderId == null || $scope.VendorOrderModel.voHeaderId == 'undefined') {
                    var url = '?id=' + newResult.VendorOrderHeader.Id;
                    window.history.pushState("string", "Title" , url);
                }
                $scope.VendorOrderModel.voHeaderId = newResult.VendorOrderHeader.Id;
                
                $scope.VendorOrderModel.GroupTotalCost = newResult.GroupTotalCost;
                $scope.VendorOrderModel.TotalLineItemGroups = newResult.TotalLineItemGroups;
                $scope.VendorOrderModel.vendorOrderLineItemGroupList = newResult.VendorOrderLineItemGroupList;
                $scope.VendorOrderModel.populateGroupItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemGroupList);
                
                $scope.VendorOrderModel.TotalRequiredForCustomers = newResult.TotalRequiredForCustomers;
                $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = newResult.VOLineItemRequiredForCustomer;
                $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList);
                
                $scope.VendorOrderModel.TotalRequiredForStocks = newResult.TotalRequiredForStocks;
                $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = newResult.VOLineItemRequiredForStock;
                $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                
                $scope.VendorOrderModel.VendorOrderHeader = newResult.VendorOrderHeader;
                
                debug('Data Pushing Start ->');
                debug($scope.VendorOrderModel.VendorOrderHeader.OrderType);
                
                for(var i = 0; i < newResult.OrderTypes.length; i++){
                    if(newResult.OrderTypes[i].Id == $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id){
                        $scope.VendorOrderModel.VendorOrderHeader.OrderType = newResult.OrderTypes[i];
                        debug("inside this function ");
                    }
                    if($scope.VendorOrderModel.VendorOrderHeader.OrderType.Id == null || $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id == undefined) {
                        if(newResult.OrderTypes[i].IsDefault) {
                            $scope.VendorOrderModel.VendorOrderHeader.OrderType = newResult.OrderTypes[i];
                            debug(newResult.OrderTypes[i].IsDefault);
                            
                        }
                    }
                }
                debug('dsdsdc');
                debug($scope.VendorOrderModel.VendorOrderHeader.OrderType);
                $scope.FilterID  = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                
                $scope.VendorOrderModel.StockExcessList = newResult.StockExcessList;
                $scope.VendorOrderModel.VRHistoryList =newResult.VRHistoryList;
                
                
                debug('------------------------------------');
                debug($scope.VendorOrderModel.StockExcessList);
                
                if($scope.VendorOrderModel.vendorOrderLineItemGroupList.length==0)
                {
                    $scope.SearchableObjects = 'Vendor,Part__c';
                }
                else{
                        if($scope.VendorOrderModel.VendorOrderHeader.VendorId == null || $scope.VendorOrderModel.VendorOrderHeader.VendorId == ''){
                            $scope.SearchableObjects = 'Vendor';
                        } else {
                            $scope.SearchableObjects = 'Part__c';
                        }
                }
                $scope.VendorOrderModel.populateLeftSideHeadingLables();
            }
            
            // On Demand Popolate data On in the case of serach to add
            $scope.VendorOrderModel.PopulateOnDemandAddSearched = function(Result){
            
                $scope.VendorOrderModel.TotalLineItemGroups = Result.TotalLineItemGroups;
                $scope.VendorOrderModel.vendorOrderLineItemGroupList = Result.VendorOrderLineItemGroupList;
                $scope.VendorOrderModel.groupItems_editRow=[];
                
                debug(Result.NewLineItemId);
                
                var IdToEdit=Result.NewLineItemId;
                debug(IdToEdit);
                var vendorGroupItems =$scope.VendorOrderModel.vendorOrderLineItemGroupList;
                debug($scope.VendorOrderModel.vendorOrderLineItemGroupList);
                 
                for (var i = 0; i < vendorGroupItems.length; i++) {
                    voLineItems = vendorGroupItems[i].VendorOrderLineItemList;
                    voLineItems_editRow = [];
                  
                    var EditableGroupId=0;
                    for (var j = 0; j < voLineItems.length; j++) {
                    debug('ID for groups');
                    debug(voLineItems[j].Id );
                    if(voLineItems[j].Id == IdToEdit){
                    
                            voLineItems_editRow.push({
                                isEdit : true,
                                radioValue : 1,
                                optionSelected : 0
                            });
                            EditableGroupId= 1;
                            debug('IN'+voLineItems_editRow )
                        }
                        else{
                             voLineItems_editRow.push({
                                isEdit : false,
                                radioValue : 1,
                                optionSelected : 0
                            });
                        }
                    }
                        
                    if(EditableGroupId==1){
                             debug('IN'+$scope.VendorOrderModel.groupItems_editRow )
                             $scope.VendorOrderModel.groupItems_editRow.push({
                                isEdit : true,
                                radioValue : 1,
                                optionSelected : 0,
                                voLineItems_editRow : voLineItems_editRow
                            });
                             EditableGroupId= 0;
                    } else{
                    
                            $scope.VendorOrderModel.groupItems_editRow.push({
                                isEdit : false,
                                radioValue : 1,
                                optionSelected : 0,
                                voLineItems_editRow : voLineItems_editRow
                            });
                    }
                }
                    
                $scope.VendorOrderModel.TotalLineItemGroups = Result.TotalLineItemGroups;

                $scope.VendorOrderModel.TotalRequiredForCustomers = Result.TotalRequiredForCustomers;
                $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = Result.VOLineItemRequiredForCustomer;
                $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList);
                
                $scope.VendorOrderModel.TotalRequiredForStocks = Result.TotalRequiredForStocks;
                $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = Result.VOLineItemRequiredForStock;
                $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                
                $scope.VendorOrderModel.VendorOrderHeader = Result.VendorOrderHeader;
                $scope.VendorOrderModel.OrderTypes = Result.OrderTypes;
                for(var i = 0; i < Result.OrderTypes.length; i++){
                 if(Result.OrderTypes[i].Id == $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id){
                 	$scope.VendorOrderModel.VendorOrderHeader.OrderType = Result.OrderTypes[i];
                 }
                }
                
                $scope.FilterID  = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                
                if($scope.VendorOrderModel.VendorOrderHeader.VendorId == null || $scope.VendorOrderModel.VendorOrderHeader.VendorId == ''){
                 $scope.SearchableObjects = 'Vendor';
                } else {
                 $scope.SearchableObjects = 'Part__c';
                }
                       
                 
            }
            
            //Populate Vendor Edit Status reserve model all called when New data Populate fromm server for Vendor Order Items
            $scope.VendorOrderModel.populateGroupItemsEditableModel = function (vendorGroupItems) {
             $scope.VendorOrderModel.groupItems_editRow =[];
                for (var i = 0; i < vendorGroupItems.length; i++) {
                    voLineItems = vendorGroupItems[i].VendorOrderLineItemList;
                    voLineItems_editRow = [];
                    for (var j = 0; j < voLineItems.length; j++) {
                        voLineItems_editRow.push({
                            isEdit : false,
                            radioValue : 1,
                            optionSelected : 0
                        });
                    }
                    $scope.VendorOrderModel.groupItems_editRow.push({
                        isEdit : false,
                        radioValue : 1,
                        optionSelected : 0,
                        voLineItems_editRow : voLineItems_editRow
                    });

                }
            }

            //Function To open & close edit Mode only work for parent rows
            // On Click Group Row Edit & Expand Row Method
            $scope.VendorOrderModel.editGroupItem = function (event, index) {
                var isEditModeEnabled = false;
                var lineitem = [];
                 //if($scope.VendorOrderModel.VendorOrderHeader.Status !='On Order' ){
                
                    for (i = 0; i < $scope.VendorOrderModel.groupItems_editRow.length; i++) {
                        if ($scope.VendorOrderModel.groupItems_editRow[i].isEdit == true) {
                            isEditModeEnabled = true;
                        }
                       $scope.VendorOrderModel.groupItems_editRow[i].isEdit = false;
                    }
                    if (!isEditModeEnabled) {
                        $scope.VendorOrderModel.groupItems_editRow[index].isEdit = true;
                    } else {
                    
                         var RequiredType = null;
                         //new-pg     $scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON,
                         vendorOrderService.getVOLineItem($scope.VendorOrderModel.voHeaderId, 
                                                             $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                             $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                             $scope.VendorOrderModel.stocksPageSortAttrsJSON,
                                                             
                                                             RequiredType
                                                            )
                            .then(function (successfulResult) {
                                $scope.VendorOrderModel.populatePageModels(successfulResult);
                            });
                        
                    }
               //}
            }
            
           
            
            
            //Function To open & close edit Mode only work for child  rows
            // On Click Group Row Edit & Expand Row Method
            $scope.VendorOrderModel.editvoLineItem = function (event, parentindex, index) {
                debug(parentindex);
                var isEditModeEnabled = false;
                  var lineitem = [];
                     var partId= null;
                     var voLineItem = null;
                     var qtyRequired = null;
                  if($scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[index].isEdit == true)
                  {
                                
                  }
                  else{
                        for (i = 0; i < $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow.length; i++) {
                            
                            if ($scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit == true) {
                                
                                $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit
                                
                                isEditModeEnabled = true;
                                 var partId=$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[i].PartId;
                                 var voLineItem=$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[i].Id;
                                 var qtyRequired = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[i].Need;
                                
                            }
                             $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit = false;
                         }
                  }
                if (!isEditModeEnabled) {
                    
                    if($scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[index].IsExcess == false ){
                            $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[index].isEdit = true;
                    }
                    
                } else {
                        if(partId !=null && voLineItem !=null && qtyRequired !=null )
                            {
                                $scope.VendorOrderModel.saveVolineItems(partId,voLineItem,qtyRequired,parentindex)
                            }
                            
                }
            }
            
            
            // Tab Out save Data
            $scope.VendorOrderModel.editRowTabOut=function(event, parentindex ,index){
                     if (!event.shiftKey && event.keyCode == 9){
                            
                            
                            var partId=$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[index].PartId;
                            var voLineItem=$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[index].Id;
                            var qtyRequired = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[index].Need;
                        
                        
                             $scope.VendorOrderModel.saveVolineItems(partId,voLineItem,qtyRequired,parentindex)
                        //debug(partId +', ' + qtyRequired + ' ,' + ',' + voLineItem);
                        
                    }
            }
            
            $scope.VendorOrderModel.saveVolineItems= function(partId,voLineItem,qtyRequired,parentindex){
                    
                    var vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId =  $scope.VendorOrderModel.voHeaderId;
                    var itemsPageSortAttrsJSON =  $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON;
                    //new-pg
                   
                    var IsSearched=false;
                    if(qtyRequired == ''){
                    	qtyRequired = 1;
                    }
                    // new-pg		,receivingHistoryPageSortAttrsJSON
                    vendorOrderService.addSearchedRecord(partId,  vendorId,  voHeaderId,  qtyRequired,
                         itemsPageSortAttrsJSON,  customersPageSortAttrsJSON, 
                         stocksPageSortAttrsJSON,voLineItem,IsSearched)
                    .then(function(resultInfo) {
                    
                        $scope.VendorOrderModel.populateGroupOnly(parentindex,resultInfo);
                       
                    }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
               
            }
            
             $scope.VendorOrderModel.populateGroupOnly= function(parentindex,resultInfo){
                      if(resultInfo.RecentlyEditedGroupList.length > 0)
                       {
                       	$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex]= resultInfo.RecentlyEditedGroupList[0];
                       
                          debug(resultInfo.RecentlyEditedGroupList)
                          debug($scope.VendorOrderModel.vendorOrderLineItemGroupList)
                          var voLineItems=[]
                          var voLineItems = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList; 
                          var voLineItems_editRow = [];
                          
                          debug(voLineItems)
                          for (var j = 0; j < voLineItems.length; j++) {
                              voLineItems_editRow.push({
                                  isEdit : false,
                                  radioValue : 1,
                                  optionSelected : 0
                              });
                          }
                                  
                          var groupItems_editRow ={
                              isEdit : true,
                              radioValue : 1,
                              optionSelected : 0,
                              voLineItems_editRow : voLineItems_editRow
                          }
                                  
                          $scope.VendorOrderModel.groupItems_editRow[parentindex]=groupItems_editRow;
                          
                          $scope.VendorOrderModel.TotalLineItemGroups = resultInfo.TotalLineItemGroups;
             
                          $scope.VendorOrderModel.TotalRequiredForCustomers = resultInfo.TotalRequiredForCustomers;
                          $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = resultInfo.VOLineItemRequiredForCustomer;
                          $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList);
                          
                          $scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                          $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                          $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                          
                          $scope.VendorOrderModel.VendorOrderHeader = resultInfo.VendorOrderHeader;
                          $scope.VendorOrderModel.OrderTypes = resultInfo.OrderTypes;
                          for(var i = 0; i < resultInfo.OrderTypes.length; i++){
                           if(resultInfo.OrderTypes[i].Id == $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id){
                           $scope.VendorOrderModel.VendorOrderHeader.OrderType = resultInfo.OrderTypes[i];
                           }
                          }
                                     
                          $scope.FilterID  = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                          
                          if($scope.VendorOrderModel.VendorOrderHeader.VendorId == null || $scope.VendorOrderModel.VendorOrderHeader.VendorId == ''){
                           $scope.SearchableObjects = 'Vendor';
                          } else {
                           $scope.SearchableObjects = 'Part__c';
                          }
                    }else{
                    
                      $scope.VendorOrderModel.populatePageModels(resultInfo);
                    }
                                                
               }
            
            // Close Items
             $scope.VendorOrderModel.closeEditVoliRow = function(parentindex){
                         
             }
            
            // Method to handle any updates in sort controls
            $scope.VendorOrderModel.itemsPageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = 1;
                $scope.VendorOrderModel.Items_paginationControlsAction();
            }
            
            // Method to handle any updates in pagination controls
            $scope.VendorOrderModel.Items_paginationControlsAction = function () {
                vendorOrderService.getPaginatedItemsForVOHeader( 'Items',
                                                                 $scope.VendorOrderModel.voHeaderId, 
                                                                 $scope.VendorOrderModel.itemsPageSortAttrsJSON
                                                                )
                .then(function(resultInfo) {
                    $scope.VendorOrderModel.TotalLineItemGroups = resultInfo.TotalLineItemGroups;
                    $scope.VendorOrderModel.vendorOrderLineItemGroupList = resultInfo.VendorOrderLineItemGroupList;
                    $scope.VendorOrderModel.populateGroupItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemGroupList);
                    
                    setTimeout(function () {
                        $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                    }, 10);
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
            // new-pg
            $scope.VendorOrderModel.groupAllSimilarVOLineItem = function(partId) {
                vendorOrderService.groupAllSimilarVOLineItem( $scope.VendorOrderModel.VendorOrderHeader.VendorId,
                                                              partId,
                                                              $scope.VendorOrderModel.voHeaderId, 
                                                              $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                              $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                              $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                                              //,$scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON
                                                             )
                .then(function(resultInfo) {
                    $scope.VendorOrderModel.populatePageModels(resultInfo);
                    
                    setTimeout(function () {
                    //new-pg
                        $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                        $scope.VendorOrderModel.customersPageSortAttrsJSON.ChangesCount++;
                        $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                       // $scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON.ChangesCount++;
                        
                    }, 100);
                    setTimeout(function () {
                        if(!$scope.$$phase) {
                            $scope.$digest();
                        }
                    }, 1000);
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
            
            // Edit row "GO" Action
           //  to do work
            $scope.VendorOrderModel.groupItemsGoAction = function (index, parentGirdIndex) {
                // parentGirdIndex == null: Parent grid (Group grid)
                var selectedRadioValue = 1;
                if(parentGirdIndex == null) {
                      selectedRadioValue = $scope.VendorOrderModel.groupItems_editRow[index].radioValue;
                } else {
                         selectedRadioValue = $scope.VendorOrderModel.groupItems_editRow[parentGirdIndex].voLineItems_editRow[index].radioValue;
                }
                debug(parentGirdIndex + "   " + index);
                debug($scope.VendorOrderModel.groupItems_editRow);
                
                // selected radio value == 1 Means delete the record from the list
                
                if(selectedRadioValue == 1){
                    var partId = (parentGirdIndex == null) 
                                    ? $scope.VendorOrderModel.vendorOrderLineItemGroupList[index].PartId
                                    : $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentGirdIndex].VendorOrderLineItemList[index].PartId;
                    $scope.VendorOrderModel.groupAllSimilarVOLineItem(partId);
                } 
                else if(selectedRadioValue == 2){
                    if(parentGirdIndex == null) {
                        var voLineItemGroupId = $scope.VendorOrderModel.vendorOrderLineItemGroupList[index].Id;
                        
                        // Calculate for new page number of items grid
                        var itemsGridNewPN = $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage;
                        if($scope.VendorOrderModel.TotalLineItemGroups % $scope.VendorOrderModel.itemsPageSortAttrsJSON.PageSize == 1){
                            $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = (itemsGridNewPN > 1) ? (itemsGridNewPN - 1) : 1;
                        }
//new-pg
                        vendorOrderService.removeGroupFromOrder(voLineItemGroupId,
                                                                $scope.VendorOrderModel.VendorOrderHeader.VendorId,
                                                                $scope.VendorOrderModel.voHeaderId, 
                                                                $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                                $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                                $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                                                //, $scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON
                                                             )
                        .then(function(resultInfo) {
                            debug(resultInfo);
                            $scope.VendorOrderModel.populatePageModels(resultInfo);
                            
                            setTimeout(function () {
                            //new-pg
                                $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                                $scope.VendorOrderModel.customersPageSortAttrsJSON.ChangesCount++;
                                $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                                //$scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON.ChangesCount++;
                                
                            }, 100);
                            setTimeout(function () {
                                if(!$scope.$$phase) {
                                    $scope.$digest();
                                }
                            }, 1000);
                        }, function(errorSearchResult) {
                            Notification.error('Some error occurred, please try again.');
                        });
                    } else {
                        var voLineItemGroupId = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentGirdIndex].Id;
                        var voLineItemId = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentGirdIndex].VendorOrderLineItemList[index].Id;
                        //new-pg
                        vendorOrderService.removeLineItemFromOrder( voLineItemId, voLineItemGroupId,
                                                                    $scope.VendorOrderModel.voHeaderId,
                                                                    $scope.VendorOrderModel.VendorOrderHeader.VendorId,
                                                                    $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                                    $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                                    $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                                                    //,$scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON 
                                                                 )
                        .then(function(resultInfo) {
                            $scope.VendorOrderModel.populateGroupOnly(parentGirdIndex,resultInfo);
                            setTimeout(function () {
                            //new-pg
                                $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                                $scope.VendorOrderModel.customersPageSortAttrsJSON.ChangesCount++;
                                $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                                 //$scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON.ChangesCount++;
                            }, 10);
                        }, function(errorSearchResult) {
                            Notification.error('Some error occurred, please try again.');
                        });
                    }
                }
            }
            
            // Populate required for customer edit list
            $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel = function (requiredForCustomerItems) {
                $scope.VendorOrderModel.requiredForCustomerItems_editRow = [];
                
                for (var i = 0; i < requiredForCustomerItems.length; i++) {
                    $scope.VendorOrderModel.requiredForCustomerItems_editRow.push({
                        isEdit : false,
                        radioValue : 1,
                        optionSelected : 0
                    });
                }
            }

            // Function To open & close edit Mode 
            // On Click Group Row Edit & Expand Row Method
            $scope.VendorOrderModel.editRequiredForCustomerItem = function (event, index) {
                var isEditModeEnabled = false;
                var lineitem = [];
                for (i = 0; i < $scope.VendorOrderModel.requiredForCustomerItems_editRow.length; i++) {
                    if ($scope.VendorOrderModel.requiredForCustomerItems_editRow[i].isEdit == true) {
                        isEditModeEnabled = true;
                        $scope.VendorOrderModel.requiredForCustomerItems_editRow[i].isEdit = false;
                    }
                }

                if (!isEditModeEnabled) {
                    $scope.VendorOrderModel.requiredForCustomerItems_editRow[index].isEdit = true;
                } else {
                    // ToDo: perform any action
                }
            }
            
            // Method to handle any updates in sort controls
            $scope.VendorOrderModel.customersPageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = 1;
                $scope.VendorOrderModel.RequiredByCustomer_paginationControlsAction();
            }
            
            $scope.VendorOrderModel.RequiredByCustomer_paginationControlsAction = function () {
                vendorOrderService.getPaginatedItemsForVOHeader( 'Customers',
                                                                 $scope.VendorOrderModel.voHeaderId,
                                                                 $scope.VendorOrderModel.customersPageSortAttrsJSON
                                                            )
                .then(function(resultInfo) {
                    $scope.VendorOrderModel.TotalRequiredForCustomers = resultInfo.TotalRequiredForCustomers;
                    $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = resultInfo.VOLineItemRequiredForCustomer;
                    $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList);
                    
                    setTimeout(function () {
                        $scope.VendorOrderModel.customersPageSortAttrsJSON.ChangesCount++;
                    }, 10);
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
            
            // Edit row "GO" Action
            $scope.VendorOrderModel.requiredForCustomerItemsGoAction = function (index) {
                // selected radio value == 1 Means delete the record from the list
                debug($scope.VendorOrderModel.requiredForCustomerItems_editRow[index].radioValue)
                //new-pg
                if($scope.VendorOrderModel.requiredForCustomerItems_editRow[index].radioValue == 1){
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = 1;
                    //$scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON.CurrentPage = 1;
                    
                    var partId = $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList[index].PartId;
                    $scope.VendorOrderModel.groupAllSimilarVOLineItem(partId);
                }
                else if($scope.VendorOrderModel.requiredForCustomerItems_editRow[index].radioValue == 2){
                    var partId = $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList[index].PartId;
                    var  vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId= $scope.VendorOrderModel.voHeaderId;
                    var qtyRequired = $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList[index].Need;
                    var  itemsPageSortAttrsJSON  = $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON;
                    //new-pg
                    //var receivingHistoryPageSortAttrsJSON = $scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON;
                    var voLineItem=  $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList[index].Id;  
                    
                    // Calculate for new page number of items grid
                    var itemsGridNewPN = $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage;
                    if($scope.VendorOrderModel.TotalRequiredForCustomers % $scope.VendorOrderModel.customersPageSortAttrsJSON.PageSize == 1){
                        $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = (itemsGridNewPN > 1) ? (itemsGridNewPN - 1) : 1;
                    }
                    //new-pg //+ receivingHistoryPageSortAttrsJSON + ',' +
                    debug("aaa : "+ partId + ',' + vendorId  + ',' +  voHeaderId  + ',' +  qtyRequired  + ',' +
                         itemsPageSortAttrsJSON  + ',' +  customersPageSortAttrsJSON + ',' +
                         stocksPageSortAttrsJSON  + ',' +voLineItem)              
                                                            
                    var IsSearched=false;
                    //new-pg  , receivingHistoryPageSortAttrsJSON
                     vendorOrderService.addSearchedRecord(partId,  vendorId,  voHeaderId,  qtyRequired,
                         itemsPageSortAttrsJSON,  customersPageSortAttrsJSON,
                         stocksPageSortAttrsJSON,voLineItem,IsSearched)
                    .then(function(resultInfo) {
                    
                        debug(resultInfo)
                        debug(resultInfo.NewLineItemId)
                        
                       
                         $scope.VendorOrderModel.populatePageModels(resultInfo);
                        
                       
                    }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
                }
            }
            
            // Populate required for customer edit list
            $scope.VendorOrderModel.populateReqForStockItemsEditableModel = function (requiredForStockItems) {
                $scope.VendorOrderModel.requiredForStockItems_editRow = [];
                
                for (var i = 0; i < requiredForStockItems.length; i++) {
                    $scope.VendorOrderModel.requiredForStockItems_editRow.push({
                        isEdit : false,
                        radioValue : 1,
                        optionSelected : 0
                    });
                }
            }

            // Function To open & close edit Mode 
            // On Click Group Row Edit & Expand Row Method
            $scope.VendorOrderModel.editRequiredForStockItem = function (event, index) {
                var isEditModeEnabled = false;
                var lineitem = [];
                
                if($scope.VendorOrderModel.VendorOrderHeader.Status== 'On Order'){
                    return;
                }
                
                if($scope.VendorOrderModel.requiredForStockItems_editRow[index].isEdit == true ){
                
                     for (i = 0; i < $scope.VendorOrderModel.requiredForStockItems_editRow.length; i++) {
                            $scope.VendorOrderModel.requiredForStockItems_editRow[i].isEdit=false
                        }
                }
                else{
                        for (i = 0; i < $scope.VendorOrderModel.requiredForStockItems_editRow.length; i++) {
                            if ($scope.VendorOrderModel.requiredForStockItems_editRow[i].isEdit == true) {
                                isEditModeEnabled = true;
                                
                            }
                            
                            $scope.VendorOrderModel.requiredForStockItems_editRow[i].isEdit = false;
                        }
        
                        if (!isEditModeEnabled) {
                            $scope.VendorOrderModel.requiredForStockItems_editRow[index].isEdit = true;
                        } else {
                            // ToDo: perform any action
                        }
                }
            }
            
            // Method to handle any updates in sort controls
            $scope.VendorOrderModel.stocksPageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = 1;
                $scope.VendorOrderModel.RequiredByStock_paginationControlsAction();
            }
            
            $scope.VendorOrderModel.RequiredByStock_paginationControlsAction = function () {
                vendorOrderService.getPaginatedItemsForVOHeader( 'Stocks',
                                                                 $scope.VendorOrderModel.voHeaderId, 
                                                                 $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                                            )
                .then(function(resultInfo) {
                    $scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                    $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                    $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                    
                    setTimeout(function () {
                        $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                    }, 10);
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
            // start : need not zero 
            /*$scope.VendorOrderModel.solieditRowBlur  = function(event, focusElementId)//, index
            {*/
                       /* if (!event.shiftKey && event.keyCode == 9) {
                            
                            alert("entered 0");
                            event.preventDefault();
                                setTimeout(function(){ 
                                    angular.element('#'+focusElementId).focus(); 
                                }, 3000);  
                                $scope.VendorOrderModel.editGroupItem($event, $index);
                            
                        } */
                        // Ensure that it is a number and stop the keypress
						/*
							if(event.keyCode == 48){
			                	event.preventDefault();	
			                }
						 
                   }*/
                   $scope.VendorOrderModel.solieditRowBlur  = function(event){
                   		if(event.keyCode == 9){
                   		debug("zero enter");
                   		    /* commented by pooja */
			                //event.preventDefault();	
			            }
                   }
            // end : need not zero
            
            // Edit row "GO" Action
            $scope.VendorOrderModel.requiredForStockItemsGoAction = function (index) {
                // selected radio value == 1
                if($scope.VendorOrderModel.requiredForStockItems_editRow[index].radioValue == 1){
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = 1;
                    //new-pg
                    //$scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON.CurrentPage = 1;
                    
                    
                    var partId = $scope.VendorOrderModel.vendorOrderLineItemReqByStockList[index].PartId;
                    $scope.VendorOrderModel.groupAllSimilarVOLineItem(partId);
                }
                else if($scope.VendorOrderModel.requiredForStockItems_editRow[index].radioValue == 2){
                        
                    var partId = $scope.VendorOrderModel.vendorOrderLineItemReqByStockList[index].PartId;
                    var  vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId= $scope.VendorOrderModel.voHeaderId;
                    var qtyRequired = $scope.VendorOrderModel.vendorOrderLineItemReqByStockList[index].Need;
                    var  itemsPageSortAttrsJSON  = $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON;
                    //new-pg
                    //var receivingHistoryPageSortAttrsJSON = $scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON;
                    
                    var voLineItem=  $scope.VendorOrderModel.vendorOrderLineItemReqByStockList[index].Id;  
                    
                    // Calculate for new page number of items grid
                    var itemsGridNewPN = $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage;
                    if($scope.VendorOrderModel.TotalRequiredForStocks % $scope.VendorOrderModel.stocksPageSortAttrsJSON.PageSize == 1){
                        $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = (itemsGridNewPN > 1) ? (itemsGridNewPN - 1) : 1;
                    }
                    //new-pg   + receivingHistoryPageSortAttrsJSON +','
                    debug(partId + ',' + vendorId  + ',' +  voHeaderId  + ',' +  qtyRequired  + ',' +
                         itemsPageSortAttrsJSON  + ',' +  customersPageSortAttrsJSON + ',' +
                         stocksPageSortAttrsJSON  + ',' +voLineItem)              
                                                            
                    var  IsSearched = false
                    //new-pg   , receivingHistoryPageSortAttrsJSON
                     vendorOrderService.addSearchedRecord(partId,  vendorId,  voHeaderId,  qtyRequired,
                         itemsPageSortAttrsJSON,  customersPageSortAttrsJSON,
                         stocksPageSortAttrsJSON,voLineItem,IsSearched)
                    .then(function(resultInfo) {
                    
                        debug(resultInfo)
                        debug(resultInfo.NewLineItemId)
                        
                       
                         $scope.VendorOrderModel.populatePageModels(resultInfo);
                        
                        /*$scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                        $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                        $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                        
                        setTimeout(function () {
                            $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                        }, 10);*/
                    }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
                  
                  
                  
                  }
            }
        
            // Select callback when a record is selected in search to add autocomplete box
            $scope.VendorOrderModel.searchToAddCallback = function (selectedRecord) {
                debug(selectedRecord);
               if($scope.VendorOrderModel.VendorOrderHeader.Status !='On Order' ){ 
                
                // If selected value is a Vendor, then add the record in related cutomers list
                if (selectedRecord.originalObject.Info == 'Merchandise') {
                    $scope.VendorOrderModel.addOneItemOnly(selectedRecord.originalObject,1,null);
                    //$scope.VendorOrderModel.AlternateParts_addActionSearchRecSelectCallback(selectedRecordId);
                } else if (selectedRecord.originalObject.Info == 'Vendor') {
                    var selectedRecordId = selectedRecord.originalObject.Value;
                    if (selectedRecordId.length == 18) {
                        selectedRecordId = selectedRecordId.substring(0, 15);
                    }
                    $scope.VendorOrderModel.addVendor(selectedRecordId);
                   
                 }
               }
               else
               {
                 Notification.error('Cannot add items, Order is submited');
               }
               
                $scope.VendorOrderModel.resetSearchBox();
            }
            
            $scope.VendorOrderModel.addOneItemOnly = function(originalObject , qtyRequired, voLineItem ){
                
                    var partId = originalObject.Value;
                    var vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId =  $scope.VendorOrderModel.voHeaderId;
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0]["FieldName"]="LastModified";
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0]["SortDirection"]="";
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = 1;
                    //new-pg
                   // $scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON.CurrentPage = 1;
                    
                    var itemsPageSortAttrsJSON =  $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON;
                    //new-pg
                    //var receivingHistoryPageSortAttrsJSON = $scope.VendorOrderModel.receivingHistoryPageSortAttrsJSON;
                    
                     var IsSearched=true;
                    
                    debug(itemsPageSortAttrsJSON)
                    //new-pg    , receivingHistoryPageSortAttrsJSON
                 vendorOrderService.addSearchedRecord(partId,  vendorId,  voHeaderId,  qtyRequired,
                         itemsPageSortAttrsJSON,  customersPageSortAttrsJSON,
                         stocksPageSortAttrsJSON,voLineItem,IsSearched)
                    .then(function(resultInfo) {
                    
                        debug(resultInfo)
                        debug(resultInfo.NewLineItemId)
                        debug("-----------------------------------------")
                        $scope.VendorOrderModel.PopulateOnDemandAddSearched(resultInfo);
                        
                        // Set Edit Mode for Line Item
                        debug('My Edit Mode -->> ');
                        if(resultInfo.NewLineItemId != null) {
                            var parentIndex = -1;
                            var childIndex = -1;
                            for(var i = 0; i < $scope.VendorOrderModel.vendorOrderLineItemGroupList.length; i++) {
                                for(var j = 0; j < $scope.VendorOrderModel.vendorOrderLineItemGroupList[i].VendorOrderLineItemList.length; j++) {
                                    if($scope.VendorOrderModel.vendorOrderLineItemGroupList[i].VendorOrderLineItemList[j].Id == resultInfo.NewLineItemId) {
                                        parentIndex = i;
                                        childIndex = j;
                                    }
                                }
                            }
                            debug('parentIndex  ' + parentIndex);
                            debug('childIndex  ' + childIndex);
                            
                            if(parentIndex != -1 && childIndex != -1) {
                                $scope.VendorOrderModel.groupItems_editRow[parentIndex].voLineItems_editRow[childIndex].isEdit = true;
                                //start : focus need
                                setTimeout(function () {
				                	angular.element("#VendorOrderItem_Grid tr.Editable_row:first div.secondchild").find('input').focus();
				                }, 10);
                                //end : focus need
                            }
                        }
                        debug('My Edit Mode Finish-->> ');
                        /*$scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                        $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                        $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                        */
                        
                        setTimeout(function () {
                            $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                        }, 1000);
                    }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
            }
            
            
               $scope.VendorOrderModel.groupAllVOLineItemByRequiredType = function(isRequiredForCustomer){
                
                    
                    var vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId =  $scope.VendorOrderModel.voHeaderId;
                    var itemsPageSortAttrsJSON =  $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON;
                  
                    
                    vendorOrderService.groupAllVOLineItem(vendorId,  voHeaderId,  isRequiredForCustomer,  itemsPageSortAttrsJSON,customersPageSortAttrsJSON, stocksPageSortAttrsJSON)
                     .then(function(resultInfo) {
                     
                           $scope.VendorOrderModel.populatePageModels(resultInfo);
                     
                     }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
               
            }
            
           // Method for DOM action: Update Order Status for Vendor Order Header
            $scope.VendorOrderModel.updateVOHederOrderStatus = function (status) {
             debug("1 status is : "+status);
                if(status != null && ( status == 'Open' || status == 'Locked' || status == 'On Order' || status == 'Partially Received' ||status == 'Received' ) ){
                	debug("2 status is : "+status);
                    $scope.VendorOrderModel.VendorOrderHeader.Status = status;
                   
                }
                debug("3 status is : "+status);
                debug($scope.VendorOrderModel.VendorOrderHeader.OrderType.Id);
                vendorOrderService.updateVOHederOrderType($scope.VendorOrderModel.voHeaderId, $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id, $scope.VendorOrderModel.VendorOrderHeader.Status)
                .then(function(resultInfo) {
                    if(status == null){
                    	debug("4 status is : "+status);
                        $scope.VendorOrderModel.loadAllGridDetails();
                    }
                    Notification.success('Successfuly updated.');
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
        
            // Method for DOM action: Add
            $scope.VendorOrderModel.RelatedList_addAction = function (event, typeToSearch) {
                $scope.VendorOrderModel.setFocusToSearchBox(typeToSearch);
            }
        
            // Set focus on search text box
            // used when to add related records via page level search box
            $scope.VendorOrderModel.setFocusToSearchBox = function (typeToSearch) {
                $scope.typeToSearch = typeToSearch;
                $scope.PreferredObject = typeToSearch;
                angular.element('#SearchToaddCutomer').focus();
            }
        
            // Reset the search object in serch autocomplete
            $scope.VendorOrderModel.resetSearchBox = function () {
                $scope.typeToSearch = "";
                $scope.PreferredObject = "";
            }
            
            
            /*************************** new : open popup ***********************************/
            // part popup
               $scope.applyCssOnPartPopUp = function (event, className) {
                   var targetEle = angular.element(event.target);
                   var elementWidth = targetEle.width();
                   if (targetEle.width() > targetEle.parent().width()) {
                       elementWidth = targetEle.parent().width() - 15;
						debug("if (targetEle.width() > targetEle.parent().width())");
                   }
                   else{
                   	debug("else (targetEle.width() < targetEle.parent().width())");
                   }
                   angular.element(className).css('top', targetEle.offset().top);
                   angular.element(className).css('left', event.clientX);
                   setTimeout(function(){  angular.element(className).show(); }, 1000); 
               }
                var timer;
                $scope.VendorOrderModel.openpartpopup = function (event, partId) {
                debug("hover popup")
                     timer = $timeout(function () {
                        //var partId = $scope.CustomerOrderModel.VORLineItemGroupList[index].PartId;
                        debug("replaced by id : "+partId);
                        $scope.$broadcast('PartPopUpEvent',  partId);
                        $scope.applyCssOnPartPopUp(event, '.PartPopupOnVenderOrder');
                     }, 1000);
                 }
                
                  $scope.VendorOrderModel.hidePartPopUp =function(){
                     $timeout.cancel(timer);
                     angular.element('.Vendor-Order-Part-Popup').hide();
                 }
            /*************************** new : open popup ***********************************/
            
            // Pop Up opening and hiding functions
            var timer2;
            $scope.VendorOrderModel.showNeededForPopUp = function (event, voGroupId, voHeaderId) {
            	timer2 = $timeout(function () {
	                $scope.applyCssOnPopUp(event, '.Vendor-Order-popup');
	                vendorOrderService.getGroupRecDetail(voGroupId, voHeaderId).then(function (voGroupRecord) {
	                    debug(voGroupRecord);
	                    if (voGroupRecord.length > 0) {
	                        $scope.VendorOrderModel.voGroupRecordDetail = voGroupRecord[0];
	                    }
	                }, function (errorSearchResult) {
	                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
	                });
                }, 500);
            }
            
            $scope.VendorOrderModel.hideNeededForPopUp = function () {
            	$timeout.cancel(timer2);
                angular.element('.Vendor-Order-popup').hide();
            }
    	
    		var timer1;
            $scope.VendorOrderModel.showCOPopUp = function (event, coHeaderId) {
            	timer1 = $timeout(function () {
	                $scope.applyCssOnPopUp(event, '.Vendor-Order-CODetail-Popup');
	                //coHeaderId = 'a0Io0000006YgOo';
	                vendorOrderService.getCOHeaderRec(coHeaderId).then(function (coHeaderRecord) {
	                    debug(coHeaderRecord);
	                    if (coHeaderRecord.length > 0) {
	                        $scope.VendorOrderModel.coHeaderInfoDetail = coHeaderRecord[0];
	                    }
	                }, function (errorSearchResult) {
	                    $scope.CustomerOrder.OverlayInfo = errorSearchResult;
	                });
                }, 500);
            }
    
            $scope.VendorOrderModel.hideCOPopUp = function () {
            	$timeout.cancel(timer1);
                angular.element('.Vendor-Order-CODetail-Popup').hide();
            }
    
            /* $scope.VendorOrderModel.showPartPopUp = function (event, partId) {
                $scope.applyCssOnPopUp(event, '.Vendor-Order-Part-Popup');
                
                vendorOrderService.getPartRecord(partId).then(function (partRecord) {
                    if (partRecord.PartDetailRec != undefined) {
                        $scope.VendorOrderModel.partInfoDetail = partRecord.PartDetailRec;
                        $scope.VendorOrderModel.loadChartData();
                    }
                }, function (errorSearchResult) {
                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
                });
            } */
            
            var timer3;
            $scope.VendorOrderModel.showPopUpVendorOrderPartDetails=function(event, voli){
            	timer3 = $timeout(function () {
	                $scope.applyCssOnPopUpRight(event, '.Vendor-Order-Needpopup');
	                
	                vendorOrderService.getStockRecDetail(voli).then(function (partRecord) {
	                      $scope.VendorOrderModel.voliPartDetails = partRecord[0];
	                   
	                     debug( $scope.VendorOrderModel.voliPartDetails);
	                }, function (errorSearchResult) {
	                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
	                });
            
            	}, 500);
            }
            $scope.VendorOrderModel.hidePopUpVendorOrderPartDetails=function(){
            $timeout.cancel(timer3);
             angular.element('.Vendor-Order-Needpopup').hide();
            }
    
            $scope.VendorOrderModel.getLocations = function () {
                if ($scope.VendorOrderModel.partInfoDetail != undefined && $scope.VendorOrderModel.partInfoDetail.Location != null) {
                    return $scope.VendorOrderModel.partInfoDetail.Location.split(';');
                }
            }
    
            /* $scope.VendorOrderModel.hidePartPopUp = function () {
                angular.element('.Vendor-Order-Part-Popup').hide();
            } */
    
            $scope.applyCssOnPopUp = function (event, className) {
                var targetEle = angular.element(event.target);
                var elementWidth = targetEle.width();
                if (targetEle.width() > targetEle.parent().width()) {
                    elementWidth = targetEle.parent().width() - 15;
                }
                angular.element(className).css('top', targetEle.offset().top - 45);//.css('top', targetEle.offset().top - 22);
                angular.element(className).css('left', targetEle.offset().left + elementWidth + 10);// event.clientX+20);//targetEle.offset().left + elementWidth + 10 // targetEle.offset().left + elementWidth + 20;
                angular.element(className).show();
                
                $scope.VendorOrderModel.LockVendorOrder=function(){
                    $scope.VendorOrderModel.VendorOrderHeader.Status = 'Locked';
                }
            }
            
            $scope.applyCssOnPopUpRight = function (event, className) {
                var targetEle = angular.element(event.target);
                var elementWidth = targetEle.width();
                if (targetEle.width() > targetEle.parent().width()) {
                    elementWidth = targetEle.parent().width() - 15;
                }
                /* angular.element(className).css('top', targetEle.offset().top - 22);
                angular.element(className).css('left', targetEle.offset().left + elementWidth-400); */
                angular.element(className).css('top', targetEle.offset().top - 45);//.css('top', targetEle.offset().top - 22);
                angular.element(className).css('left', targetEle.offset().left + elementWidth + 10);// event.clientX+20);//targetEle.offset().left + elementWidth + 10 // targetEle.offset().left + elementWidth + 20;
                
                angular.element(className).show();
                
                $scope.VendorOrderModel.LockVendorOrder=function(){
                    $scope.VendorOrderModel.VendorOrderHeader.Status = 'Locked';
                }
            }
            
            /*************************** start : vendor info popup**********************************/
            	$scope.VendorOrderModel.showInfoOverlay = function (event, vendorId) {
                        var targetEle = angular.element(event.target);
                        var elementWidth = targetEle.width();
                        if (targetEle.width() > targetEle.parent().width()) {
                            elementWidth = targetEle.parent().width() - 15;
                        }
                        angular.element('.Vendor-info-overlay').css('top', targetEle.offset().top - 45);
                        angular.element('.Vendor-info-overlay').css('left', event.clientX);
                        angular.element('.Vendor-info-overlay').show();
                    } 
                $scope.VendorOrderModel.showVendorInfoOverlay = function (event, vendorId) {
                        debug("vendor id : "+vendorId);
                         $scope.$broadcast('VendorInfoPopUpEvent',  vendorId);
                         $scope.VendorOrderModel.showInfoOverlay(event, vendorId);
                }
	            $scope.VendorOrderModel.hideVendorInfoOverlay = function () {
	            	angular.element('.Vendor-info-overlay').hide();
	            }
            
            /*************************** end : vendor info popup**********************************/
            
            //function Enable /Disable Submit order Button
             $scope.VendorOrderModel.EnableFinaliseOrder = function(){
                if($scope.VendorOrderModel.VendorOrderHeader.Status == 'On Order'  || $scope.VendorOrderModel.vendorOrderLineItemGroupList.length == 0 ||
                        $scope.VendorOrderModel.VendorOrderHeader.Status == 'Partially Received' || $scope.VendorOrderModel.VendorOrderHeader.Status == 'Received'){
                    return false;
                }
                else{
                 return true;
                }
             }
             
             
             //Submit Order
            $scope.VendorOrderModel.finalizeOrder = function(){
             
            var  voHeaderId = $scope.VendorOrderModel.VendorOrderHeader.Id;
            var vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId
            
            debug(voHeaderId +','+ vendorId  +','+  $scope.VendorOrderModel.itemsPageSortAttrsJSON +','+  $scope.VendorOrderModel.customersPageSortAttrsJSON
            +','+  $scope.VendorOrderModel.stocksPageSortAttrsJSON)
             vendorOrderService.finalizeVendorOrder( voHeaderId , vendorId , $scope.VendorOrderModel.itemsPageSortAttrsJSON , $scope.VendorOrderModel.customersPageSortAttrsJSON, $scope.VendorOrderModel.stocksPageSortAttrsJSON)
                .then(function (successfulResult) {
                        $scope.VendorOrderModel.populatePageModels(successfulResult);
                        
                }, function (errorSearchResult) {
                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
                });
                
             }
        });
        
        vendorOrderApp.service("vendorOrderService", function ($q) {
        
            //Finalise order Service
             
            
            this.finalizeVendorOrder = function(voHeaderId,vendorId,itemsPageSortAttrsJSON,customersPageSortAttrsJSON,stocksPageSortAttrsJSON){
            	 voHeaderId = encodeString(voHeaderId);
                 vendorId = encodeString(vendorId);
                 itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                 customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                 stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                 var deferred = $q.defer();
                     Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.VendorOrderCtrl.finalizeVendorOrder}',
                                              voHeaderId,vendorId,itemsPageSortAttrsJSON,customersPageSortAttrsJSON
                                              ,stocksPageSortAttrsJSON,
                                                function (result, event) {
                                                if (event.type == 'exception') {
                                                    deferred.reject(event.message);
                                                } else { 
                                                    var vendorOrder = decodeString(result);
                                                    var find = '\'';
                                                    var re = new RegExp(find, 'g');
                                                    vendorOrder = vendorOrder.replace(re, '');
                                                    deferred.resolve(JSON.parse(vendorOrder));
                                                }
                                            }, {
                                                escape : true
                                            });
                                            return deferred.promise;
            }
            
        
            //Part Details
            this.getStockRecDetail = function(voliId){
            	 voliId = encodeString(voliId);
                 var deferred = $q.defer();
                     Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.VendorOrderCtrl.getStockRecDetail}',
                                              voliId,
                                                function (result, event) {
                                                if (event.type == 'exception') {
                                                    deferred.reject(event.message);
                                                } else {
                                                    var vendorOrder = decodeString(result);
                                                    var find = '\'';
                                                    var re = new RegExp(find, 'g');
                                                    vendorOrder = vendorOrder.replace(re, '');
                                                    deferred.resolve(JSON.parse(vendorOrder));
                                                }
                                            }, {
                                                escape : true
                                            });
                                            return deferred.promise;
            }
            
            // service Function to Pick all item from Group type required for customer of required for stcock
            this.groupAllVOLineItem= function( vendorId,  voHeaderId,  isRequiredForCustomer,  itemsPageSortAttrsJSON,
                                      customersPageSortAttrsJSON,  stocksPageSortAttrsJSON){
                                       vendorId = encodeString(vendorId);
                                       voHeaderId = encodeString(voHeaderId);
                                       itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                                       customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                                       stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                                       var deferred = $q.defer();
                                            Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.VendorOrderCtrl.groupAllVOLineItem}',
                                                vendorId, voHeaderId, isRequiredForCustomer, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                                                function (result, event) {
                                                if (event.type == 'exception') {
                                                    deferred.reject(event.message);
                                                } else {
                                                    var vendorOrder = decodeString(result);
                                                    var find = '\'';
                                                    var re = new RegExp(find, 'g');
                                                    vendorOrder = vendorOrder.replace(re, '');
                                                    deferred.resolve(JSON.parse(vendorOrder));
                                                }
                                            }, {
                                                escape : true
                                            });
                                            return deferred.promise;
                                     }
        
        
        
            this.getVOLineItem = function (voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,RequiredType) {
            	voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                RequiredType = encodeString(RequiredType);
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getVOLineItemWrapperJSON}',
                    null, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,null,RequiredType,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var vendorOrder = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        vendorOrder = vendorOrder.replace(re, '');
                        deferred.resolve(JSON.parse(vendorOrder));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            this.addVendor = function (vendorId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON) {
            	vendorId = encodeString(vendorId);
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.addVendor}',
                    vendorId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var vendorOrder = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        vendorOrder = vendorOrder.replace(re, '');
                        deferred.resolve(JSON.parse(vendorOrder));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            this.getPartRecord = function (partId){
            	partId = encodeString(partId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getPartByPartId}',
                                partId,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var partRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            partRec = partRec.replace(re, '');
                            deferred.resolve(JSON.parse(partRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.getCOHeaderRec = function (coHeaderId){
            	coHeaderId = encodeString(coHeaderId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getCoHeaderById}',
                                coHeaderId,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var coHeaderRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            coHeaderRec = coHeaderRec.replace(re, '');
                            deferred.resolve(JSON.parse(coHeaderRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.getGroupRecDetail = function (voGroupId, voHeaderId){
            	voGroupId = encodeString(voGroupId);
                voHeaderId = encodeString(voHeaderId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getGroupRecDetail}',
                                voGroupId, voHeaderId, 
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var vogDetailRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            vogDetailRec = vogDetailRec.replace(re, '');
                            deferred.resolve(JSON.parse(vogDetailRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.getPaginatedItemsForVOHeader = function (gridName, voHeaderId, pageSortAttrsJSON){
            	gridName = encodeString(gridName);
                voHeaderId = encodeString(voHeaderId);
                pageSortAttrsJSON = encodeString(angular.toJson(pageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getPaginatedItemsForVOHeader}',
                    gridName, voHeaderId, pageSortAttrsJSON,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.groupAllSimilarVOLineItem = function (vendorId, partId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON){
            	vendorId = encodeString(vendorId);
                partId = encodeString(partId);
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.groupAllSimilarVOLineItem}',
                    vendorId, partId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.removeGroupFromOrder = function (voLineItemGroupId, vendorId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON){
            	voLineItemGroupId = encodeString(voLineItemGroupId);
                vendorId = encodeString(vendorId);
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.removeGroupFromOrder}',
                    voLineItemGroupId, vendorId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.removeLineItemFromOrder = function (voLineItemId, voLineItemGroupId, voHeaderId, vendorId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON){
                voLineItemId = encodeString(voLineItemId);
                voLineItemGroupId = encodeString(voLineItemGroupId);
                voHeaderId = encodeString(voHeaderId);
                vendorId = encodeString(vendorId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.removeLineItemFromOrder}',
                    voLineItemId, voLineItemGroupId, voHeaderId, vendorId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            
            // Add Searched Item
            this.addSearchedRecord = function (partId, vendorId, voHeaderId, qtyRequired, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON , voLineItem,IsSearched){
               debug(IsSearched);
                partId = encodeString(partId);
                vendorId = encodeString(vendorId);
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                voLineItem = encodeString(voLineItem);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.addVOLineItemFromSearchToAdd}',
                    partId, vendorId, voHeaderId, +qtyRequired, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    voLineItem,IsSearched,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            // Update Order Status
            this.updateVOHederOrderType = function (voHeaderId, orderType, orderStatus){
               
                voHeaderId = encodeString(voHeaderId);
                orderType = encodeString(orderType);
                orderStatus = encodeString(orderStatus);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.updateVOHederOrderType}',
                    voHeaderId, orderType, orderStatus,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            if(resultInfo != null){
                                resultInfo = resultInfo.replace(re, '');
                            }
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
        });
        
        
        //start : customer flyout
        
        //end : customer flyout
    </script>
    
    <body ng-controller="vendorOrderController" ng-init="VendorOrderModel.loadVendor()" ng-cloak="ng-cloak">
        <!-- Header start -->
        <c:BPGlobalHeader />
        <!-- Header End -->
        <!-- content start here -->
       <div class="content">
                <!-- Side panel start -->   
         <div class="col-lg-2 col-md-2 sidePanel ">
            
            <div class="clearfix"></div>
            <div class="orderNumber row">
            	<span class="text-uppercase">{!$label.Label_Order} #:  {{VendorOrderModel.VendorOrderHeader.VOName}}</span>
            </div>
			<div class="sidepaneluserinfo row">
            	<!-- <div class="userimg">
                      <div style="float:left;background-color: #373c40; border-radius: 5px; padding: 1px; margin-right: 5px;">
                           <img  src="{!URLFOR($Resource.Images, 'star.png')}" style="height:35px; width:35px; padding: 5px;"/>
                      </div>
                </div> -->
                <div class="userNameblock" style="margin-left: 4px;">
                     <p ng-if="VendorOrderModel.VendorOrderHeader.VendorName == null && VendorOrderModel.VendorOrderHeader.VendorName.length == 0"> <!-- class="T3" -->
                     	  {!$label.Label_No} {!$label.Vendor_Object_Display_Label} &nbsp;<span class="T1_SubHeading"  >
                         	<a href="" ng-click="VendorOrderModel.RelatedList_addAction($event, 'Vendor')" id="Vo_workflow_sidepanel_add_vendor_link">{!$label.Label_Add} {!$label.Label_One}!</a>
                        </span>
                     </p>
                     <p ng-if="VendorOrderModel.VendorOrderHeader.VendorName != null && VendorOrderModel.VendorOrderHeader.VendorName.length != 0"> <!-- class="T3" -->
                     	
                         <!-- <span class="vendorName">  {{VendorOrderModel.VendorOrderHeader.VendorName}} </span> -->
                         <span class="vendorName">  
                         	<a href="" ng-mouseover="VendorOrderModel.showVendorInfoOverlay($event, VendorOrderModel.VendorOrderHeader.VendorId);" 
                                     ng-mouseleave="VendorOrderModel.hideVendorInfoOverlay();" id="CO_workflow_sidepanel_cust_name_link">
                                     	{{VendorOrderModel.VendorOrderHeader.VendorName}} 
                            </a>
                         </span>
                     </p>
                     <span class="vendorAccountNumber T7 ng-binding" ng-if="VendorOrderModel.VendorOrderHeader.VendorAccountNumber!=null">{{VendorOrderModel.VendorOrderHeader.VendorAccountNumber}}</span> <!-- class="T21" -->
                    <!--  <span class="orderType T3 ng-binding">{{VendorOrderModel.VendorOrderHeader.OrderType.Name}}</span> --> <!-- class="T11" -->
                 </div>
            </div>
            <div class="clearfix"></div>
	        <div class="row statusRow" ng-if="VendorOrderModel.VendorOrderHeader.OrderType.Name!=null && VendorOrderModel.VendorOrderHeader.OrderType.Name!=''">	
		        <span class="userType T3">{!$label.Order} {!$label.Label_Type}</span>
		        <span class="divider"> | </span>
		        <span class="orderType">{{VendorOrderModel.VendorOrderHeader.OrderType.Name}}</span>
	        </div>  
            <!-- <div class="clearfix"></div> -->
            <div class="row statusRow" ng-if="VendorOrderModel.VendorOrderHeader.Status != null && VendorOrderModel.VendorOrderHeader.Status != ''">	
		        <span class="userType T3">{!$label.Label_Status}</span>
		        <span class="divider"> | </span>
		        <span class="userStatus" >{{VendorOrderModel.VendorOrderHeader.Status}}</span>
	            
		        <!-- <button type="button" ng-if="VendorOrderModel.isPermittedToEditVOHeader" ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Open'" 
	            class="Servicegray T10" id="VO_workflow_sidepanel_info_div1_button1" ng-click="VendorOrderModel.updateVOHederOrderStatus('Locked')">{!$label.Label_Lock}</button>
	                                                            
	           	<button type="button" ng-if="VendorOrderModel.isPermittedToEditVOHeader" ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Locked'"
	            class="Servicegray T10" id="VO_workflow_sidepanel_info_div1_button2" ng-click="VendorOrderModel.updateVOHederOrderStatus('Open')">{!$label.Label_Open}</button> -->
	            
	            <button type="button" ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Open' && VendorOrderModel.isPermittedToEditVOHeader" 
	            class="Servicegray T10" id="VO_workflow_sidepanel_info_div1_button1" ng-click="VendorOrderModel.updateVOHederOrderStatus('Locked')">{!$label.Label_Lock}</button>
	                                                            
	           	<button type="button" ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Locked' && VendorOrderModel.isPermittedToEditVOHeader"
	            class="Servicegray T10" id="VO_workflow_sidepanel_info_div1_button2" ng-click="VendorOrderModel.updateVOHederOrderStatus('Open')">{!$label.Label_Open}</button>
	        </div>
	        
            <div class="clearfix"></div>
                    
            
            <div class="row ownerInfo">
            	<img src="{!URLFOR($Resource.Images, 'profile_default.jpg')}" style="height:30px; width:30px"/>
                <span class="Name">{!$User.FirstName} {!$User.LastName}</span>      
            </div>
             
			<div class="leftPanelLinks">
                <a class="row T10 mainSectionLink" ng-class="{'active' : VendorOrderModel.activeSidepanelink =='#InfoSection'}" href="#InfoSection"
                    ng-click="VendorOrderModel.sidepanelLink($event, 'Info')"><span class="alphabetLetter">{{VendorOrderModel.LeftSideHeadingLables.Info}}</span>{!$Label.Page_Section_Info}</a> 
                <!-- For : You haven't added anything yet! -->
	            <div ng-if="VendorOrderModel.VendorOrderHeader.VendorId!=null && VendorOrderModel.VendorOrderHeader.VendorId != ''">
	            <!-- For : You haven't added anything yet! -->    
                <a class="row T10 mainSectionLink" ng-class="{'active' : VendorOrderModel.activeSidepanelink =='#OrderSection'}" href="#OrderSection"
                    ng-click="VendorOrderModel.sidepanelLink($event, 'Order')"><span class="alphabetLetter">{{VendorOrderModel.LeftSideHeadingLables.Order}}</span>{!$Label.Order}</a> 
                
                <a class="row T10 subSectionLink" href="#Order_Items" ng-click="VendorOrderModel.sidepanelLink($event, 'Order')"> <span
                    class="alphabetLetter"></span>{!$Label.Items} </a> 
                
                <a class="row T10 subSectionLink" href="#Order_RequiredForCustomer" ng-click="VendorOrderModel.sidepanelLink($event, 'Order')"
                ng-show="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForCustomers != 0"> 
                <span class="alphabetLetter"></span>{!$Label.Required_For_Customer} </a> 
                                    
                <a class="row T10 subSectionLink" href="#Order_RequiredForStock" ng-clicknot="VendorOrderModel.sidepanelLink($event, 'Order')" 
                ng-show="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForStocks != 0"> 
                <span class="alphabetLetter"></span>{!$Label.Required_For_Stock} </a>
                
                <a class="row T10 mainSectionLink" ng-class="{'active' : VendorOrderModel.activeSidepanelink =='#StockExcessSection'}" href="#StockExcessSection"
                    ng-click="VendorOrderModel.sidepanelLink($event, 'StockExcess')" ng-show="VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0">
                    <span class="alphabetLetter">{{VendorOrderModel.LeftSideHeadingLables.Stock_Excess}}</span>{!$Label.Stock_Excess}</a> 
                
                <a class="row T10 mainSectionLink" ng-class="{'active' : VendorOrderModel.activeSidepanelink =='#ReceivingHistorySection'}" href="#ReceivingHistorySection"
                   ng-show="VendorOrderModel.VRHistoryList != undefined && VendorOrderModel.VRHistoryList.length != 0" ng-click="VendorOrderModel.sidepanelLink($event, 'ReceivingHistory')"><span class="alphabetLetter">{{VendorOrderModel.LeftSideHeadingLables.Receiving_History}}</span>{!$Label.Receiving_History}</a>
                                
                <a class="row T10 mainSectionLink" ng-class="{'active' : VendorOrderModel.activeSidepanelink =='#FinalizeSection'}" href="#FinalizeSection"
                   ng-show="VendorOrderModel.EnableFinaliseOrder()" ng-click="VendorOrderModel.sidepanelLink($event, 'Finalize')"><span class="alphabetLetter">{{VendorOrderModel.LeftSideHeadingLables.Finalize}}</span>{!$Label.Finalize}</a>
				<!-- For : You haven't added anything yet! -->
	            </div>
	            <!-- For : You haven't added anything yet! -->
            </div>
             <!-- Section Totals -->
            <div class="sideBarTotals">
                    	<div class="C1 orderleftPanelLinks">
	                        <div class="ordertotal">
	                        <a class= "T10 subSectionLink ">{!$Label.Order} {!$Label.Label_Total}</a>
	                        <a class= "T10 subSectionLink text-right">{{VendorOrderModel.GroupTotalCost | currency}}</a>
	                        </div>
	                        
	                        <div class="ordertotal">
	                        <a class= "T10 subSectionLink ">{!$Label.Label_Received}</a>
	                        <!-- <a class= "T10 subSectionLink text-right">{{VendorOrderModel.VRHistoryList[0].ReceivedTotal | currency}}</a> -->
	                        <a class= "T10 subSectionLink text-right" ng-if="VendorOrderModel.VRHistoryList[0].ReceivedTotal!=null">{{VendorOrderModel.VRHistoryList[0].ReceivedTotal | currency}}</a>
	                        <a class= "T10 subSectionLink text-right" ng-if="VendorOrderModel.VRHistoryList[0].ReceivedTotal==null">$0.00</a>
	                        </div>
                        
                      	</div>
                        <div class="mainSectionLink totalDue C1">
	                        <a class="T2">{!$Label.Label_Unreceived}:</a>
	                        <a class="T2 text-right">{{VendorOrderModel.GroupTotalCost | currency}}</a>
	                    </div>
                    </div>

        </div>
   
               <!-- End Left Side Bar --> 
                <!-- Start Center Panel -->
                
                <div class="col-lg-10 col-md-10 mainSection" style="margin-top: 98px;">
       		
	            
            <div class=" sectionHeader row fixedRow" >
                <div class="col-lg-6 col-md-6" ng-show="VendorOrderModel.activeSidepanelink =='#InfoSection'">
                    <div class="fixedHeaderText">
                        <span class="headerlabel">
                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
                            ng-show="!VendorOrderModel.displaySections.Info"
                            ng-Click="VendorOrderModel.displaySections.Info = true">
                        </i> 
                        <i class="fa fa-angle-down" style="width:10px;"
                            ng-show="VendorOrderModel.displaySections.Info"
                            ng-Click="VendorOrderModel.displaySections.Info = false">
                        </i> 
                        <span class="divider">|</span>
                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Info}} {!$Label.Page_Section_Info}</span>
                        </span>
                        <span class="ActionIcons pull-left ">
                               <div class="dropdown selectDropdown checkboxDropdown">
                                  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
                                  <span class="caret"></span></button>
                            </div>
                        </span> 
                    </div>
                </div>
                <div class="col-lg-6 col-md-6" ng-show="VendorOrderModel.activeSidepanelink =='#OrderSection'">
                    <div class="fixedHeaderText">
                        <span class="headerlabel">
                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
                            ng-show="!VendorOrderModel.displaySections.Order"
                            ng-Click="VendorOrderModel.displaySections.Order = true">
                        </i> 
                        <i class="fa fa-angle-down" style="width:10px;"
                            ng-show="VendorOrderModel.displaySections.Order"
                            ng-Click="VendorOrderModel.displaySections.Order = false">
                        </i> 
                        <span class="divider">|</span>
                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Order}} {!$Label.Order}</span>
                        </span>
                          <span class="ActionIcons pull-left ">
                               <div class="dropdown selectDropdown checkboxDropdown">
                                  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
                                  <span class="caret"></span></button>
                            </div>
                        </span>
                        <span class="T3 pull-right total">
                                      <!-- <a id="vendor_order_total">
                                        {{VendorOrderModel.GroupTotalCost | currency}}
                                      </a> -->
                                      <p id="vendor_order_total">
                                        {{VendorOrderModel.GroupTotalCost | currency}}
                                      </p>
                                    </span> 
                    </div>
                </div>
                <!-- ng-show="VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0" -->
                <div ng-show="VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0"> 
	                <div class="col-lg-6 col-md-6" ng-show="VendorOrderModel.activeSidepanelink =='#StockExcessSection'"> 
	                    <div class="fixedHeaderText">
	                        <span class="headerlabel">
	                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
	                            ng-show="!VendorOrderModel.displaySections.StockExcess"
	                            ng-Click="VendorOrderModel.displaySections.StockExcess = true">
	                        </i> 
	                        <i class="fa fa-angle-down" style="width:10px;"
	                            ng-show="VendorOrderModel.displaySections.StockExcess"
	                            ng-Click="VendorOrderModel.displaySections.StockExcess = false">
	                        </i> 
	                        <span class="divider">|</span>
	                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Stock_Excess}} {!$Label.Stock_Excess}</span>
	                        </span>
	                          <span class="ActionIcons pull-left ">
	                               <div class="dropdown selectDropdown checkboxDropdown">
	                                  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
	                                  <span class="caret"></span></button>
	                            </div>
	                        </span> 
	                    </div>
	                </div> 
                </div> 
                <div ng-show="VendorOrderModel.VRHistoryList != undefined && VendorOrderModel.VRHistoryList.length != 0">
	                <div class="col-lg-6 col-md-6" ng-show="VendorOrderModel.activeSidepanelink =='#ReceivingHistorySection'">
	                    <div class="fixedHeaderText">
	                        <span class="headerlabel">
	                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
	                            ng-show="!VendorOrderModel.displaySections.ReceivingHistory"
	                            ng-Click="VendorOrderModel.displaySections.ReceivingHistory = true">
	                        </i> 
	                        <i class="fa fa-angle-down" style="width:10px;"
	                            ng-show="VendorOrderModel.displaySections.ReceivingHistory"
	                            ng-Click="VendorOrderModel.displaySections.ReceivingHistory = false">
	                        </i> 
	                        <span class="divider">|</span>
	                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Receiving_History}} {!$Label.Receiving_History}</span>
	                        </span>
	                        <span class="ActionIcons pull-left ">
	                               <div class="dropdown selectDropdown checkboxDropdown">
	                                  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
	                                  <span class="caret"></span></button>
	                            </div>
	                        </span> 
	                    </div>
	                </div>
	            </div>
	            <div ng-show="VendorOrderModel.EnableFinaliseOrder()">
	                <div class="col-lg-6 col-md-6" ng-show="VendorOrderModel.activeSidepanelink =='#FinalizeSection'">
	                    <div class="fixedHeaderText">
	                        <span class="headerlabel">
	                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
	                            ng-show="!VendorOrderModel.displaySections.Finalize"
	                            ng-Click="VendorOrderModel.displaySections.Finalize = true">
	                        </i> 
	                        <i class="fa fa-angle-down" style="width:10px;"
	                            ng-show="VendorOrderModel.displaySections.Finalize"
	                            ng-Click="VendorOrderModel.displaySections.Finalize = false">
	                        </i> 
	                        <span class="divider">|</span>
	                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Finalize}} {!$Label.Finalize}</span>
	                        </span>
	                        <span class="ActionIcons pull-left ">
	                               <div class="dropdown selectDropdown checkboxDropdown">
	                                  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
	                                  <span class="caret"></span></button>
	                            </div>
	                        </span> 
	                    </div>
	                </div>
	            </div>
                <div class="col-lg-6 col-md-6 fixedContent">
                	<div class="fa-icons">
                   		<i class="fa fa-refresh fa-2x fa-fw" ng-class="{'fa-spin' : VendorOrderModel.isrefresh}"
	                              ng-click="VendorOrderModel.refreshVendorOrder();">
                        </i>
                    </div>
                    <!-- <button class="flatBtn" ng-click="VendorOrderModel.editPart()" type="button">EDIT</button> -->
                    <div class="fa-icons pull-right">
                        <i class="fa fa-floppy-o"></i>
                        <i class="fa fa-cog"></i>
                    </div>        
                    
              	  <div class="col-lg-7 col-md-6 searchToAdd  pull-right searchBox">
              	  		<!-- <div class="input-group" ng-class="{'activeSearchDiv' : VendorOrderModel.searchDivActive}" ng-mouseup="VendorOrderModel.select()" ng-focus="VendorOrderModel.resetHideResults()" ng-blur="VendorOrderModel.hideResults()">
                         -->         
                                <div class="input-group" ng-class="{'activeSearchDiv' : VendorOrderModel.searchDivActive}">
                                  
                                    <div class="input-group-btn">
                                        <button type="button" class="btn C5 LabelBtn">
                                        <span class="T5 text-uppercase" style="color: #939CA9;">{!$Label.Label_To}:</span>
                                        <span style="color: #FFFFFF;">{{VendorOrderModel.selectedItem}}</span>
                                        </button>
                                        <button type="button" class="btn C5 dropdown-toggle caretBtn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="caret"></span>
                                        <span class="sr-only">{!$Label.Label_Toggle_Dropdown}</span>
                                        </button>
                                        <ul class="dropdown-menu">
                                        <li><a href="#InfoSection" ng-click="VendorOrderModel.dropDownItem($event, 'Info')">{!$Label.Page_Section_Info}</a></li>
	                                    <!-- For : You haven't added anything yet! -->
	                                    <li><a href="#OrderSection" ng-click="VendorOrderModel.dropDownItem($event, 'Order')">{!$Label.Order}</a></li>
	                                    <li ng-show="VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0 && VendorOrderModel.VendorOrderHeader.VendorId!=null && VendorOrderModel.VendorOrderHeader.VendorId != ''"><a href="#StockExcessSection" ng-click="VendorOrderModel.dropDownItem($event, 'StockExcess')">{!$Label.Stock_Excess}</a></li>
	                                    <li ng-show="VendorOrderModel.VRHistoryList != undefined && VendorOrderModel.VRHistoryList.length != 0"><a href="#ReceivingHistorySection" ng-click="VendorOrderModel.dropDownItem($event, 'ReceivingHistory')">{!$Label.Receiving_History}</a></li>
	                                    <li ng-show="VendorOrderModel.EnableFinaliseOrder()"><a href="#FinalizeSection" ng-click="VendorOrderModel.dropDownItem($event, 'Finalize')">{!$Label.Finalize}</a></li>
	                                    <!-- For : You haven't added anything yet! -->
	                                    <li role="separator" class="divider"></li>
	                                    <li class="text-uppercase"><a href="#">{!$Label.Label_Advanced} {!$Label.Label_Search}</a></li>
                                           
                                        </ul>
                                    </div>
                                    <!-- /btn-group -->
                                    
                                    <div class="inner-addon right-addon neVendorOrderAutocomplete-container" ng-class="{'disabledSearchToAddElement' : (VendorOrderModel.VendorOrderHeader.Status != 'Open' && VendorOrderModel.VendorOrderHeader.Status != 'Locked' && VendorOrderModel.VendorOrderHeader.Status != null && VendorOrderModel.VendorOrderHeader.Status != '')}">
                                        <i class="fa fa-search fa-flip-horizontal"></i>
                                     <c:SearchToAdd />
                                        <!-- <input class="header-search form-control"  placeholder="search to Add Related" type="text" /> -->
                                    </div>
                                    
                                    <!-- <div class="inner-addon right-addon" ng-show="CustomerOrderModel.isSearchToAddVisible()">
                                        <i class="fa fa-search fa-flip-horizontal"></i>
                                      <angucomplete id="CO_SearchToAdd" placeholder="Search To add" pause="200"  
                                       selectedobject="CustomerOrderModel"   searchfields="Name" titlefield="Name" descriptionField="Info" 
                                        otherdesc="Description" minlength="2" inputclass="form-control form-control-small" matchclass="highlight" />
                                        <input class="header-search form-control"  placeholder="search to Add Related" type="text" />
                                    </div> -->
                                </div>
                                <!-- /input-group -->
                            </div>
                          
              </div>
            </div>
            	
            	<!-- ******************************************************* start of info section ******************************************************* -->
            
	            <div id="InfoSection" >
	            	<div class="main_section row" ng-show="VendorOrderModel.displaySections.Info">
                    	<div id="Info_General">
	                        <div class="row rowGeneral" >
								<div class="col-lg-12 col-md-12 Pl24">    <!--  MB48 -->
	                               <div class="col-lg-7 col-md-7 Plr12">
	                                  <p class="T3 MB24 F12 FC2">{!$Label.Vendor_Object_Display_Label}</p>
	                                  <div class="col-md-6 Plr0">
	                                     <div class="col-lg-4 col-md-5 Plr0 MB12  ">
	                                        <img class="Profile_pic" src="{!URLFOR($Resource.Images, 'profile_default.jpg')}" style="height:100px;width:100%"/>
	                                     </div>
	                                     <div class="col-lg-8 col-md-7 Plr12 MB12 ">
	                                         <div ng-if="VendorOrderModel.VendorOrderHeader.VendorName==null" >
	                                            <span class="T1_SubHeading"  >
	                                                <a href="" ng-click="VendorOrderModel.RelatedList_addAction($event, 'Vendor')" id="CO_workflow_sidepanel_add_cust_link">{!$Label.Label_Add} {!$Label.Vendor_Object_Display_Label}</a>
	                                            </span> 
	                                         </div> 
	                                         <div  ng-if="VendorOrderModel.VendorOrderHeader.VendorName!=null">
	                                            <p class="T1 vendorType" > 
	                                                <a href="" ng-mouseover="VendorOrderModel.showVendorInfoOverlay($event, VendorOrderModel.VendorOrderHeader.VendorId);" 
						                                     ng-mouseleave="VendorOrderModel.hideVendorInfoOverlay();" id="CO_workflow_sidepanel_cust_name_link">
						                                     	{{VendorOrderModel.VendorOrderHeader.VendorName}} 
						                            </a>
	                                            </p>
	                                        </div>
	                                        <div style="float:left;background-color: #373c40; border-radius: 5px; padding: 1px; margin-right: 5px;">
	                                           <img src="{!URLFOR($Resource.Images, 'star.png')}" style="height:35px; width:35px; padding: 5px;"/>
	                                        </div>
	                                        <p class="T7" style="margin-left:20px;padding-top:10px ;padding-left:24px"> {!$Label.Label_Gamification}</p>
	                                     </div>
	                                    
	                                    <!-- <div class="col-lg-4 col-md-5 Plr12 MB24"  style="clear:both;">
	                                        <i class="fa fa-motorcycle FC7"></i>
	                                        <i class="fa fa-motorcycle FC7"></i>
	                                        <i class="fa fa-wrench FC7"></i>
	                                     </div> -->
	                                    <!-- <div class="col-lg-8 col-md-7 Plr0 MB24 " ng-if="VendorOrderModel.VendorOrderHeader.VendorName !=null" >
	                                        <span class="T7 F9">Last Visited 04/06/2015</span>
	                                     </div> -->
	                                     
	                                     <div class="col-md-12 Plr12 Mrg20 " style="Padding:0px" ng-repeat="cust in  VendorOrderModel.CustomerInfoDetails" ng-if="VendorOrderModel.Customer.Name !=null">
	                                        <div style="float:left;width:30%">
	                                        <label class="ng-binding T7">{{cust.label}}</label></div>
	                                        <div class="mycustvalue"  style="float:left;width:70%" >
	                                        <span class="ng-binding  T3 PL20" style="width: 100%; word-wrap: break-word; word-break:break-word;" >{{cust.value}}</span>
	                                        </div>
	                                     </div>
	                                     
	                                     
	                                     
	                                  </div>
	                                  
	                                  <div class="col-md-10 Plr0  MB24 order-type-container" ng-if="VendorOrderModel.VendorOrderHeader.OrderType.Name!=null && VendorOrderModel.VendorOrderHeader.OrderType.Name!=''">   <!-- MB6  -->
	                                  	 <span class="T3 col-md-3 Plr0">{!$Label.Label_Order_Type}
	                                  	 	</span>
	                                  		<div class="form-label "
											id="customer-order-info_STATUS_form-label">
											<select class="form-control"
												ng-if="VendorOrderModel.isPermittedToEditVOHeader"
												ng-model="VendorOrderModel.VendorOrderHeader.OrderType.Id"
												ng-click="$event.stopPropagation();"
												ng-change="VendorOrderModel.updateVOHederOrderStatus()"
												ng-options="orderType.Id as orderType.Name for orderType in VendorOrderModel.OrderTypes"
												ng-disabled="VendorOrderModel.VendorOrderHeader.Status!='Locked' && VendorOrderModel.VendorOrderHeader.Status!='Open'"
												style="width: 38%">
											</select> <span id="customer-order-info_OrderType"
												ng-if="!VendorOrderModel.isPermittedToEditVOHeader">{{VendorOrderModel.VendorOrderHeader.OrderType.Name}}</span>
										</div>
	                                  </div>
	                                  <!-- <div class="col-md-10 Plr0 MB6 date-type-container">
	                                  	 <span class="T3 col-md-3 Plr0">{!$Label.Label_Dates}</span>
	                                  	 <div class="form-label " id="VO_workflow_sidepanel_info_div3_link1">
                                            <span class="T7 Plr0"><a href="" id="VO_workflow_sidepanel_info_div3_link1">Fullfil - 3 Days</a></span>
                                         </div>
	                                  </div>
	                                  <div class="col-md-10 Plr0 MB6 date-type-container">
	                                  	 <span class="T3 col-md-3 Plr0">&nbsp;</span>
	                                  	 <div class="form-label " id="VO_workflow_sidepanel_info_div3_link1">
                                            <span class="T7 Plr0"><a href="" id="VO_workflow_sidepanel_info_div3_link1">Fullfil - 3 Days</a></span>
                                         </div>
	                                  </div> -->
	                                  <div class="col-md-12  Plr0 dates-container">
	                                         <span class="T3 col-md-12 Plr0 MB12" ng-if="">{!$Label.Label_Dates}</span>
	                                         <div class="col-md-12 Plr0 MB6"  ng-if = "VendorOrderModel.VendorOrderHeader.OrderedDate != '' && VendorOrderModel.VendorOrderHeader.OrderedDate != null">
	                                            <label class="col-md-4 T7 Plr0">{!$Label.Label_Ordered} {!$Label.Label_Date}:</label>
	                                            <span class="col-md-7 T7 Plr0">{{VendorOrderModel.VendorOrderHeader.OrderedDate}}</span>
	                                         </div>
	                                         <div class="col-md-12 Plr0 MB6" ng-if = "VendorOrderModel.VendorOrderHeader.ExpectedDate != '' && VendorOrderModel.VendorOrderHeader.ExpectedDate != null">
	                                            <label class="col-md-4 T7 Plr0">{!$Label.Label_Expected_Date}:</label>
	                                            <span class="col-md-7 T7 Plr0">{{VendorOrderModel.VendorOrderHeader.ExpectedDate}}</span>
	                                         </div>
	                                         <div class="col-md-12 Plr0 MB6" ng-if = "VendorOrderModel.VendorOrderHeader.ReceivedDate != '' && VendorOrderModel.VendorOrderHeader.ReceivedDate != null">
	                                            <label class="col-md-4 T7 Plr0">{!$Label.Label_Receiving} {!$Label.Label_Date}:</label>
	                                            <span class="col-md-7 T7 Plr0">{{VendorOrderModel.VendorOrderHeader.ReceivedDate}}</span>
	                                         </div>
	                                         <div class="col-md-12 Plr0 MB6" ng-if = "VendorOrderModel.VendorOrderHeader.CreatedDate != '' && VendorOrderModel.VendorOrderHeader.CreatedDate != null">
	                                            <label class="col-md-4 T7 Plr0">{!$Label.Label_Created} {!$Label.Label_Date}:</label>
	                                            <span class="col-md-7 T7 Plr0">{{VendorOrderModel.VendorOrderHeader.CreatedDate}}</span>
	                                         </div>	                                        
	                                      </div>
	                                   
	                               </div>
	                               <div class="col-lg-5 col-md-5 Plr12">
	                                  <div class="col-md-6 Plr0 MB24">
	                                     <p class="T3 MB24 F12"> {!$Label.Label_Owner}</p>
	                                     <div class="col-md-4 Plr0 MB12  ">
	                                        
	                                         <img src="{!URLFOR($Resource.Images, 'profile_default.jpg')}" class="Profile_pic"  style="height:80px;width:100%"/>
	                                     </div>
	                                     <div class="col-md-8 Plr12 MB12 ">
	                                        <p class="T1 Lh25 F16" style="margin-bottom:1px;"> {{VendorOrderModel.VendorOrderHeader.OwnerName}}</p>
	                                        <div style="float:left;background-color: #373c40; border-radius: 5px; padding: 1px; margin-right: 5px;">
	                                           <img  src="{!URLFOR($Resource.Images, 'star.png')}" style="height:25px; width:25px; padding: 5px;"/>
	                                        </div>
	                                        <p class="T7" style="padding-top:10px ;padding-left:24px"> {!$Label.Label_Gamification}</p>
	                                     </div>
	                                  </div>
	                                      <div class="col-md-12 MB24 Plr0 status-container" ng-if="VendorOrderModel.VendorOrderHeader.Status!=null && VendorOrderModel.VendorOrderHeader.Status!=''">
	                                         <span class="T3 col-md-2 Plr0">{!$Label.Label_Status}</span>
	                                         <label class="FC10 T3" style="color:green">{{VendorOrderModel.VendorOrderHeader.Status}}</label>
	                                          <button type="button" ng-if="VendorOrderModel.isPermittedToEditVOHeader" ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Open'" 
                                                            class="Servicegray T10" id="VO_workflow_sidepanel_info_div1_button1" ng-click="VendorOrderModel.updateVOHederOrderStatus('Locked')">{!$Label.Label_Lock}</button>
                                                            
                                                    <button type="button" ng-if="VendorOrderModel.isPermittedToEditVOHeader" ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Locked'"
                                                            class="Servicegray T10" id="VO_workflow_sidepanel_info_div1_button2" ng-click="VendorOrderModel.updateVOHederOrderStatus('Open')">{!$Label.Label_Open}</button>
	                                      </div>
	                                      <!-- <div class="col-md-12  Plr0 dates-container">
	                                         <span class="T3 col-md-12 Plr0 MB12">{!$Label.Label_Dates}</span>
	                                         <div class="col-md-12 Plr0 MB6"  ng-if = "VendorOrderModel.VendorOrderHeader.OrderedDate != '' && VendorOrderModel.VendorOrderHeader.OrderedDate != null">
	                                            <label class="col-md-4 T7 Plr0">{!$Label.Label_Ordered} {!$Label.Label_Date}:</label>
	                                            <span class="col-md-7 T7 Plr0">{{VendorOrderModel.VendorOrderHeader.OrderedDate}}</span>
	                                         </div>
	                                         <div class="col-md-12 Plr0 MB6" ng-if = "VendorOrderModel.VendorOrderHeader.ExpectedDate != '' && VendorOrderModel.VendorOrderHeader.ExpectedDate != null">
	                                            <label class="col-md-4 T7 Plr0">{!$Label.Label_Expected_Date}:</label>
	                                            <span class="col-md-7 T7 Plr0">{{VendorOrderModel.VendorOrderHeader.ExpectedDate}}</span>
	                                         </div>
	                                         <div class="col-md-12 Plr0 MB6" ng-if = "VendorOrderModel.VendorOrderHeader.ReceivedDate != '' && VendorOrderModel.VendorOrderHeader.ReceivedDate != null">
	                                            <label class="col-md-4 T7 Plr0">{!$Label.Label_Receiving} {!$Label.Label_Date}:</label>
	                                            <span class="col-md-7 T7 Plr0">{{VendorOrderModel.VendorOrderHeader.ReceivedDate}}</span>
	                                         </div>
	                                         <div class="col-md-12 Plr0 MB6" ng-if = "VendorOrderModel.VendorOrderHeader.CreatedDate != '' && VendorOrderModel.VendorOrderHeader.CreatedDate != null">
	                                            <label class="col-md-4 T7 Plr0">{!$Label.Label_Created} {!$Label.Label_Date}:</label>
	                                            <span class="col-md-7 T7 Plr0">{{VendorOrderModel.VendorOrderHeader.CreatedDate}}</span>
	                                         </div>	                                        
	                                      </div> -->
	                                    </div>
	                            </div>
	                            
	                                <!-- <div class="col-lg-12 col-md-12 T3 addnewItem " id="CO_notanyitemadded" 
	                                    ng-if="VendorOrderModel.MerchandiseItems.length == 0 && VendorOrderModel.SOHeaderList == 0"> -->
	                             <div class="col-lg-12 col-md-12 T3 addnewItem " id="CO_notanyitemadded" 
	                                    ng-if="VendorOrderModel.VendorOrderHeader.VendorId==null || VendorOrderModel.VendorOrderHeader.VendorId == ''"><!-- VendorOrderModel.VendorOrderHeader.VendorName -->
	                                  <a id="CO_notanyitemadded" ng-click="VendorOrderModel.RelatedList_addAction($event, 'Vendor')">
	                                     {!$Label.Label_Add} {!$Label.New_Label} {!$Label.Vendor_Object_Display_Label}.<!--  You haven't added anything yet! Add something. -->
	                                  </a>
	                             </div>
	                            
	                            
	                           
	                            
	                            </div>
	                    </div>
	                </div>
                </div>
	            <!-- For : You haven't added anything yet! -->
	            <div ng-if="VendorOrderModel.VendorOrderHeader.VendorId!=null && VendorOrderModel.VendorOrderHeader.VendorId != ''">
	            <!-- For : You haven't added anything yet! -->
	            <!-- ******************************************************* end of info section ******************************************************* -->
	            <!-- ******************************************************* header for order section ******************************************************* -->
	            <div class="sectionHeader row">
	            	<div class="col-lg-6 col-md-6">
                		<div class="fixedHeaderText">
	                        <span class="headerlabel">
		                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
		                            ng-show="!VendorOrderModel.displaySections.Order"
		                            ng-Click="VendorOrderModel.displaySections.Order = true">
		                        </i> 
		                        <i class="fa fa-angle-down" style="width:10px;"
		                            ng-show="VendorOrderModel.displaySections.Order"
		                            ng-Click="VendorOrderModel.displaySections.Order = false">
		                        </i> 
		                        <span class="divider">|</span>
		                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Order}} {!$Label.Order}</span>
	                        </span>
	                        <span class="ActionIcons pull-left ">
	                        	<div class="dropdown selectDropdown checkboxDropdown">
			                        <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
			                        <span class="caret"></span></button>
			                        <!-- <ul class="dropdown-menu" ng-if = "CustomerOrderModel.isDeleteServiceOrder($index)">
                                                <li><a  ng-click="CustomerOrderModel.deleteSoHeaderInfo(CustomerOrderModel.SOHeaderList[$index].SOHeaderInfo.Id)">Remove Item</a></li>
                                            </ul> -->
	                       		</div>
	                        </span>
	                        <!-- <span class="ActionIcons pull-left" ng-if="SOHeader.SOHeaderInfo.TransactionType == 'Third-Party'">
                                        <div class="dropdown selectDropdown checkboxDropdown">
                                            <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">Claim
                                            <span class="caret"></span></button>
                                            <ul class="dropdown-menu">
                                                <li ng-repeat="claimStatus in SOHeader.SOHeaderInfo.AvailableClaimStatusList"
                                                    ng-click="CustomerOrderModel.changeClaimStatus(claimStatus, $parent.$index)"><a>{{claimStatus.AvailableStatus}}</a></li>
                                                <li ng-show="SOHeader.SOHeaderInfo.AvailableClaimStatusList.length == 0"><a>No Action Available</a></li>
                                            </ul>
                                        </div>
                                    </span>  -->
                             <span class="T3 pull-right total">
                                      <!-- <a id="vendor_order_total">
                                        {{VendorOrderModel.GroupTotalCost | currency}}
                                      </a> -->
                                      <p id="vendor_order_total">
                                        {{VendorOrderModel.GroupTotalCost | currency}}
                                      </p>
                                    </span>
                    	</div>
                	</div>
	            </div>
	            
	            <!-- ******************************************************* header for order section ******************************************************* -->
	            
	            <!-- ******************************************************* body for order section ******************************************************* -->
	            <div id="OrderSection" >
	            	<div ng-show="VendorOrderModel.displaySections.Order">
	            	
	            		<!-- START: ITEMS section -->
	            		<div class="main_section_COU row" id="Order_Items">
	            			<div class="main_section_COU_Header row actionRowForOrder" >
	            				<div class="actionRow " > <!-- <p> -->
		            				
	                                <span class="sectionText T2">{!$Label.Items}
		                            	<i class="fa fa-plus cou_plus_icon " ng-if="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && (VendorOrderModel.VendorOrderHeader.VendorId != null && VendorOrderModel.VendorOrderHeader.VendorId != '')"
	                                                    ng-click="VendorOrderModel.RelatedList_addAction($event, 'Merchandise')"></i>
	                                </span>
	                                
		                            <span class="ActionIcons" >
			                        	<div class="dropdown selectDropdown checkboxDropdown">
			                        		<span class="actionText T2 dropdown-toggle" data-toggle="dropdown" aria-expanded="false">{!$Label.Label_Actions}
					                        </span>
					                        <!-- <button class="btn dropdown-toggle" data-toggle="dropdown" type="button" aria-expanded="false">{!$Label.Label_Actions}
					                        <span class="caret"></span></button> -->
					                        <!-- <ul class="dropdown-menu" ng-if="VendorOrderModel.VendorOrderHeader.Status == 'Locked' || VendorOrderModel.VendorOrderHeader.Status == 'Open'"> ng-if = "CustomerOrderModel.isDeleteServiceOrder($index)"
		                                    	<li>
		                                    		<a ng-click="VendorOrderModel.deleteSoHeaderInfo(VendorOrderModel.SOHeaderList[$index].SOHeaderInfo.Id)">{!$Label.Label_Remove} {!$Label.Label_Item}</a>
		                                    	</li>
		                                    </ul> -->
			                       		</div>
	                        		</span>
		                            
		                            <span class="ActionIcons">
			                            <i class="fa fa-question-circle" data-toggle="tooltip" title="{{VendorOrderModel.helpText['Items']}}" ></i>
			                        </span> 
		                        </div><!-- </p> -->
	            			</div>
	            			<div class="gid_container T6" id="VO_Order_block_grid_container_Empty_Div" 
                                        ng-show="VendorOrderModel.vendorOrderLineItemGroupList.length == 0 || VendorOrderModel.vendorOrderLineItemGroupList.length ==undefined ">
                                        {!$Label.Label_Add} {!$Label.New_Label} {!$Label.Label_Part}<!-- {!$Label.Label_No_Records_Found} -->
                            </div>
                           <div ng-show="VendorOrderModel.vendorOrderLineItemGroupList.length != 0 && VendorOrderModel.vendorOrderLineItemGroupList.length !=undefined " > 
	                        <!-- <div> -->
	                        	 <div class="gid_container_Customer" id="VO_Order_block_grid_container">
                              
                                <table class="table" id="VendorOrderItem_Grid">
                                                   
                                                    <col width="2%"/>
                                                    <col width="4%"/>
                                                    <col width="22%"/>
                                                    <col width="13%"/>
                                                    <col width="13%"/>
                                                    <col width="12%"/>
                                                    <col width="12%"/>
                                                    <col width="12%"/>
                                                    <col width="12%"/>
                                                    <col width="1%"/>
                                                    <tr  class="tableHeader T3 C2">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.itemsPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            {!$Label.Part_Object_Item_Description}
                                                        </th>
                                                        <th class="text-center ">{!$Label.Label_Need}</th>
                                                        <th>{!$Label.Label_Needed_For}</th>
                                                        <th class="text-center ">{!$Label.Label_Needed_By}</th>
                                                        <th class="text-center ">{!$Label.Label_Order}</th>
                                                        <th class="text-center ">{!$Label.Label_Cost}</th>
                                                        <th class="text-center ">{!$Label.Label_Total}</th>
                                                        <th></th>
                                                    </tr>
                                                    <tbody ng-repeat="voGroupItem in VendorOrderModel.vendorOrderLineItemGroupList "><!-- track by $index" ng-init="AOHeaderIndex = $index" > -->
                                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit"  
                                                            ng-click="VendorOrderModel.editGroupItem($event, $index)"
                                                            ng-blur = "VendorOrderModel.editGroupItem($event, $index)" ng-class-even="'C2'">
                                                            <!-- <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" class="group_exapnded_tr">
                                                                <i class="fa fa-wrench"></i>
                                                            </td > -->
                                                            <td style="background:#fff"></td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" >
				                                                <a href="" class="edite_btn" rel="row1_edit">
				                                                	<!-- <i class="fa fa-list  Plr5 FC7 F18 first_icon"></i> -->
				                                                	<img class="first_img" src="{!URLFOR($Resource.Images, 'sparkplug.png')}" />
				                                                </a>
				                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" class="T7 ">
                                                                 <div>
                                                                    
                                                                    <a ng-mouseover="VendorOrderModel.openpartpopup($event, voGroupItem.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();"> 
                                                                        {{ voGroupItem.ItemDesc }}
                                                                    </a>
                                                                 </div>
                                                                 <div ng-if="voGroupItem.UnitType !=null" style="color:red">{{ voGroupItem.OrderType }}</div>
                                                                
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" class="T7 text-center">
                                                                {{ voGroupItem.Need }} 
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}" class="T7 ">
                                                                
                                                                <div>{{voGroupItem.NeededFor}}</div>
                                                                <div><span ng-if="voGroupItem.IsExcess" style="Color:red">
                                                                    <a ng-mouseover="VendorOrderModel.showNeededForPopUp($event, voGroupItem.Id, VendorOrderModel.voHeaderId);" ng-mouseleave="VendorOrderModel.hideNeededForPopUp();" style="color:red"> 
                                                                        {!$Label.Label_With} {!$Label.Label_Excess}
                                                                    </a>
                                                                </span>
                                                                </div>
                                                                
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" class="T7 text-center">
                                                                {{ voGroupItem.NeededBy  ==  null ? ' ' :voGroupItem.NeededBy }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}" class="T7 text-center">
                                                                {{ voGroupItem.OrderValue }} {{ voGroupItem.UnitType == null || voGroupItem.UnitType == "NULL" ?  " " :" " + voGroupItem.UnitType }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" class="T7 text-center ">
                                                                {{ voGroupItem.Cost  | currency}}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}" class="T7 text-center ">
                                                                {{ voGroupItem.Total  | currency}}
                                                            </td>
                                                        	<td style="background:#fff"></td>
                                                        </tr>
                                                        
                                                        <!-- new -->
                                                        <tr ng-show="VendorOrderModel.groupItems_editRow[$index].isEdit">
                                                <td style="background:#fff"></td>
                                                <td style="background:#fff" ng-class="{'BL': voGroupItem.hasChildren}"></td>
                                                <!-- <td style="background:#fff"></td> -->
                                                <td class="available_td" colspan="7">    <!-- colspan="5" -->
                                                        <div class="show_Availableline text-uppercase" ng-if="voGroupItem.AvailablePart != 0">  
                                                              {!$Label.Label_Available} {!$Label.Label_Inventory}: {{voGroupItem.AvailablePart}} 
                                                        </div>
                                                        <div class="show_Availableline bgRed text-uppercase" ng-if="voGroupItem.AvailablePart == 0">  
                                                              {!$Label.Label_Available} {!$Label.Label_Inventory}: {{voGroupItem.AvailablePart}} - {!$Label.Part_Object_Status_OutofStock}
                                                        </div>
                                                 </td> 
                                                 <td style="background:#fff"></td>
                                            </tr> 
                                            <!-- action editable Row -->
	                                        <tr ng-show="VendorOrderModel.groupItems_editRow[$index].isEdit && VendorOrderModel.VendorOrderHeader.Status == 'Open'" class="edit_panel sample-show-hide T7" id="vogroup_item_row{{$index}}_edit">
	                                            	<td style="background-color:#fff"></td>
                                                    <!-- <td ng-class="{'BL': reqByStock.hasChildren}" style="background:#fff"></td> -->
                                                    <td style="background:#fff"></td>
	                                            	<td colspan="7" class="edit-service-item" id="CO_Merchandise_block_grid_container_tbody_expandtr_td_1_{{$index}}" >
	                                                <div id="vogroup_tbody_expandtr_edit_box_{{$index}}" class="edit_box serviceitemedit col-md-12 ">
	                                                    <div class="its-heading" id="CO_Merchandise_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
	                                                        <!-- <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" class="img_action"/> -->
	                                                        <i class="fa fa-angle-down"></i>
	                                                        <span>{!$Label.Label_Actions} (2 {!$Label.Label_Available})</span>
	                                                    </div>
	                                                    <div id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}" class="edit-body">
	                                                        <form class="ng-pristine ng-valid">
	                                                            <!-- Remove link as action -->
	                                                            <div class="radio" id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
	                                                                <label ng-click="VendorOrderModel.groupItems_editRow[$index].radioValue = 1"><!-- AOHeaderIndex -->
	                                                                    <p class="chk_tick edit-service-chek"
                                                                          ng-class="{'chked' : VendorOrderModel.groupItems_editRow[$index].radioValue == 1 }" ><!-- AOHeaderIndex -->
                                                                            <i class="fa fa-check-square chksqure"></i>

                                                                        </p>
	                                                                <span>
		                                                                {!$Label.Label_Add_All_Required_For_This_Item}
	                                                                </span>
	                                                                </label>
	                                                            </div>
	                                                            <div class="radio" id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
	                                                                <label ng-click="VendorOrderModel.groupItems_editRow[$index].radioValue = 2"><!-- AOHeaderIndex -->
	                                                                    <p class="chk_tick edit-service-chek"
                                                                          ng-class="{'chked' : VendorOrderModel.groupItems_editRow[$index].radioValue == 2 }" ><!-- AOHeaderIndex -->
                                                                            <i class="fa fa-check-square chksqure"></i>

                                                                        </p>
	                                                                <span>
		                                                                {!$Label.Label_Remove_From_Order}
	                                                                </span>
	                                                                </label>
	                                                            </div>
	                                                            <!-- Action button (Go) -->
	                                                            <a href="" id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" 
	                                                                class="btn btn-default editform_btn" role="button"
	                                                                ng-click="VendorOrderModel.groupItemsGoAction($index)">{!$Label.Label_Apply}</a>                                
	                                                        </form>
	                                                    </div>
	                                                </div>
	                                            </td>
	                                            <td style="background:#fff"></td>
	                                        </tr>
                                                        <!-- new -->
                                                        
                                                        <tr ng-show="VendorOrderModel.groupItems_editRow[$index].isEdit" class="Editable_row">
                                                        	<td></td>
                                                        	<td></td>
                                                            <td colspan="7" class="group_exapnded_tr subEdit">
                                                                <div ng-repeat="voLineItems in voGroupItem.VendorOrderLineItemList " class="volineItem_row_clickable"
                                                                     ng-click="VendorOrderModel.editvoLineItem($event,$parent.$index,$index)">  <!-- class="volineItem_row_clickable" -->
                                                                    <div class=" volineItem_row_item ">
                                                                        <div class="firstchild " ng-if="voLineItems.IsExcess == false && (voLineItems.IsRequiredForCustomer || voLineItems.IsService)" >{{voLineItems.Customer}} </div>
                                                                        <div class="firstchild " ng-if="voLineItems.IsExcess == true || (!voLineItems.IsRequiredForCustomer && !voLineItems.IsService)"  >{!$Label.Label_Location}:{{voLineItems.Location}}</div>
                                                                       
                                                                        <div class="secondchild" ng-keydown="VendorOrderModel.editRowTabOut($event, $parent.$index ,$index)" 
                                                                            ng-show="(VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit &&
                                                                             voLineItems.IsRequiredForCustomer == false &&  voLineItems.IsExcess == false
                                                                             && (VendorOrderModel.VendorOrderHeader.Status == 'Open'|| VendorOrderModel.VendorOrderHeader.Status == 'Locked' )) || 
                                                                             (VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit 
                                                                             && voLineItems.IsSearchAdded==true
                                                                             && (VendorOrderModel.VendorOrderHeader.Status == 'Open'|| VendorOrderModel.VendorOrderHeader.Status == 'Locked' ))"> 
                                                                            <!-- <number-only-input input-value="voLineItems.Need" /> -->
                                                                            <!-- need not zero -->
                                                                            <number-only-input input-value="voLineItems.Need" id-val="voLineItems.Need"
                                                                            ng-keydown="VendorOrderModel.solieditRowBlur($event)"
                                                                            />
                                                                            <!-- need not zero -->
                                                                            
                                                                         </div> 
                                                                        
                                                                        <div class="secondchild" ng-show="(VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit==false)
                                                                                            ||(VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && voLineItems.IsRequiredForCustomer == true) 
                                                                                            || (VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && voLineItems.IsExcess == true)" >
                                                                             <span >
                                                                                   {{voLineItems.Need}}
                                                                             </span>
                                                                        </div>
                                                                         <div class="secondchild" ng-if="(VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && 
                                                                                    VendorOrderModel.VendorOrderHeader.Status != 'Open' &&  VendorOrderModel.VendorOrderHeader.Status != 'Locked' )"  >
                                                                             <span >
                                                                                            
                                                                                   {{voLineItems.Need}}
                                                                             </span>
                                                                        </div>
                                                                       <div class="thirdchild"  ng-if="voLineItems.IsRequiredForCustomer ==  true || voLineItems.IsService ==true">
                                                                            <a ng-mouseover="VendorOrderModel.showCOPopUp($event, voLineItems.CoHeaderId);" ng-mouseleave="VendorOrderModel.hideCOPopUp();">
                                                                                {{voLineItems.NeededFor ==null ? ' ' : voLineItems.NeededFor }} 
                                                                            </a>
                                                                        </div>
                                                                        <div class="thirdchild"  ng-if="voLineItems.IsExcess == true"> Stock <div style="Color:red">{!$Label.Label_Excess}</div> </div>                                                                        
                                                                       <div class="thirdchild"  ng-if="voLineItems.IsExcess == false &&  
                                                                          voLineItems.IsRequiredForCustomer == false && voLineItems.IsService ==false"> {!$Label.Label_Stock} </div>
                                                                        <div class="otherchild">&nbsp;</div>
                                                                        <div class="otherchild">  </div>
                                                                        <div class="lastchild "> </div>
                                                                    </div>
                                                                   
                                                                <!-- new -->
                                                               	        <div ng-show="VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && voLineItems.IsExcess == false && VendorOrderModel.VendorOrderHeader.Status == 'Open'" class="edit_panel sample-show-hide T7" id="vogroup_item_row{{$index}}_edit">
	                                            	<!-- <div class="col-lg-1 col-md-1" style="background-color:#fff"></div>
                                                    <div class="col-lg-1 col-md-1" style="background:#fff"></div> -->
	                                            	<div  class="col-lg-12 col-md-12 edit-service-item" id="volineitem_block_grid_container_tbody_expandtr_td_1_{{$index}}" >
	                                                <div id="volineitem_tbody_expandtr_edit_box_{{$index}}" class="edit_box serviceitemedit col-md-12 ">
	                                                    <div class="its-heading" id="volineitem_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
	                                                        <i class="fa fa-angle-down"></i>
	                                                        <span>{!$Label.Label_Actions} (2 {!$Label.Label_Available})</span>
	                                                    </div>
	                                                    <div id="volineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}" class="edit-body">
	                                                        <form class="ng-pristine ng-valid">
	                                                            <!-- Remove link as action -->
	                                                            <div class="radio" id="volineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
	                                                                <label ng-click="VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].radioValue = 1">
	                                                                    <p class="chk_tick edit-service-chek"
                                                                          ng-class="{'chked' : VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].radioValue == 1 }" >
                                                                            <i class="fa fa-check-square chksqure"></i>

                                                                        </p>
	                                                                <span>
		                                                                {!$Label.Label_Add_All_Required_For_This_Item}
	                                                                </span>
	                                                                </label>
	                                                            </div>
	                                                            <div class="radio" id="volineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
	                                                                <label ng-click="VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].radioValue = 2">
	                                                                    <p class="chk_tick edit-service-chek"
                                                                          ng-class="{'chked' : VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].radioValue == 2 }" >
                                                                            <i class="fa fa-check-square chksqure"></i>

                                                                        </p>
	                                                                <span>
		                                                                {!$Label.Label_Remove_From_Order}
	                                                                </span>
	                                                                </label>
	                                                            </div>
	                                                            <!-- Action button (Go) -->
	                                                            <a href="" id="volineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" 
	                                                                class="btn btn-default editform_btn" role="button"
	                                                                ng-click="VendorOrderModel.groupItemsGoAction($index, $parent.$index)">{!$Label.Label_Apply}</a>                                
	                                                        </form>
	                                                    </div>
	                                                </div>
	                                            </div>
	                                            
	                                        </div>
                                                                <!-- new -->
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                              	</div>
                             	<div class="row pagination_container" id="Vendor_Order_Items_Pagination" ng-if="VendorOrderModel.TotalLineItemGroups != undefined" >
                                <list-pagination id-value = "Vendor_Order_Items_Pagination_" 
                                                 total-records-length = "VendorOrderModel.TotalLineItemGroups"
                                                 page-size = "VendorOrderModel.itemsPageSortAttrsJSON.PageSize"
                                                 current-page = "VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage"
                                                 changes-count = "VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount"
                                                 pagination-control-method = "VendorOrderModel.Items_paginationControlsAction" />
                             	</div>
	                        </div>
	            		</div>
	            		
	            		<!-- END: ITEMS section -->
	            		
	            		<!-- START: REQUIRED FOR CUSTOMER section -->
	            		<div class="main_section_COU row" id="Order_RequiredForCustomer" ng-if="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForCustomers != 0">
	            			
	            				
		                            
		                            <!-- <div class="right_sub pull-right" id="Merchandise_block_heading_panel_right_sub">
	
	                                        <div class="dropdown custom-cog-dropdown">
	                                            <button
	                                                class="btn btn-default dropdown-toggle custom-cog-button"
	                                                style="margin-right: 7px;" type="button" id="menu1"
	                                                data-toggle="dropdown">
	                                                <i class="fa   fa-cog Orange Customtool"
	                                                    data-toggle=""> </i>
	                                            </button>
	                                            <ul class="dropdown-menu custom-cog-dropdown-menu"
	                                                role="menu" aria-labelledby="menu1">
	                                                <li role="presentation"><a role="menuitem itemtab"
	                                                    tabindex="-1"
	                                                    ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(true)">Add
	                                                        All Items</a></li>
	
	                                            </ul>
	                                        </div>
	
	                                        <i class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>
	                                </div> -->
		                        
	            			
	            			<div class="main_section_COU_Header row actionRowForOrder" >
	            				<div class="actionRow" > <!-- <p> -->
		            				
	                                <span class="sectionText T2">{!$Label.Required_For_Customer}
		                            </span>
	                                
		                            <span class="ActionIcons" >
			                        	<div class="dropdown selectDropdown checkboxDropdown">
					                        <!-- <button class="btn dropdown-toggle" data-toggle="dropdown" type="button" aria-expanded="false">{!$Label.Label_Actions}
					                        <span class="caret"></span></button> -->
					                        <span class="actionText T2 dropdown-toggle" data-toggle="dropdown" aria-expanded="false">{!$Label.Label_Actions}
					                        </span>
					                        <ul class="dropdown-menu" ng-if = "">
		                                    	<li>
		                                    		<a ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(true)">{!$Label.Label_Add_All_Item}</a>
		                                    	</li>
		                                    </ul>
			                       		</div>
	                        		</span>
		                            
		                            <span class="ActionIcons">
			                            <i class="fa fa-question-circle" data-toggle="tooltip" title="{{VendorOrderModel.helpText['RequiredForCustomer']}}" ></i>
			                        </span> 
		                        </div><!-- </p> -->
	            			</div>
	            			<div class="gid_container T6" id="VO_Order_block_grid_container_Empty_Div" 
                                    ng-show="VendorOrderModel.vendorOrderLineItemReqByCustomerList.length == 0" style="padding-left: 44px;">
                                    {!$Label.Label_No_Records_Found}
                             </div>
                            <div ng-show="VendorOrderModel.vendorOrderLineItemReqByCustomerList.length != 0"> 
                            <!-- <div> -->
                             <div class="gid_container_Customer" id="VO_Order_block_grid_container" >
                                       		<table class="table" id="VendorOrderItem_Grid">
                                            
                                            		<col width="2%"/>
                                                    <col width="4%"/>
                                                    <col width="22%"/>
                                                    <col width="13%"/>
                                                    <col width="13%"/>
                                                    <col width="12%"/>
                                                    <col width="10%"/>
                                                    <col width="12%"/>
                                                    <col width="12%"/>
                                                    <col width="1%"/>
                                            <tr  class="tableHeader T3 C2">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.customersPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            {!$Label.Part_Object_Item_Description}
                                                        </th>
                                                        <th>{!$Label.Label_Needed_For}</th>
                                                    <th>{!$Label.Customer_Object_Display_Label}</th>
                                                    <th class=" text-center">{!$Label.Label_Needed_By}</th>
                                                    <th class=" text-center">{!$Label.Label_Need}</th>
                                                    <th class=" text-center">{!$Label.Label_Cost}</th>
                                                    <th class=" text-center">{!$Label.Label_Total}</th>
                                                    <th></th>
                                                    </tr>
                                            <tbody  ng-repeat="reqByCustomer in VendorOrderModel.vendorOrderLineItemReqByCustomerList track by $index" ng-init="AOHeaderIndex = $index" >
                                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit"
                                                        ng-click="VendorOrderModel.editRequiredForCustomerItem($event, $index)"
                                                            ng-blur = "VendorOrderModel.editRequiredForCustomerItem($event, $index)" 
                                                            ng-class-even="'C2'">
                                                            <!-- <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" class="group_exapnded_tr">
                                                                <i class="fa fa-wrench"></i>
                                                            </td > -->
                                                            <td style="background:#fff"></td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" >
				                                                <a href="" class="edite_btn" rel="row1_edit">
				                                                	<!-- <i class="fa fa-list  Plr5 FC7 F18 first_icon"></i> --> 
				                                                	<img class="first_img" src="{!URLFOR($Resource.Images, 'sparkplug.png')}"  />
				                                                </a>
				                                            </td>
                                                            <td class="T7 " id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" >
                                                                 <div>
                                                                    <a ng-mouseover="VendorOrderModel.openpartpopup($event, reqByCustomer.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();"> 
                                                                        {{ reqByCustomer.Item }}
                                                                    </a>
                                                                 </div>
                                                            </td>
                                                            <td class="T7 " id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" >
                                                                <div>
                                                                   <a ng-mouseover="VendorOrderModel.showCOPopUp($event, reqByCustomer.CoHeaderId);" ng-mouseleave="VendorOrderModel.hideCOPopUp();">
		                                                                {{ reqByCustomer.NeededFor }}
		                                                            </a>
                                                                 </div> 
                                                            </td>
                                                            <td class="T7 " id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}">
                                                            {{reqByCustomer.Customer }}</td>
                                                            <td class="T7 text-center " id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" >
                                                                {{ reqByCustomer.NeededBy == null ? ' '
                                                            :reqByCustomer.NeededBy }}
                                                            </td>
                                                            <td class="T7 text-center " id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}" >
                                                                {{ reqByCustomer.Need }}
                                                            </td>
                                                            <td class="T7 text-center " id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" >
                                                                {{ reqByCustomer.Cost  | currency}}
                                                            </td>
                                                            <td class="T7 text-center" id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}" >
                                                                {{ reqByCustomer.Total  | currency}}
                                                            </td>
                                                        	<td style="background:#fff"></td>
                                                        </tr>
                                                      
                                                        <!-- ************** new : available inventory block **********************8-->
                                                       <!--  <tr ng-show="VendorOrderModel.requiredForCustomerItems_editRow[$index].isEdit">
                                                <td style="background:#fff"></td>
                                                <td style="background:#fff" ng-class="{'BL': reqByCustomer.hasChildren}"></td>
                                                
                                                <td class="available_td" colspan="7">   
                                                        <div class="show_Availableline" ng-if="reqByCustomer.QtyAvailable != 0">  
                                                              AVAILABLE INVENTORY: {{reqByCustomer.QtyAvailable}} 
                                                        </div>
                                                        <div class="show_Availableline bgRed" ng-if="reqByCustomer.QtyAvailable == 0">  
                                                              AVAILABLE INVENTORY: {{reqByCustomer.QtyAvailable}} - OUT OF STOCK
                                                        </div>
                                                 </td> 
                                                 <td style="background:#fff"></td>
                                            </tr>  -->
                                            <!-- action editable Row -->
	                                        <tr ng-show="VendorOrderModel.requiredForCustomerItems_editRow[$index].isEdit" class="edit_panel sample-show-hide T7" id="rel_ReqFor_Customer_row{{$index}}_edit">
	                                            	<td style="background-color:#fff"></td>
                                                    <!-- <td ng-class="{'BL': reqByStock.hasChildren}" style="background:#fff"></td> -->
                                                    <td style="background:#fff"></td>
	                                            	<td colspan="7" class="edit-service-item" id="VP_ReqFor_Customer_block_grid_container_tbody_expandtr_td_1_{{$index}}" >
	                                                <div id="VP_ReqFor_Customer_block_grid_container_tbody_expandtr_edit_box_{{$index}}" class="edit_box serviceitemedit col-md-12 ">
	                                                    <div class="its-heading" id="VP_ReqFor_Customer_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
	                                                        <!-- <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" class="img_action"/> -->
	                                                        <i class="fa fa-angle-down"></i>
	                                                        <span>{!$Label.Label_Actions} (2 {!$Label.Label_Available})</span>
	                                                    </div>
	                                                    <div id="VP_ReqFor_Customer_block_grid_container_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}" class="edit-body">
	                                                        <form class="ng-pristine ng-valid">
	                                                            <!-- Remove link as action -->
	                                                            <div class="radio" id="VP_ReqFor_Customer_block_grid_container_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
	                                                                <label ng-click="VendorOrderModel.requiredForCustomerItems_editRow[AOHeaderIndex].radioValue = 1">
	                                                                    <p class="chk_tick edit-service-chek"
                                                                          ng-class="{'chked' : VendorOrderModel.requiredForCustomerItems_editRow[AOHeaderIndex].radioValue == 1 }" >
                                                                            <i class="fa fa-check-square chksqure"></i>

                                                                        </p>
	                                                                <span>
		                                                                {!$Label.Label_Add_All_Required_For_This_Item}
	                                                                </span>
	                                                                </label>
	                                                            </div>
	                                                            <div class="radio" id="VP_ReqFor_Customer_block_grid_container_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
	                                                                <label ng-click="VendorOrderModel.requiredForCustomerItems_editRow[AOHeaderIndex].radioValue = 2">
	                                                                    <p class="chk_tick edit-service-chek"
                                                                          ng-class="{'chked' : VendorOrderModel.requiredForCustomerItems_editRow[AOHeaderIndex].radioValue == 2 }" >
                                                                            <i class="fa fa-check-square chksqure"></i>

                                                                        </p>
	                                                                <span>
		                                                                {!$Label.Label_Add_This_Item_Only}
	                                                                </span>
	                                                                </label>
	                                                            </div>
	                                                            <!-- Action button (Go) -->
	                                                            <a href="" id="VP_ReqFor_Customer_block_grid_container_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" 
	                                                                class="btn btn-default editform_btn" role="button"
	                                                                ng-click="VendorOrderModel.requiredForCustomerItemsGoAction($index)">{!$Label.Label_Apply}</a>                                
	                                                        </form>
	                                                    </div>
	                                                </div>
	                                            </td>
	                                            <td style="background:#fff"></td>
	                                        </tr>
	                                        
	                                        <!-- ************** new : add inventory block ***********************-->
                                                        </tbody>
                                        </table>
                                    	</div>
									<!-- Pagination container -->
                                        <div class="pagination_container" id="Vendor_Order_Items_Pagination" ng-if="VendorOrderModel.TotalRequiredForCustomers != undefined" >
                    <!--                        ng-show="VendorOrderModel.TotalRequiredForStocks > VendorOrderModel.stocksPageSortAttrsJSON.PageSize" > -->
                                            <list-pagination id-value="Vendor_Order_Items_Pagination_"
                                            total-records-length="VendorOrderModel.TotalRequiredForCustomers"
                                            page-size="VendorOrderModel.customersPageSortAttrsJSON.PageSize"
                                            current-page="VendorOrderModel.customersPageSortAttrsJSON.CurrentPage"
                                            changes-count="VendorOrderModel.customersPageSortAttrsJSON.ChangesCount"
                                            pagination-control-method="VendorOrderModel.RequiredByCustomer_paginationControlsAction" />
                                        </div>
                            </div>
	            		</div>
	            		<!-- END: REQUIRED FOR CUSTOMER section -->
	            		
	            		<!-- START: REQUIRED FOR STOCK section -->
	            		<div class="main_section_COU row" id="Order_RequiredForStock" ng-if="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForStocks != 0">
	            			
	            			<div class="main_section_COU_Header row actionRowForOrder" >
	            				<div class="actionRow " > <!-- <p> -->
		            				
	                                <span class="sectionText T2">{!$Label.Required_For_Stock}
		                            </span>
	                                
		                            <span class="ActionIcons" >
			                        	<div class="dropdown selectDropdown checkboxDropdown">
					                        <!-- <button class="btn dropdown-toggle" data-toggle="dropdown" type="button" aria-expanded="false">{!$Label.Label_Actions}
					                        <span class="caret"></span></button> -->
					                        <span class="actionText T2 dropdown-toggle" data-toggle="dropdown" aria-expanded="false">{!$Label.Label_Actions}
					                        </span>
					                        <ul class="dropdown-menu" ng-if = "">
		                                    	<li>
		                                    		<a ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(false)">{!$Label.Label_Add_All_Item}</a>
		                                    	</li>
		                                    </ul>
			                       		</div>
	                        		</span>
		                            
		                            <span class="ActionIcons">
			                            <i class="fa fa-question-circle" data-toggle="tooltip" title="{{VendorOrderModel.helpText['RequiredForStock']}}" ></i>
			                        </span> 
		                        </div><!-- </p> -->
	            			</div>
	            			<div class="gid_container T6" id="VO_Order_block_grid_container_Empty_Div" 
                                    ng-show="VendorOrderModel.vendorOrderLineItemReqByStockList.length == 0" style="padding-left: 44px;">
                                    {!$Label.Label_No_Records_Found}
                                </div>
                            <div ng-show="VendorOrderModel.vendorOrderLineItemReqByStockList.length != 0">
                            <!-- <div> -->
                            	<div class="gid_container_Customer" id="VO_Order_block_grid_container">
                                       		<table class="table" id="VendorOrderItem_Grid">
                                            
											
                                                    <col width="2%"/>
                                                    <col width="4%"/>
                                                    <col width="22%"/>
                                                    <col width="13%"/>
                                                    <col width="13%"/>
                                                    <col width="12%"/>
                                                    <col width="10%"/>
                                                    <col width="12%"/>
                                                    <col width="12%"/>
                                                    <col width="1%"/>
                                            <tr  class="tableHeader T3 C2">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.stocksPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            {!$Label.Part_Object_Item_Description}
                                                        </th>
                                                        <th>{!$Label.Label_Location}</th>
                                                        <th class=" text-center">{!$Label.Label_Available}</th>
                                                        <th class=" text-center">{!$Label.Part_Object_Quantity_Incoming}</th>
                                                        <th class=" text-center">{!$Label.Label_Need}</th>
                                                        <th class=" text-center">{!$Label.Label_Cost}</th>
                                                        <th class=" text-center">{!$Label.Label_Total}</th>
                                                        <th></th>
                                                    </tr>
                                            <tbody ng-repeat="reqByStock in VendorOrderModel.vendorOrderLineItemReqByStockList track by $index" ng-init="AOHeaderIndex = $index" >
                                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit"  
                                                            ng-click="VendorOrderModel.editRequiredForStockItem($event, $index)"
                                                            ng-blur = "VendorOrderModel.editRequiredForStockItem($event, $index)" 
                                                            ng-class-even="'C2'">
                                                            <!-- <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" class="group_exapnded_tr">
                                                                <i class="fa fa-wrench"></i>
                                                            </td > -->
                                                            <td style="background:#fff"></td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" >
				                                                <a href="" class="edite_btn" rel="row1_edit">
				                                                	<!-- <i class="fa fa-list  Plr5 FC7 F18 first_icon"></i>  -->
				                                                	<img class="first_img" src="{!URLFOR($Resource.Images, 'sparkplug.png')}"  />
				                                                </a>
				                                            </td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" class="T7 ">
                                                                 <div>
                                                                    <a ng-mouseover="VendorOrderModel.openpartpopup($event,reqByStock.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();"> 
                                                                    {{ reqByStock.Item }} 
                                                                </a>
                                                                 </div>
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" class="T7 ">
                                                                {{ reqByStock.Location }}
                                                            </td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}" class="T7 text-center">
                                                            {{reqByStock.QtyAvailable }}</td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" class="T7 text-center ">
                                                                {{ reqByStock.Incoming }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}" class="T7 text-center ">
                                                               <div><a ng-mouseover="VendorOrderModel.showPopUpVendorOrderPartDetails($event, reqByStock.Id);" ng-mouseleave="VendorOrderModel.hidePopUpVendorOrderPartDetails()" >
                                                                    {{ reqByStock.Need }}
                                                                </a></div>
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" class="T7 text-center ">
                                                                {{ reqByStock.Cost | currency}}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}" class="T7 text-center ">
                                                                {{ reqByStock.Total  | currency}}
                                                            </td>
                                                        	<td style="background:#fff"></td>
                                                        </tr>
                                                       
                                                         <!-- ************** new : available inventory block **********************8-->
                                                        <!-- <tr ng-show="VendorOrderModel.requiredForStockItems_editRow[$index].isEdit">
                                                <td style="background:#fff"></td>
                                                <td style="background:#fff" ng-class="{'BL': reqByStock.hasChildren}"></td>
                                                
                                                <td class="available_td" colspan="7">    
                                                        <div class="show_Availableline" ng-if="reqByStock.QtyAvailable != 0">  
                                                              AVAILABLE INVENTORY: {{reqByStock.QtyAvailable}} 
                                                        </div>
                                                        <div class="show_Availableline bgRed" ng-if="reqByStock.QtyAvailable == 0">  
                                                              AVAILABLE INVENTORY: {{reqByStock.QtyAvailable}} - OUT OF STOCK
                                                        </div>
                                                 </td> 
                                                 <td style="background:#fff"></td>
                                            </tr>  -->
                                            <!-- action editable Row -->
	                                        <tr ng-show="VendorOrderModel.requiredForStockItems_editRow[$index].isEdit" class="edit_panel sample-show-hide T7" id="rel_ReqFor_Stock_row{{$index}}_edit">
	                                            	<td style="background-color:#fff"></td>
                                                    <!-- <td ng-class="{'BL': reqByStock.hasChildren}" style="background:#fff"></td> -->
                                                    <td style="background:#fff"></td>
	                                            	<td colspan="7" class="edit-service-item" id="VP_ReqFor_Stock_block_grid_container_tbody_expandtr_td_1_{{$index}}" >
	                                                <div id="VP_ReqFor_Stock_block_grid_container_tbody_expandtr_edit_box_{{$index}}" class="edit_box serviceitemedit col-md-12 ">
	                                                    <div class="its-heading" id="VP_ReqFor_Stock_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
	                                                        <!-- <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" class="img_action"/> -->
	                                                        <i class="fa fa-angle-down"></i>
	                                                        <span>{!$Label.Label_Actions} (2 {!$Label.Label_Available})</span>
	                                                    </div>
	                                                    <div id="VP_ReqFor_Stock_block_grid_container_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}" class="edit-body">
	                                                        <form class="ng-pristine ng-valid">
	                                                            <!-- Remove link as action -->
	                                                            <div class="radio" id="VP_ReqFor_Stock_block_grid_container_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
	                                                                <label ng-click="VendorOrderModel.requiredForStockItems_editRow[AOHeaderIndex].radioValue = 1">
	                                                                    <p class="chk_tick edit-service-chek"
                                                                          ng-class="{'chked' : VendorOrderModel.requiredForStockItems_editRow[AOHeaderIndex].radioValue == 1 }" >
                                                                            <i class="fa fa-check-square chksqure"></i>

                                                                        </p>
	                                                                <span>
		                                                                {!$Label.Label_Add_All_Required_For_This_Item}
	                                                                </span>
	                                                                </label>
	                                                            </div>
	                                                            <div class="radio" id="VP_ReqFor_Stock_block_grid_container_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
	                                                                <label ng-click="VendorOrderModel.requiredForStockItems_editRow[AOHeaderIndex].radioValue = 2">
	                                                                    <p class="chk_tick edit-service-chek"
                                                                          ng-class="{'chked' : VendorOrderModel.requiredForStockItems_editRow[AOHeaderIndex].radioValue == 2 }" >
                                                                            <i class="fa fa-check-square chksqure"></i>

                                                                        </p>
	                                                                <span>
		                                                                {!$Label.Label_Add_This_Item_Only}
	                                                                </span>
	                                                                </label>
	                                                            </div>
	                                                            <!-- Action button (Go) -->
	                                                            <a href="" id="VP_ReqFor_Stock_block_grid_container_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" 
	                                                                class="btn btn-default editform_btn" role="button"
	                                                                ng-click="VendorOrderModel.requiredForStockItemsGoAction($index)">{!$label.Label_Apply}</a>                                
	                                                        </form>
	                                                    </div>
	                                                </div>
	                                            </td>
	                                            <td style="background:#fff"></td>
	                                        </tr>
	                                        
	                                        
	                                        
	                                        
	                                        
	                                       
	                                        <!-- ************** new : add inventory block ***********************-->
                                                         </tbody>
                                        </table>
                                    	</div>
									<!-- Pagination container -->
                                <div class="pagination_container" id="Vendor_Order_Items_Pagination" ng-if="VendorOrderModel.TotalRequiredForStocks != undefined" >
                    <!--                        ng-show="VendorOrderModel.TotalRequiredForStocks > VendorOrderModel.stocksPageSortAttrsJSON.PageSize" > -->
                                            <list-pagination id-value = "Vendor_Order_Items_Pagination_" 
                                                             total-records-length = "VendorOrderModel.TotalRequiredForStocks"
                                                             page-size = "VendorOrderModel.stocksPageSortAttrsJSON.PageSize"
                                                             current-page = "VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage"
                                                             changes-count = "VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount"
                                                             pagination-control-method = "VendorOrderModel.RequiredByStock_paginationControlsAction" />
                                        </div>
                            </div>
	            		</div>
	            		
	            		<!-- END: REQUIRED FOR STOCK section -->
	            	</div>
	            	</div>
	            
	            <!-- ******************************************************* body for order section ******************************************************* -->
	            
	            <!-- ******************************************************* header for stock Excess section ******************************************************* -->
	            <div class="sectionHeader row" id="Stock_Excess_Block" ng-show="VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0">	            
	            <!-- <div class="sectionHeader row"> -->
	            	<div class="col-lg-6 col-md-6">
	            		<div class="fixedHeaderText">
                        <span class="headerlabel">
                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
                            ng-show="!VendorOrderModel.displaySections.StockExcess"
                            ng-Click="VendorOrderModel.displaySections.StockExcess = true">
                        </i> 
                        <i class="fa fa-angle-down" style="width:10px;"
                            ng-show="VendorOrderModel.displaySections.StockExcess"
                            ng-Click="VendorOrderModel.displaySections.StockExcess = false">
                        </i> 
                        <span class="divider">|</span>
                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Stock_Excess}} {!$Label.Stock_Excess}</span>
                        </span>
                          <span class="ActionIcons pull-left ">
                               <div class="dropdown selectDropdown checkboxDropdown">
                                  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
                                  <span class="caret"></span></button>
                            </div>
                        </span> 
                    </div>
                
	            	</div>
	            </div>
	            
	            <!-- ******************************************************* header for stock Excess section ******************************************************* -->
	            
	            <!-- ******************************************************* body for stock Excess section ******************************************************* -->
	            <div id="StockExcessSection">
	            	<div ng-show="VendorOrderModel.displaySections.StockExcess && VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0">
	            		<!-- START: STOCK EXCESS section -->
	            		<div class="main_section_COU row" id="StockExcess_General" >
	            			<div class="main_section_COU_Header row" ng-if="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForStocks != 0">
		            			<p class="actionRow T2">
		                            <span class="sectionText">{!$Label.Stock_Excess}</span>
		                            <span class="actionText">{!$Label.Label_Actions}</span>
		                            <!-- ********* -->
		                            <!-- <div class="dropdown custom-cog-dropdown">
	                                                     <button class="btn btn-default dropdown-toggle custom-cog-button" style="margin-right: 7px;" type="button" id="menu1" data-toggle="dropdown">
	                                                        <i class="fa   fa-cog Orange Customtool"  data-toggle=""> </i></button>
	                                                        <ul class="dropdown-menu custom-cog-dropdown-menu" role="menu" aria-labelledby="menu1">
	                                                          <li role="presentation"><a role="menuitem itemtab" tabindex="-1" ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(false)">Add All Items</a></li>
	                                                         
	                                                        </ul>
	                                                  </div> -->
	                                                
		                            <!-- ********* -->
		                            <span class="ActionIcons">
		                            <!-- <i class="fa fa-th"></i> -->
		                            <i class="fa fa-question-circle" data-toggle="tooltip" title="{{VendorOrderModel.helpText['StockExcess']}}"></i> 
		                            </span> 
		                        </p>
		                     </div>
		                     <div class="gid_container T6" id="VO_Order_block_grid_container_Empty_Div" 
                                    ng-show="VendorOrderModel.StockExcessList == undefined || VendorOrderModel.StockExcessList.length == 0" style="padding-left: 44px;">
                                    {!$Label.Label_No_Records_Found}
                                </div>
	            			<div ng-show="VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0"> 
                                  <div class="gid_container_Customer" id="VO_Order_block_grid_container">
                                  	<table class="table" id="VendorOrderItem_Grid">
                                            
											
                                            <col width="2%"/>
                                                    <col width="4%"/>
                                                    <col width="22%"/>
                                                    <col width="11%"/>
                                                    <col width="11%"/>
                                                    <col width="11%"/>
                                                    <col width="11%"/>
                                                    <col width="11%"/>
                                                    <col width="17%"/>
                                                    <col width="1%"/>
                                            
                                            <tr  class="tableHeader T3 C2">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.stocksPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            {!$Label.Part_Object_Item_Description}
                                                        </th>
                                                        <th class=" text-center">{!$Label.Label_Need}</th>
                                                        <th class=" text-center">{!$Label.Label_Pkg_Qty}</th>
                                                        <th class=" text-center">{!$Label.Label_Order_Lots}</th>
                                                        <th class=" text-center">{!$Label.Label_Excess}</th>
                                                        <th class=" text-center">{!$Label.Label_Cost}</th>
                                                        <th class=" text-center">{!$Label.Stock_Excess} {!$Label.Label_Total}</th>
                                                        <th></th>
                                                    </tr>
                                            <tbody ng-repeat="stockExcess in VendorOrderModel.StockExcessList" >
                                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit" ng-class-even="'C2'">
                                                            <!-- <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" class="group_exapnded_tr">
                                                                <i class="fa fa-wrench"></i>
                                                            </td > -->
                                                            <td style="background:#fff"></td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" >
				                                                <a href="" class="edite_btn" rel="row1_edit">
				                                                	<!-- <i class="fa fa-list  Plr5 FC7 F18 first_icon"></i> --> 
				                                                	<img class="first_img" src="{!URLFOR($Resource.Images, 'sparkplug.png')}"/>
				                                                </a>
				                                            </td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" class="T7 ">
                                                                 <div>
                                                                    <!-- <a ng-mouseover="VendorOrderModel.showPartPopUp($event, stockExcess.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();"> 
                                                                        {{ stockExcess.ItemDesc }} 
                                                                    </a> -->
                                                                    <a ng-mouseover="VendorOrderModel.openpartpopup($event, stockExcess.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();"> 
                                                                        {{ stockExcess.ItemDesc }} 
                                                                    </a>
                                                                 </div>
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" class="T7 text-center">
                                                                {{ stockExcess.Need }}
                                                            </td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}" class="T7  text-center">
                                                             {{stockExcess.PackageQty }}</td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" class="T7  text-center">
                                                                 {{ stockExcess.OrderLot }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}" class="T7  text-center">
                                                               <div><a ng-mouseover="VendorOrderModel.showNeededForPopUp($event, stockExcess.VOLIGroupId, VendorOrderModel.voHeaderId);" ng-mouseleave="VendorOrderModel.hideNeededForPopUp();">
                                                                        {{ stockExcess.ExcessQty }}
                                                                    </a></div>
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" class="T7  text-center">
                                                                {{ stockExcess.Cost | currency}}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}" class="T7  text-center">
                                                                {{ stockExcess.Total | currency}}
                                                            </td>
                                                        	<td style="background:#fff"></td>
                                                        </tr>
                                                        </tbody>
                                        </table>
                                  </div>
                                   <!-- Pagination container -->
                               <!--  <div class="pagination_container" id="Vendor_Order_Items_Pagination" ng-if="VendorOrderModel.TotalRequiredForStocks != undefined" >
                   
                                            <list-pagination id-value = "Vendor_Order_Items_Pagination_" 
                                                             total-records-length = "VendorOrderModel.TotalRequiredForStocks"
                                                             page-size = "VendorOrderModel.stocksPageSortAttrsJSON.PageSize"
                                                             current-page = "VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage"
                                                             changes-count = "VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount"
                                                             pagination-control-method = "VendorOrderModel.RequiredByStock_paginationControlsAction" />
                                        </div>
                        -->
                             </div>
	            		</div>
	            		<!-- END: STOCK EXCESS section -->
	            	</div>
	            </div>
	          
	            <!-- ******************************************************* body for stock Excess section ******************************************************* -->
	            
	            <!-- ******************************************************* header for Receiving history section ******************************************************* -->
	            <div class="sectionHeader row" ng-show="VendorOrderModel.VRHistoryList != undefined && VendorOrderModel.VRHistoryList.length != 0">
	            	<div class="col-lg-6 col-md-6">
	            		<div class="fixedHeaderText">
                        <span class="headerlabel">
                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
                            ng-show="!VendorOrderModel.displaySections.ReceivingHistory"
                            ng-Click="VendorOrderModel.displaySections.ReceivingHistory = true">
                        </i> 
                        <i class="fa fa-angle-down" style="width:10px;"
                            ng-show="VendorOrderModel.displaySections.ReceivingHistory"
                            ng-Click="VendorOrderModel.displaySections.ReceivingHistory = false">
                        </i> 
                        <span class="divider">|</span>
                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Receiving_History}} {!$Label.Receiving_History}</span>
                        </span>
                        <span class="ActionIcons pull-left ">
                            <div class="dropdown selectDropdown checkboxDropdown">
                                  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
                                  <span class="caret"></span></button>
                                  <!-- <ul class="dropdown-menu custom-cog-dropdown-menu"
		                              role="menu" aria-labelledby="menu1">
		                              <li role="presentation">
		                              	<a role="menuitem itemtab"
		                                   tabindex="-1"
		                                   ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(true)">
		                                   Add All Items
		                                </a>
		                              </li>
		
		                          </ul> -->
                            </div>
                            
                        </span> 
                    </div>
                
	            	</div>
	            </div>
	            <!-- ******************************************************* header for Receiving history section ******************************************************* -->
	            
	            <!-- ******************************************************* body for Receiving history section ******************************************************* -->
	            <div id="ReceivingHistorySection" class="ReceivingHistory_Container" ng-show="VendorOrderModel.VRHistoryList != undefined && VendorOrderModel.VRHistoryList.length != 0">
	            	<div ng-show="VendorOrderModel.displaySections.ReceivingHistory">
	            	
	            		<!-- START: RECEIVING HISTORY section -->
	            		<div class="main_section_COU row" id="ReceivingHistory_General">
	            			<div class="main_section_COU_Header actionRowForOrder row" >
	            				<!--  <p class="actionRow T2"> -->
	            				<div class="actionRow " > 
	                            <span class="sectionText">{!$Label.Items}
                                    <!-- <i class="fa fa-plus cou_plus_icon  ng-scope" id="Order_Block_heading_panel_left_sub_h1_text_plus_icon" ng-click="VendorOrderModel.RelatedList_addAction($event, 'Merchandise')" ></i> -->
	                            </span>
	                            <!-- <span class="actionText">{!$Label.Label_Actions}</span> -->
	                            <span class="ActionIcons" >
			                        	<div class="dropdown selectDropdown checkboxDropdown">
					                        <!-- <button class="btn dropdown-toggle" data-toggle="dropdown" type="button" aria-expanded="false">{!$Label.Label_Actions}
					                        <span class="caret"></span></button> -->
					                        <span class="actionText T2 dropdown-toggle" data-toggle="dropdown" aria-expanded="false">{!$Label.Label_Actions}
					                        </span>
					                        <ul class="dropdown-menu"> <!-- ng-if = "VendorOrderModel.isDeleteServiceOrder($index)" -->
		                                    	<li>
		                                    		<a ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(true)">
		                                   				{!$Label.Label_Add_All_Item}
		                                   			</a>
		                                    	</li>
		                                    </ul>
			                       		</div>
	                        		</span>
	                            <span class="ActionIcons">
	                            <!-- <i class="fa fa-th"></i> -->
	                            <i class="fa fa-question-circle" data-toggle="tooltip" title="Items"></i>  <!--  title="{{VendorOrderModel.helpText['Items']}}" -->
	                            </span> 
	                            <!-- <div class="dropdown custom-cog-dropdown">
                                                     <button class="btn btn-default dropdown-toggle custom-cog-button" style="margin-right: 7px;" type="button" id="menu1" data-toggle="dropdown">
                                                        <i class="fa   fa-cog Orange Customtool"  data-toggle=""> </i></button>
                                                        <ul class="dropdown-menu custom-cog-dropdown-menu" role="menu" aria-labelledby="menu1">
                                                          <li role="presentation"><a role="menuitem itemtab" tabindex="-1" ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(false)">Add All Items</a></li>
                                                         
                                                        </ul>
                                                  </div> -->
                                                 
	                        <!-- </p> -->
	                        </div>
	                        
	            			</div>
	            			<div class="gid_container T6" id="VO_Order_block_grid_container_Empty_Div" 
                                    ng-show="VendorOrderModel.VRHistoryList == undefined || VendorOrderModel.VRHistoryList.length == 0" style="padding-left: 44px;">
                                    {!$Label.Label_No_Records_Found}
                                </div>
	            			<div ng-show="VendorOrderModel.VRHistoryList != undefined && VendorOrderModel.VRHistoryList.length != 0"> 
	            				<div class="gid_container_Customer" id="VO_Order_block_grid_container">
                                       		<table class="table" id="VendorOrderItem_Grid">
                                           
                                            <col width="2%"  />
                                            <col width="4%"  />
                                                    <col width="22%" />
                                                    <col width="15%"  />
                                                    <col width="15%" />
                                                    <col width="14%" />
                                                    <col width="14%"  />
                                                    <col width="13%" />
                                                    <col width="1%"  />
                                            <tr  class="tableHeader T3 C2">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.stocksPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            {!$Label.Label_Packaging_Slip}
                                                        </th>
                                                        <th> {!$Label.Label_Received}</th>
                                                        <th class=" text-center"> {!$Label.Label_Line} {!$Label.Items}</th>
                                                        <th class=" text-center"> {!$Label.Label_Total} {!$Label.Label_Cost}</th>
                                                        <th>{!$Label.Label_Received} {!$Label.Label_By}</th>
                                                        <th>{!$Label.Label_Status}</th>
                                                        <th></th>
                                                    </tr>
                                            <tbody ng-repeat="VRHistory in VendorOrderModel.VRHistoryList" >
                                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit" ng-class-even="'C2'">
                                                            <!-- <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" class="group_exapnded_tr">
                                                                <i class="fa fa-wrench"></i>
                                                            </td > -->
                                                            <td style="background:#fff"></td> 
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" >
				                                                <a href="" class="edite_btn" rel="row1_edit">
				                                                	<i class="fa fa-list  Plr5 FC7 F18 first_icon"></i> 
				                                                </a>
				                                            </td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" class="T7 ">
                                                                 {{VRHistory.PackingSlipNumber}}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" class="T7 ">
                                                                {{VRHistory.ReceivedDate}}
                                                            </td>
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}" class="T7 text-center ">
                                                             {{VRHistory.TotalLineItems}}</td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" class="T7 text-center">
                                                                {{VRHistory.TotalCost | currency}}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}" class="T7 ">
                                                               {{VRHistory.ReceivedByName}}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" class="T7 ">
                                                                {{VRHistory.Status}}
                                                            </td>
                                                        	<td style="background:#fff"></td>
                                                        </tr>
                                                         </tbody>
                                        </table>
                                    	</div>
                                    	  <!-- Pagination container -->
                             <!--    <div class="pagination_container" id="Vendor_Order_Items_Pagination" ng-if="VendorOrderModel.TotalRequiredForStocks != undefined" >
                 
                                            <list-pagination id-value = "Vendor_Order_Items_Pagination_" 
                                                             total-records-length = "VendorOrderModel.TotalRequiredForStocks"
                                                             page-size = "VendorOrderModel.stocksPageSortAttrsJSON.PageSize"
                                                             current-page = "VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage"
                                                             changes-count = "VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount"
                                                             pagination-control-method = "VendorOrderModel.RequiredByStock_paginationControlsAction" />
                                        </div>
                        -->
	            			</div>
	            		</div>
	            		<!-- END : RECEIVING HISTORY section -->
	            	</div>
	            </div>
	           
	            <!-- ******************************************************* body for Receiving history section ******************************************************* -->
	            
	            <!-- ******************************************************* header for Finalize section ******************************************************* -->
	            <div class="sectionHeader row" ng-show="VendorOrderModel.EnableFinaliseOrder()">
	            	<div class="col-lg-6 col-md-6">
	            		<div class="fixedHeaderText">
                        <span class="headerlabel">
                        <i class="fa fa-angle-right" style="width:10px; padding: 0 3px;"
                            ng-show="!VendorOrderModel.displaySections.Finalize"
                            ng-Click="VendorOrderModel.displaySections.Finalize = true">
                        </i> 
                        <i class="fa fa-angle-down" style="width:10px;"
                            ng-show="VendorOrderModel.displaySections.Finalize"
                            ng-Click="VendorOrderModel.displaySections.Finalize = false">
                        </i> 
                        <span class="divider">|</span>
                        <!-- <span class = "headdingFirstText">{{VendorOrderModel.LeftSideHeadingLables.Finalize}}</span> -->
                        <span class="T2">{{VendorOrderModel.LeftSideHeadingLables.Finalize}} {!$Label.Finalize}</span>
                        </span>
                        <span class="ActionIcons pull-left ">
                               <div class="dropdown selectDropdown checkboxDropdown">
                                  <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">{!$Label.Label_Actions}
                                  <span class="caret"></span></button>
                            </div>
                        </span> 
                    </div>
                	
	            	</div>
	            </div>
	            <!-- ******************************************************* header for Finalize section ******************************************************* -->
	            
	            <!-- ******************************************************* body for Finalize section ******************************************************* -->
	            <div id="FinalizeSection" class="Finalize_Container" ng-show="VendorOrderModel.EnableFinaliseOrder()">
	            	<div ng-show="VendorOrderModel.displaySections.Finalize">
	            		<!-- START: FINALIZE section -->
	            		<div class="main_section_COU row" id="FinalizeSection_General">
	            			<div class="main_section_COU_Header row" >
	            				<p class="actionRow T2">
		                            <span class="sectionText">{!$Label.Finalize}</span>
		                            <span class="actionText">{!$Label.Label_Actions}</span>
		                            <span class="ActionIcons">
		                            <!-- <i class="fa fa-th"></i> -->
		                            <i class="fa fa-question-circle" data-toggle="tooltip" title="{{VendorOrderModel.helpText['Finalize']}}"></i>
		                            </span> 
		                        </p>
	            			</div>
	            			<div class="col-lg-3 col-md-3 col-lg-offset-9 col-md-offset-9 finalizeInvoiceBtnSection">  
                                       <button id="CO_active_invoice_not_Invoiced_gid_container_finalize_btn" 
                                           class="btn T4 addmoreinfoBtn text-uppercase" ng-class="{'active_btn' : VendorOrderModel.EnableFinaliseOrder(), 'C5': !VendorOrderModel.EnableFinaliseOrder()}"  
                                               ng-disabled='!VendorOrderModel.EnableFinaliseOrder()' 
                                               style="margin: auto; width: 80%;" ng-click="VendorOrderModel.finalizeOrder()">{!$Label.Label_Submit} {!$Label.Order}
                                               <i class="fa fa-angle-right" style="font-size: 15px; margin-left: 5px;"></i>
                                       </button>
       
                                   </div>  
	            		</div>
	            		<!-- END: FINALIZE section -->
	            	</div>
	            </div>
	            
	           <!-- For : You haven't added anything yet! -->
 			</div>
 			<!-- For : You haven't added anything yet! -->
	            <!-- ******************************************************* body for Finalize section ******************************************************* -->
           <div style="height:600px; background: #E6EBEC; margin: 0 -15px;" ></div>
 			
       </div>
                
                </div>
                   
         
        
        
        <!-- <c:PartsChartPopup /> -->
    </body>      
   </html>
</apex:page>