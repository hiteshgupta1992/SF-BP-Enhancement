<apex:component Controller="CustomerOrderCtrl" >

<script>
    var searchToAddModule = angular.module('searchToAddModule', []);

    searchToAddModule.factory('searchservice', function ($q) {
        return {
            searchText : function (textToSearch) {
				textToSearch = encodeString(textToSearch);
				var deferred = $q.defer();
                // make AJAX request to the remote service
                Visualforce.remoting.Manager.invokeAction( '{!$RemoteAction.CustomerOrderCtrl.getSearchResults}' ,textToSearch, 
                function (result, event) {
                    if (event.type == 'exception') {
                       	deferred.reject(event.message);
                    } else {
                        var responseData = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        responseData = responseData.replace(re, '');
                        if(responseData != ''){
                        	deferred.resolve(JSON.parse(responseData));
                        } else {
                        	deferred.resolve(responseData);
                        }
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
        }
    });
    
    searchToAddModule.controller('searchtoadd', function ($scope, $parse, $sce, $timeout, $q, searchservice) {
    
        $scope.titleField = 'Name';
        $scope.lastSearchTerm = null;
        $scope.currentIndex = null;
        $scope.justChanged = false;
        $scope.searchTimer = null;
        $scope.hideTimer = null;
        $scope.searching = false;
        $scope.pause = 500;
        $scope.minLength = 3;
        $scope.searchStr = null;
        $scope.UserDetails = null;
        
    
        if ($scope.userPause) {
            $scope.pause = $scope.userPause;
        }
    
        $scope.isNewSearchNeeded = function (newTerm, oldTerm) {
            return newTerm.length >= $scope.minLength && newTerm != oldTerm
        }
    
        $scope.GetIntialdata = function () {
            if (!$scope.searchStr) {
                $scope.searchStr = null;
            }
        }
    
        $scope.processResults = function (responseData, str) {
        	debug(responseData);
            if (responseData && responseData.length > 0) {
                $scope.results = [];
                var counter = ((responseData.length) > 10 ? 10 : responseData.length);
                var titleFields = [];
                var compareval = 0;
               	
               	
               	if($scope.$parent.FilterID !=null || $scope.$parent.FilterID !=""){
					counter=0
               	 for (var i = 0; i < responseData.length; i++) {
                    // Get title variables
                   if (responseData[i].Info =='Merchandise')
                    {
                        if( responseData[i].AdditionalDetailsForPart.VendorId == $scope.$parent.FilterID){
                            var text = '';
                            text = responseData[i][$scope.titleField];
                            var resultRow = {
                                title : $sce.trustAsHtml(text),
                                originalObject : responseData[i],
                                info:responseData[i].Info
                            }
                            $scope.results[$scope.results.length] = resultRow;
							   counter++;
							   debug(counter);
							   if(counter ==10){
								break;
							}
                        }
                    }
	                    else{
	                    var text = '';
                            text = responseData[i][$scope.titleField];
                            var resultRow = {
                                title : $sce.trustAsHtml(text),
                                originalObject : responseData[i],
                                info:responseData[i].Info
                            }
                            $scope.results[$scope.results.length] = resultRow;
							   counter++;
							   debug(counter);
							   if(counter ==10){
								break;
							}
	                    }
                   }
                   
                 }
                 else{
                 		for (var i = 0; i < counter; i++) {		
                 			
                 			 var text = '';
                            text = responseData[i][$scope.titleField];
                            var resultRow = {
                                title : $sce.trustAsHtml(text),
                                originalObject : responseData[i],
                                info:responseData[i].Info
                            }
                            $scope.results[$scope.results.length] = resultRow;
                          }
                 }

                compareval = $scope.results.length;
                
                if (compareval.length > 10) {
                    var AddationalRow = {
                        title : $sce.trustAsHtml(("...and " + (responseData.length - counter).toString() + " other results")),
                        originalObject : " ",
                    }
                    $scope.results.push(AddationalRow);
                }
                
                if (compareval == 0 && $scope.searchStr) {
                    var AddationalRow = {
                        title : $sce.trustAsHtml(("No other results")),
                        originalObject : " ",
                    }
                    $scope.results.push(AddationalRow);
                }
    
                $scope.results.push({
                    title : $sce.trustAsHtml("ADVANCE SEARCH"),
                    originalObject : " ",
                });

                $scope.results.push({
                    title : $sce.trustAsHtml("+ Add New Vendor"),
                    originalObject : " ",
                });
            } else {
                $scope.results = [];
            }
        }
    
        $scope.searchTimerComplete = function (str) {
            if (str != null) {
                if (str.length >= $scope.minLength) {
                    $scope.SearchSuggestion(str);
                }
            } else {
                $scope.SearchSuggestion("");
            }
        }
    
        $scope.SearchSuggestion = function (str) {
            var searchQueryJson = {
                "ObjectLabel" : ($scope.typeToSearch == undefined) ? "Customer" : $scope.typeToSearch,
                "SearchText" : str,
                "PreferredObject" : ($scope.PreferredObject == undefined) ? "Customer" : $scope.PreferredObject,
                "SearchableObjects" : ($scope.SearchableObjects == undefined) ? "Vendor" : $scope.SearchableObjects
                
            }
            searchQueryJson = JSON.stringify(searchQueryJson);
            var responseData = "";
    
            searchservice.searchText(searchQueryJson)
            .then(function (successfulSearchResult) {
                responseData = successfulSearchResult;
                $scope.searching = false;
                $scope.processResults((($scope.dataField) ? responseData[$scope.dataField] : responseData));
            },
            function (errorSearchResult) {
                responseData = errorSearchResult;
                $scope.searching = false;
            });
        }
    
        $scope.hideResults = function () {}
        $scope.resetHideResults = function () {}
        $scope.hoverRow = function (index) {}
    
        $scope.keyPressed = function (event) {
            if (!(event.which == 38 || event.which == 40 || event.which == 13)) {
                if (!$scope.searchStr || $scope.searchStr == "") {
                    $scope.showDropdown = false;
                    $scope.lastSearchTerm = null
                } else if ($scope.isNewSearchNeeded($scope.searchStr, $scope.lastSearchTerm)) {
                    $scope.lastSearchTerm = $scope.searchStr;
                    $scope.showDropdown = true;
                    $scope.currentIndex = -1;
                    $scope.results = [];
    
                    if ($scope.searchTimer) {
                        $timeout.cancel($scope.searchTimer);
                    }
    
                    $scope.searching = true;
    
                    $scope.searchTimer = $timeout(function () {
                            $scope.searchTimerComplete($scope.searchStr);
                        }, $scope.pause);
    
                    /*$scope.delay = function(){
                    var timer = 0;
                    return function(callback, ms){
                    clearTimeout (timer);
                    timer = setTimeout(callback, ms);
                    };
    
                    }*/
                }
            } else {
                event.preventDefault();
            }
        }
    
        $scope.selectResult = function (result) {
            $scope.showDropdown = false;
            $scope.results = [];
            $scope.searchStr = "";
            
            if($scope.SearchToAddCallback == undefined){
                $scope.$parent.ViewCustomer.selectCallBack(result);
            } else {
                $scope.SearchToAddCallback(result);
            }
        }
        
        var inputField = angular.element('#SearchToaddCutomer');
        inputField.on('keyup', $scope.keyPressed);
    
        angular.element('#SearchToAddElement').on("keyup", function (event) {
            if (event.which === 40) {
                if ($scope.results && ($scope.currentIndex + 1) < $scope.results.length) {
                    $scope.currentIndex++;
                    $scope.$apply();
    
                    var inputFieldEle = angular.element('.angucomplete-row');
                    inputFieldEle.removeClass('angucomplete-selected-rowHover');
    
                    event.preventDefault;
                    event.stopPropagation();
                }
                $scope.$apply();
            } else if (event.which == 38) {
                if ($scope.currentIndex >= 1) {
                    $scope.currentIndex--;
                    var inputtextField = angular.element('#SearchToaddCutomer');
                    
                    $scope.$apply();
                    event.preventDefault;
                    event.stopPropagation();
                }
            } else if (event.which == 13) {
                if ($scope.results && $scope.currentIndex >= 0 && $scope.currentIndex < $scope.results.length) {
                    $scope.selectResult($scope.results[$scope.currentIndex]);
                    //$scope.SaveMerchandiseSearchSource();
    
                    $scope.$apply();
                    event.preventDefault;
                    event.stopPropagation();
                } else {
                    $scope.showDropdown = true;
                    event.preventDefault;
                    event.stopPropagation();
                }
            } else if (event.which == 27) {
                $scope.results = [];
                $scope.showDropdown = false;
                $scope.$apply();
            } else if (event.which == 8) {
                if (($scope.lastSearchTerm == null || $scope.lastSearchTerm == "") && ($scope.testScopeVar == "0")) {
                    $scope.testScopeVar = 1;
                } else if (($scope.lastSearchTerm == null || $scope.lastSearchTerm == "") && ($scope.testScopeVar == "1")) {
                    $scope.testScopeVar = 0;
                }
                //$scope.selectedObject = null;
                $scope.$apply();
            }
        });
    });
</script>

    <div class="angucomplete-holder" ng-controller="searchtoadd" id="SearchToAddElement">
        <div class="form-control form-control-small">   
            <input  id="SearchToaddCutomer" ng-model="searchStr" class="anguinput" style="width:100%"  ng-focus="GetIntialdata()"  type="text" placeholder="Search to Add Related" onclick="this.select();" />
        </div>
        <div id="SearchToaddCutomerSuggestions" class="angucomplete-dropdown" ng-if="showDropdown">
            <div class="angucomplete-searching" ng-show="searching">Searching...</div>
            <div class="angucomplete-searching" ng-show="!searching && (!results || results.length == 0)">No results found</div>
            <div  class="angucomplete-row" ng-repeat="result in results" ng-click="selectResult(result)" 
                ng-mouseover="hoverRow($index)" ng-class="{'angucomplete-selected-row': $index == currentIndex}">
                <div id="SearchResult_{{$index}}" class="angucomplete-title titlestyle" >
                	{{result.title}} 
                	<span ng-if="result.description">  >{{result.description}}</span> 
                	<span ng-if="result.info">  ({{result.info}})</span>
                </div>
                
            </div>
        </div>
    </div>

</apex:component>