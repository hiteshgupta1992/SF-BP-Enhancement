<apex:page standardStylesheets="false"
           showChat="false" showHeader="false" sidebar="false" Controller="VendorOrderReceivingCtrl">
           
<html ng-app="vendorOrderReceivingApp">
    <head>
        <title>Vendor Order Receiving</title>  
    </head>
    
    <c:Css_and_Js ></c:Css_and_Js> 
    <apex:includeScript value="{!$Resource.niceScroll}"/>  
    <apex:includeScript value="{!$Resource.d3}"/>
    
    <c:PageStyle />
    <c:VendorOrderStyle />
    <c:AutoCompleteSuggestion /> 
    <c:dirPagination />
    <c:PopUp />
    <c:COPopup />  
    <c:NewPartPopUpOnVendorOrder />
    <c:dirpriceCallBack />
    <style>
    	.ConfirmBox-overlayNew {
            display: none;
            width: 400px;
            position: absolute;
            z-index: 1000;
        }
   		 .modal-backdrop.in {
			height: 2000px !important;
			width:2000px;
		}
		.ConfirmBox-overlayNew {
            display: none;
            width: 400px;
            position: absolute;
            z-index: 1000;
        }
        .ConfirmBox-overlayNew .modal-content{  
        	top:200px;
	        left:450px;
	        width:400px;
	        position:fixed;
        
        }
		.volineItem_row_clickable .firstchild{
			margin-left: 5.5%;
		}
		
		.volineItem_row_clickable .secondchild{
			margin-left: 2.4%;
		} 
		.volineItem_row_clickable .thirdchild_secondry{
			margin-left: 6%;
			width: 13%;
		}
		.volineItem_row_clickable .otherchild{
			width: 12%;
		}
		      
    </style>
    <script>
        var a;
        var top_for_scroll = 0;
        $(document).ready(function () {
            $('#collapsible-header .navbar-header').hide();
            $('#collapsible-header #bs-example-navbar-collapse-1>div').hide();
            $('#collapsible-header #bs-example-navbar-collapse-1>ul').hide();
            $('#headerHidebtn').hide();
            $('#headershowbtn').show();
            setTimeout(function () {
                $("body").niceScroll({
                    mousescrollstep : 50
                });
                top_for_scroll = $('#collapsible-header').height() + $('#fixed-seacrh-row').height() + $('#sticky-heading').height();
        
                $('#headerHidebtn').click(function () {
                    $('#collapsible-header .navbar-header').hide();
                    $('#collapsible-header #bs-example-navbar-collapse-1>div').hide();
                    $('#collapsible-header #bs-example-navbar-collapse-1>ul').hide();
                    $('#headerHidebtn').hide();
                    $('#headershowbtn').show();
                    $('#workflow-sidepanel').css('top', $('#collapsible-header').height());
                    $('#fixed-seacrh-row').css('top', $('#collapsible-header').height());
                    $('#sticky-heading').css('top', $('#collapsible-header').height() + $('#fixed-seacrh-row').height());
                    top_for_scroll = $('#collapsible-header').height() + $('#fixed-seacrh-row').height() + $('#sticky-heading').height();
                });
                $('#headershowbtn').click(function () {
                    $('#collapsible-header .navbar-header').show();
                    $('#collapsible-header #bs-example-navbar-collapse-1>div').show();
                    $('#collapsible-header #bs-example-navbar-collapse-1>ul').show();
                    $('#headershowbtn').hide();
                    $('#headerHidebtn').show();
                    $('#workflow-sidepanel').css('top', $('#collapsible-header').height());
                    $('#fixed-seacrh-row').css('top', $('#collapsible-header').height());
                    $('#sticky-heading').css('top', $('#collapsible-header').height() + $('#fixed-seacrh-row').height());
                    top_for_scroll = $('#collapsible-header').height() + $('#fixed-seacrh-row').height() + $('#sticky-heading').height();
                });
        
                $(document).on("scroll", onScroll);
                $('.sections-link a[href*=#]:not([href=#])').click(function (e) {
                    $(document).off("scroll");
                    var target = $(this).attr("href");
                    $($(this).attr("rel")).show();
        
                    $('html, body').stop().animate({
                        scrollTop : $(target).offset().top - top_for_scroll - 10
                    }, 1000, function () {
                        $(document).on("scroll", onScroll);
                        onScroll();
                        return false;
                    });
                });
            }, 1000);
        });
        
        function onScroll(event) {
            var heading = '';
            var scrollPos = $(document).scrollTop();
            if (scrollPos < $('#VOR_Info_Block').position().top + $('#VOR_Info_Block').height() - 100) {
                heading = 'A   Info';
            } else if (scrollPos < $('#VOR_Vendor_Order_Receiving_Block').position().top + $('#VOR_Vendor_Order_Receiving_Block').height() - 50) {
                heading = 'A   Info';
            } else if (scrollPos < $('#VOR_Vendor_Received_Block').position().top + $('#VOR_Vendor_Received_Block').height() - 50) {
                heading = ' B  Received  ';
            } else if (scrollPos < $('#VOR_Items_Block').position().top + $('#VOR_Items_Block').height() - 50) {
                heading = '<span class="heading_icon"><img src="{!URLFOR($Resource.icon_images, 'images / heding_icon.png')}" /></span> B   Received';
            } else if (scrollPos < $('#VOR_Outstanding_Items_Block').position().top + $('#VOR_Outstanding_Items_Block').height() - 30) {
                heading = '<span class="heading_icon"><img src="{!URLFOR($Resource.icon_images, 'images / heding_icon.png')}" /></span> B   Received';
            } else if (scrollPos < $('#VOR_Finalize_Block').position().top + $('#VOR_Finalize_Block').height() - 50) {
                heading = '<span class="heading_icon"><img src="{!URLFOR($Resource.icon_images, 'images / heding_icon.png')}" /></span> C   Finalize';
            }
            $('#sticky-heading h1 .header_icon_text').html(heading);
        }
        
        var vendorOrderReceivingApp = angular.module('vendorOrderReceivingApp', ['BPGlobalHeader', 'ngDialog', 'searchToAddModule', 'dir.priceInput', 'dir.listPagination', 'ngAnimate', 'ui-notification', 'partsChart', 'PartPopUpModule']);
        //controlller
        
         vendorOrderReceivingApp.directive('numberOnlyInput', function () {
            return {
                restrict: 'EA',
                template: '<input type="text" class="form-control" ng-model="inputValue" />',
                scope: {
                    inputValue: '='

                },
                link: function (scope) {
                    scope.$watch('inputValue', function(newValue,oldValue) {
                        var arr = String(newValue).split("");
                        var pieces = String(newValue).split(".");
                        if (arr.length === 0) return;
                        if(arr[0] == '-'){
                            scope.inputValue = oldValue;
                        }
                        else if (isNaN(newValue)) {
                            scope.inputValue = oldValue;
                        }
                        else if(typeof(pieces[1]) != "undefined" && pieces[1].length > 2){
                            scope.inputValue = oldValue;
                        }
                    });
                }
            };
        });
        
        
        vendorOrderReceivingApp.controller('vendorOrderReceivingController', function ($scope, $sce, $q, $timeout, Notification, vendorOrderReceivingService, ngDialog) {
            // START: Models

            $scope.VORModel = {};
            $scope.VORModel.VOR_Header = {};
            $scope.VORModel.SelectedVendorOrdersList = {};
            $scope.VendorOrderModel = {};
            
         $scope.labelDataValue = {
                QtyComitted : 0,
                QtyAvalable : 0,
                Instock : 0,
                QtyOnOrder : 0,
                ReOrderMin : 0,
                ReOrderMax : 0,
                maxPoint : 0,
            };
            
            $scope.partChartsDetails = {
                QtyComitted : {
                    startAngle : 0,
                    endAngle : 0
                },
                QtyAvalable : {
                    startAngle : 0,
                    endAngle : 0
                },
                Instock : {
                    startAngle : 0,
                    endAngle : 0
                },
                QtyOnOrder : {
                    startAngle : 0,
                    endAngle : 0
                },
            };
            
            $scope.chartData = {
                QtyComitted : {
                    Angle : 4.3617251235193315
                },
                QtyAvalable : {
                    Angle : 6.397068040872217
                },
                Instock : {
                    Angle : 6.397068040872217
                },
                QtyOnOrder : {
                    Angle : 7.0
                },
                minPoint : {
                    Angle : 2.827433388230814
                },
                maxPoint : {
                    Angle : 12.00741192144774
                },
                ReOrderMin : {
                    Angle : 0
                },
                ReOrderMax : {
                    Angle : 0
                }
            };
            
            
            
			$scope.VORModel.HoldResult ={};
            $scope.FilterID="";
            $scope.SearchToadd = {};
            $scope.typeToSearch = "";
            $scope.PreferredObject = "Vendor";
            
            // Map variable to hold order of sorting
            var sortOrderMap = {
                "ASC"   :   "DESC",
                "DESC"  :   ""
            };
            
          var timer;
         	 // Pop Up opening and hiding functions
           $scope.VORModel.showNeededForPopUp = function (event,vrGroupId) {
             	
	                $scope.applyCssOnPopUp(event, '.Vendor-Order-popup');
	                	vendorOrderReceivingService.getGroupRecDetail(vrGroupId).then(function (vrGroupRecord) {
	                    debug(vrGroupRecord);
	                    if (vrGroupRecord.length > 0) {
	                       $scope.VendorOrderModel.voGroupRecordDetail = vrGroupRecord[0];
	                    }
	                }, function (errorSearchResult) {
	                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
	                });
            	
            }
            
            // hide popup
            $scope.VORModel.hideNeededForPopUp = function () {
                angular.element('.Vendor-Order-popup').hide();
            }
		
            // View CO Header
           	$scope.VORModel.viewCOHeader = function (coHeaderId) {
               debug('coHeaderId : ' + coHeaderId);
               window.open('{!$Page.NewCustomerOrder}?id='+coHeaderId, '_blank');
            }
            
            
              // Show part Popup
            
            $scope.VORModel.showPartPopUp = function (event, partId) {
                $scope.applyCssOnPopUp(event, '.Vendor-Order-Part-Popup');
                
                vendorOrderReceivingService.getPartRecord(partId).then(function (partRecord) {
                    if (partRecord.PartDetailRec != undefined) {
                        debug(partRecord.PartDetailRec);
                        $scope.VendorOrderModel.partInfoDetail = partRecord.PartDetailRec;
                        $scope.VORModel.loadChartData();
                    }
                }, function (errorSearchResult) {
                    $scope.VORModel.OverlayInfo = errorSearchResult;
                });
            }   
            
            // Ccs for positioning popup
             $scope.applyCssOnPopUpRight = function (event, className) {
                var targetEle = angular.element(event.target);
                var elementWidth = targetEle.width();
                if (targetEle.width() > targetEle.parent().width()) {
                    elementWidth = targetEle.parent().width() - 15;
                }
                angular.element(className).css('top', targetEle.offset().top - 22);
                angular.element(className).css('left', targetEle.offset().left + elementWidth-400);
                angular.element(className).show();
            }
            
            
            
            
            // Css Popsitioning popup to right side
             $scope.applyCssOnPopUp = function (event, className) {
                var targetEle = angular.element(event.target);
                var elementWidth = targetEle.width();
                if (targetEle.width() > targetEle.parent().width()) {
                    elementWidth = targetEle.parent().width() - 15;
                }
                angular.element(className).css('top', targetEle.offset().top - 22);
                angular.element(className).css('left', event.clientX);
                angular.element(className).show();
               


            }
            
            
               $scope.applyCssOnPartPopUp = function (event, className) {
                var targetEle = angular.element(event.target);
                var elementWidth = targetEle.width();
                if (targetEle.width() > targetEle.parent().width()) {
                    elementWidth = targetEle.parent().width() - 15;
                }
                angular.element(className).css('top', targetEle.offset().top - 22);
                angular.element(className).css('left', event.clientX);
                 setTimeout(function(){  angular.element(className).show(); }, 1000); 
               


            }
            
  			var timer;
            $scope.VORModel.showCOPopUp = function (event, coHeaderId) {
                if(coHeaderId == null || coHeaderId == 'undefined') {
                	return;
                }
            	timer = $timeout(function () {
	                $scope.applyCssOnPopUp(event, '.Vendor-Order-CODetail-Popup');
		                vendorOrderReceivingService.getCOHeaderRec(coHeaderId).then(function (coHeaderRecord) {
		                    debug(coHeaderRecord);
		                    if (coHeaderRecord.length > 0) {
		                        $scope.VendorOrderModel.coHeaderInfoDetail = coHeaderRecord[0];
		                    }
		                }, function (errorSearchResult) {
		                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
		                });
	          	},1000);
            }
    
            $scope.VORModel.hideCOPopUp = function () {
           		 $timeout.cancel(timer);
                angular.element('.Vendor-Order-CODetail-Popup').hide();
            }
            
            // hide popup Part
            
            $scope.VORModel.hidePartPopUp =function(){
             $timeout.cancel(timer);
             angular.element('.Vendor-Order-Part-Popup').hide();
            
            }
            
            
               
            // Pagination and sort related JSON
            $scope.VORModel.setDefaultPageSortAttrs = {};

            // Method to set default page sort attributes JSON
            $scope.VORModel.setDefaultPageSortAttrs = function() {



                $scope.VORModel.vendorOrdersPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "Order",
                        SortDirection   :   "ASC"
                    }]
                };
                try{
                    $scope.VORModel.vendorOrdersPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
                

                $scope.VORModel.groupItemsVOGPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "Order",
                        SortDirection   :   "ASC"
                    }]
                };
                try{

                    $scope.VORModel.groupItemsVOGPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
                

                $scope.VORModel.outstandingVOGPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "Order",
                        SortDirection   :   "ASC"
                    }]
                };
                try{

                    $scope.VORModel.outstandingVOGPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
            }
            
            // Set default values for validation model
            // Method to set default values for validation model
            $scope.VORModel.setDefaultValidationModel = function() {
                $scope.VORModel.VendorOrderReceivingFormValidationModal = {

                    PackagingSlipNumber : {
                        isError : false,
                        ErrorMessage : '',
                        Type : 'Required'
                    },
                    ReceivingFromInvoiceTotal : {
                        isError : false,
                        ErrorMessage : '',
                        Type : 'Required'
                    }
                };
            }
            $scope.VORModel.setDefaultValidationModel();
            // END: Models
            
            $scope.VORModel.hidePanel = function (event, id) {
                var targetelement = angular.element(event.target).closest('h1').find('.fa:first');
                if (targetelement.hasClass('fa-cheVORon-right')) {
                    targetelement.removeClass('fa-cheVORon-right');
                    targetelement.addClass('fa-cheVORon-down');
                } else {
                    targetelement.removeClass('fa-cheVORon-down');
                    targetelement.addClass('fa-cheVORon-right');
                }
                $('#' + id).toggle();
            }
            
            //Load suggestion and items of a vender
            $scope.VORModel.loadVendor = function () {
            	
                $scope.VORModel.VOR_Header.VORId = "{!JSENCODE(URLENCODE($CurrentPage.parameters.id))}" ? "{!JSENCODE(URLENCODE($CurrentPage.parameters.id))}" : null;
                if($scope.VORModel.VOR_Header.VORId != null && $scope.VORModel.VOR_Header.VORId.trim().length != 15 && $scope.VORModel.VOR_Header.VORId.trim().length != 18){
                    $scope.VORModel.VOR_Header.VORId = null;
                }
                
                $scope.SearchToAddCallback = $scope.VORModel.searchToAddCallback;
                $scope.VORModel.setDefaultPageSortAttrs();
                
                $scope.VORModel.loadAllGridDetails(null, null);
            }
            
            $scope.VORModel.loadAllGridDetails = function(gridName, callBackMethod) {
                // If Vendor receivinig Id is not null: record already exists, then only load grid details
                if ($scope.VORModel.VOR_Header.VORId != null) {
                    var lastEditedPartId = null
                    //Called service to get Vendor Order line
                    vendorOrderReceivingService.getVORDetails(  $scope.VORModel.VOR_Header.VORId,
                                                                gridName, 
                                                                lastEditedPartId,
                                                                $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                $scope.VORModel.outstandingVOGPageSortAttrsJSON
                                                             )
                    .then(function (successfulResult) {

                        $scope.VORModel.populatePageModels(gridName, successfulResult);
                        
                        if(callBackMethod != null && callBackMethod != undefined){
                            callBackMethod();
                        }
                    });
                }
            }
            
            // Add Vendor callback method
            $scope.VORModel.addVendor = function (selectedVendorId) {
                $scope.VORModel.setDefaultPageSortAttrs();
                
                //Called service to get Vendor Order line
                vendorOrderReceivingService.addVendor(selectedVendorId,
                                             $scope.VORModel.VOR_Header.VORId
                                            )
                .then(function (successfulResult) {
                	
                	if($scope.VORModel.VOR_Header.VORId == null || $scope.VORModel.VOR_Header.VORId == 'undefined') {
	               		var url = '?id=' + successfulResult;
						window.history.pushState("string", "Title" , url);
	               	}
	               	
                    $scope.VORModel.VOR_Header.VORId = successfulResult;
                    $scope.VORModel.loadAllGridDetails(null, null);
                });
            }
            
            // Populate new models
            $scope.VORModel.populatePageModels = function (gridName, newResult) {
                debug(newResult);
                $scope.VORModel.VOR_Header = (newResult.VOR_Header != null) ? newResult.VOR_Header : {};
                $scope.VORModel.GroupTotalCost = newResult.GroupTotalCost;
                $scope.VORModel.VIHistoryList =newResult.VIHistoryList
                
                
                if(gridName==null || gridName.toLowerCase()=='groupitems'){
                	$scope.VORModel.totalGroupItems = newResult.totalGroupItems;
	                $scope.VORModel.VORLineItemGroupList=newResult.VORGroupList;
	                $scope.VORModel.populateVORLineItemGroupListEditableModel($scope.VORModel.VORLineItemGroupList);
            
                }
                
                if(gridName == null || gridName.toLowerCase() == 'vendororder'){
                    $scope.VORModel.isAllVOSelected = newResult.isAllVOSelected;


                    $scope.VORModel.SelectedVendorOrdersList = newResult.SelectedVendorOrdersList;
                    $scope.VORModel.totalVendorOrders = newResult.totalVendorOrders;
                    $scope.VORModel.vendorOrdersList = newResult.vendorOrdersList;
                    $scope.VORModel.populateVendorOrdersEditableModel($scope.VORModel.vendorOrdersList);
                    
                    
                }
                


                if(gridName == null || gridName.toLowerCase() == 'outstanding'){
                    $scope.VORModel.totalOutstandingItems = newResult.totalOutstandingItems;
                    $scope.VORModel.outstandingVOGList = newResult.outstandingVOGList;
                    $scope.VORModel.populateOutstandingItemsEditableModel($scope.VORModel.outstandingVOGList);
                }
                
                $scope.FilterID = $scope.VORModel.VOR_Header.VendorId;

                
                if ($scope.VORModel.vendorOrdersList.length == 0) {
                    $scope.SearchableObjects = 'Vendor,Part__c';
                } else {
                    if (($scope.VORModel.outstandingVOGList.length==0) && ($scope.VORModel.VORLineItemGroupList.length==0)) {
                    	if($scope.VORModel.VOR_Header.VendorId ==null){
                    		$scope.SearchableObjects = 'Vendor';
                    	}
                    	else{
                    		$scope.SearchableObjects = 'Vendor,Part__c';
                    	}
                        
                    } else {
                        $scope.SearchableObjects = 'Part__c';
                    }
                }


                if(gridName == null){
                    $scope.VORModel.ReceivingForVO_UpdatePaginationControls();
                    $scope.VORModel.OutstandingItems_UpdatePaginationControls();
                    
                    setTimeout(function () {
                        if(!$scope.$$phase) {
							$scope.$digest();
						}
                    }, 500);
                }
                $scope.VORModel.populateLeftSideHeadingLables();
            }
            var timer;
            $scope.VORModel.openpartpopup = function (event, index) {
             	 timer = $timeout(function () {
           				debug("open popup" + index);
             			debug($scope.VORModel);
             			debug($scope.VORModel.VORLineItemGroupList[index]);
		                var partId = $scope.VORModel.VORLineItemGroupList[index].PartId;
		                debug(event.target);
		                $scope.$broadcast('PartPopUpEvent',  partId);
		                 $scope.applyCssOnPartPopUp(event, '.PartPopupOnVenderOrder');
       			 }, 1000);
             			
		     }
                    
            
            
           $scope.VORModel.populateLeftSideHeadingLables = function(){
			
				$scope.VORModel.LeftSideHeadingLables = {};
				var currentHeadingSequenceIndex = 65;
				
				// Info Header
				
				$scope.VORModel.LeftSideHeadingLables['Info'] = String.fromCharCode(currentHeadingSequenceIndex++);
				
				
				$scope.VORModel.LeftSideHeadingLables['I_General'] =1
				
				$scope.VORModel.LeftSideHeadingLables['I_Receiving_For_Vendor'] =2
				
				// Merchandise: Items Header
				$scope.VORModel.LeftSideHeadingLables['Received'] = String.fromCharCode(currentHeadingSequenceIndex++);;
				
				
				$scope.VORModel.LeftSideHeadingLables['R_Items'] = 1
				$scope.VORModel.LeftSideHeadingLables['R_Outstanding']  = 2  
				 
				
				// Checkout Header
				if($scope.VORModel.VOR_Header.Status =="In Progress" ){
					$scope.VORModel.LeftSideHeadingLables['Finalize'] = String.fromCharCode(currentHeadingSequenceIndex++);
				}
				
				
				
				// Invoice History Header
				if($scope.VORModel.VOR_Header.Status =="Invoiced" ||  $scope.VORModel.VOR_Header.Status =="Stocked" ){
					$scope.VORModel.LeftSideHeadingLables['Invoice_History'] = String.fromCharCode(currentHeadingSequenceIndex++);
					debug(String.fromCharCode(currentHeadingSequenceIndex++))
				}
				
				
			}
			
			
            
            //Populate Esit list for vendor Group
            $scope.VORModel.populateVORLineItemGroupListEditableModel=function(vendorOrdersGroupList){
                          
                $scope.VORModel.groupItems_editRow =[];
                for (var i = 0; i < vendorOrdersGroupList.length; i++) {
                    voLineItems = vendorOrdersGroupList[i].VendorOrderLineItemList;
                    voLineItems_editRow = [];
                    for (var j = 0; j < voLineItems.length; j++) {
                        voLineItems_editRow.push({
                            isEdit : false,
                            radioValue : 0,
                            optionSelected : 0
                        });
                    }
                    $scope.VORModel.groupItems_editRow.push({
                        isEdit : false,
                        radioValue : 0,
                        optionSelected : 0,
                        voLineItems_editRow : voLineItems_editRow,
                        isChanged:0
                    });

                }
                        
                        
                
            }
            
            // Populate edit list for Vendor Orders list
            $scope.VORModel.populateVendorOrdersEditableModel = function(vendorOrdersList) {
                $scope.VORModel.vendorOrderItems_editRow = [];
                
                for (var i = 0; i < vendorOrdersList.length; i++) {
                    voLIGroups = vendorOrdersList[i].VOLIGroups;
                    voliGroups_editRow = [];
                    var isEditableVendorOrder = vendorOrdersList[i].InProgressVRId == null || vendorOrdersList[i].InProgressVRId.substring(0, 15) == $scope.VORModel.VOR_Header.VORId.substring(0, 15);
                    
                    for (var j = 0; j < voLIGroups.length; j++) {
                        voliGroups_editRow.push({
                            isEdit : false,
                            radioValue : 0,
                            optionSelected : 0
                        });
                    }
                    $scope.VORModel.vendorOrderItems_editRow.push({
                        isEdit : false,
                        radioValue : 0,
                        optionSelected : 0,
                        voliGroups_editRow : voliGroups_editRow,
                        isEditable: isEditableVendorOrder
                    });
                
                }
            }
            
            // Populate edit list for Outstanding Vendor Orders list
            $scope.VORModel.populateOutstandingItemsEditableModel = function(outstandingItemsList) {
                $scope.VORModel.outstandingItems_editRow = [];
                for (var i = 0; i < outstandingItemsList.length; i++) {
                    $scope.VORModel.outstandingItems_editRow.push({
                        isEdit : false,
                        radioValue : 0,
                        optionSelected : 0
                    });
                }
            }
            
            // Method for DOM action: Add
            $scope.VORModel.RelatedList_addAction = function (event, typeToSearch) {
                $scope.VORModel.setFocusToSearchBox(typeToSearch);
            }
            
            // Select callback when a record is selected in search to add autocomplete box
            $scope.VORModel.searchToAddCallback = function (selectedRecord) {
                debug(selectedRecord);
                
                // If selected value is a Vendor, then add the record in related cutomers list
                if (selectedRecord.originalObject.Info == 'Merchandise') {
                     $scope.VORModel.AddItemFromSearch(selectedRecord.originalObject);
                } else if (selectedRecord.originalObject.Info == 'Vendor') {
                    var selectedRecordId = selectedRecord.originalObject.Value;
                    if (selectedRecordId.length == 18) {
                        selectedRecordId = selectedRecordId.substring(0, 15);
                    }
                    $scope.VORModel.addVendor(selectedRecordId);
                }
                $scope.VORModel.resetSearchBox();
            }
            


            // Set focus on search text box
            // used when to add related records via page level search box
            $scope.VORModel.setFocusToSearchBox = function (typeToSearch) {
                $scope.typeToSearch = typeToSearch;
                $scope.PreferredObject = typeToSearch;
                angular.element('#SearchToaddCutomer').focus();
            }
            
            // Reset the search object in serch autocomplete
            $scope.VORModel.resetSearchBox = function () {
                $scope.typeToSearch = "";
                $scope.PreferredObject = "";
            }
            
          $scope.VORModel.AddItemFromSearch= function(selectedData)
            {
                    var partId= selectedData.Value ;
                    var vendorId = $scope.VORModel.VOR_Header.VendorId;
                    var VORId = $scope.VORModel.VOR_Header.VORId;
                    var isFromSearchToAdd ='true'
                    $scope.VORModel.groupItemsVOGPageSortAttrsJSON.FieldName='LastModifiedDate';
                      vendorOrderReceivingService.addToItemSubsection(VORId, partId, vendorId, isFromSearchToAdd,
                                 $scope.VORModel.vendorOrdersPageSortAttrsJSON , $scope.VORModel.groupItemsVOGPageSortAttrsJSON, $scope.VORModel.outstandingVOGPageSortAttrsJSON) 
                        .then(function (successfulResult) { 

							if(successfulResult.isFoundPartInOtherVOHeader ==true){
                                $scope.VORModel.HoldResult ={'VORId':VORId,'partId': partId,'vendorId' :vendorId};
                                $scope.VORModel.StockexcessConfirmBoxShow();
                            }else{
                                $scope.VORModel.OnCompleteSearch(successfulResult);
                            
                            }


                        }
                        , function (errorSearchResult) {
                            $scope.VORModel.OverlayInfo = errorSearchResult;
                        });
                    
            
            }
          
            //Populate on Search Complete
            $scope.VORModel.OnCompleteSearch =function(successfulResult){
            
                    debug(successfulResult);
                    
                    $scope.VORModel.VORLineItemGroupList = successfulResult.VORGroupList;
                    $scope.VORModel.isAllVOSelected = successfulResult.isAllVOSelected;
                    $scope.VORModel.totalOutstandingItems = successfulResult.totalOutstandingItems;
                    $scope.VORModel.outstandingVOGList = successfulResult.outstandingVOGList;
                    $scope.FilterID = $scope.VORModel.VOR_Header.VendorId;
            
                            
                   if ($scope.VORModel.vendorOrdersList.length == 0) {
                    $scope.SearchableObjects = 'Vendor,Part__c';
                } else {
                    if (($scope.VORModel.outstandingVOGList.length==0) && ($scope.VORModel.VORLineItemGroupList.length==0)) {
                    	if($scope.VORModel.VOR_Header.VendorId ==null){
                    		$scope.SearchableObjects = 'Vendor';
                    	}
                    	else{
                    		$scope.SearchableObjects = 'Vendor,Part__c';
                    	}
                        
                    } else {
                        $scope.SearchableObjects = 'Part__c';
                    }
                }
                    
                $scope.VORModel.EditRecent(successfulResult);

            }
            
            
            
            // Edit Line Item Recent  
            $scope.VORModel.EditRecent =function(successfulResult){
                    var recentlyEdit = successfulResult.RecentlyEditedVORGroupList; 
                    var voliGroups_editRow = [];
                    
                    debug('-------------'); 
                    debug(recentlyEdit);
                    
                     if(recentlyEdit.length > 0 || recentlyEdit != null || recentlyEdit != 'undefined'){
                            $scope.VORModel.groupItems_editRow =[];
                            var vendorOrdersGroupList = $scope.VORModel.VORLineItemGroupList;
                            
                            for (var i = 0; i < vendorOrdersGroupList.length; i++) {
                                voLineItems = vendorOrdersGroupList[i].VendorOrderLineItemList;
                                voLineItems_editRow = [];
                                for (var j = 0; j < voLineItems.length; j++) {
                                    voLineItems_editRow.push({
                                        isEdit : false,
                                        radioValue : 0,
                                        optionSelected : 0
                                    });
                                }
                                 if( recentlyEdit[0].Id == vendorOrdersGroupList[i].Id){
                                        $scope.VORModel.groupItems_editRow.push({
                                            isEdit : true,
                                            radioValue : 0,
                                            optionSelected : 0,
                                            voLineItems_editRow : voLineItems_editRow,
                                            isChanged:0
                                        });
                                    }
                                    else{
                                            $scope.VORModel.groupItems_editRow.push({
                                            isEdit : false,
                                            radioValue : 0,
                                            optionSelected : 0,
                                            voLineItems_editRow : voLineItems_editRow,
                                            isChanged:0
                                        });
                                    }
                                }
                           }
                           else{
                                     $scope.VORModel.populatePageModels(null, successfulResult);
                           }
                           
                           debug($scope.VORModel.groupItems_editRow)
             }  
              
            // Function To open & close edit Mode only work for parent rows
            // On Click Vendor Order Row Edit & Expand Row Method
            $scope.VORModel.editVendorOrderReceivedItem = function (event, index) {
                a = event;
                if(event.target.attributes.class != null && (event.target.attributes.class.value.indexOf("chk_tick") != -1 || event.target.attributes.class.value.indexOf("chksqure") != -1)){
                    return;
                }
                
                var isEditModeEnabled = false;
                var prevEditedRowIndex;
                var isEditableVendorOrder = $scope.VORModel.vendorOrderItems_editRow[index].isEditable;
                
                for (i = 0; i < $scope.VORModel.vendorOrderItems_editRow.length; i++) {
                    if ($scope.VORModel.vendorOrderItems_editRow[i].isEdit == true) {
                        isEditModeEnabled = true;
                        prevEditedRowIndex = i;
                    }
                    $scope.VORModel.vendorOrderItems_editRow[i].isEdit = false;
                }
                
                if ( isEditableVendorOrder && (!isEditModeEnabled || (prevEditedRowIndex != null && prevEditedRowIndex != index) )) {
                    $scope.VORModel.vendorOrderItems_editRow[index].isEdit = true;
                }
            }
            
            // Function To open & close edit Mode only work for child  rows
            // On Click Group Row Edit & Expand Row Method
            $scope.VORModel.editvoGroupItem = function (event, parentindex, index) {
                var isEditModeEnabled = false;
                var prevEditedRowIndex;
                
                if($scope.VORModel.vendorOrderItems_editRow[parentindex].voliGroups_editRow[index].isEdit ==true){
                	
                			$scope.VORModel.vendorOrderItems_editRow[parentindex].voliGroups_editRow[index].isEdit=false;
                			debug('logged');
                			return;
                }
                
                if ($scope.VORModel.vendorOrderItems_editRow[parentindex].voliGroups_editRow[index].isEdit == false) {
                    for (i = 0; i < $scope.VORModel.vendorOrderItems_editRow[parentindex].voliGroups_editRow.length; i++) {
                        if ($scope.VORModel.vendorOrderItems_editRow[parentindex].voliGroups_editRow[i].isEdit == true) {
                            isEditModeEnabled = true;
                            prevEditedRowIndex = i;
                        }
                        $scope.VORModel.vendorOrderItems_editRow[parentindex].voliGroups_editRow[i].isEdit = false;
                    }
                }
                
                if (!isEditModeEnabled || (prevEditedRowIndex != null && prevEditedRowIndex != index)) {
                    $scope.VORModel.vendorOrderItems_editRow[parentindex].voliGroups_editRow[index].isEdit = true;
                } else {
                    //$scope.VORModel.saveVolineItems(partId, voLineItem, qtyRequired, parentindex)
                }
            }
            
            // Function To open & close edit Mode only work for child  rows
            // On Click Group Row Edit & Expand Row Method
            $scope.VORModel.editOutstandingItem = function (event, index) {
                var isEditModeEnabled = false;
                var prevEditedRowIndex;
                
                for (i = 0; i < $scope.VORModel.outstandingItems_editRow.length; i++) {
                    if ($scope.VORModel.outstandingItems_editRow[i].isEdit == true) {
                        isEditModeEnabled = true;
                        prevEditedRowIndex = i;
                    }
                    $scope.VORModel.outstandingItems_editRow[i].isEdit = false;
                }
                
                if (!isEditModeEnabled || (prevEditedRowIndex != null && prevEditedRowIndex != index)) {
                    $scope.VORModel.outstandingItems_editRow[index].isEdit = true;
                } else {
                    //$scope.VORModel.saveVolineItems(partId, voLineItem, qtyRequired, parentindex)
                }
            }
            






            // Click event method for receiving from invoice checkbox
            $scope.VORModel.onClickReceivingFromInvoice = function(event) {
                $scope.VORModel.VOR_Header.IsReceivingFromInvoice = !$scope.VORModel.VOR_Header.IsReceivingFromInvoice;
                if($scope.VORModel.VOR_Header.ReceivingFromInvoiceTotal == null || $scope.VORModel.VOR_Header.ReceivingFromInvoiceTotal == ''){
                    $scope.VORModel.VOR_Header.ReceivingFromInvoiceTotal = 0;
                }
                
                if($scope.VORModel.VOR_Header.IsReceivingFromInvoice){
                    
                } else {
                    delete $scope.VORModel.VendorOrderReceivingFormValidationModal.ReceivingFromInvoiceTotal;
                }
                
                $scope.VORModel.updateVORHeaderDetails();
            }
            
            // Method to update various information of vendor order receiving header
            $scope.VORModel.updateVORHeaderDetails = function() {
                vendorOrderReceivingService.updateVORHeaderDetails( $scope.VORModel.VOR_Header.VORId,
                                                                    $scope.VORModel.VOR_Header
                                                                )
                .then(function (successfulResult) {
               
                    $scope.VORModel.VOR_Header = successfulResult;
                   		Notification.success('Updated successfully.');
                }, function (errorSearchResult) {
                    Notification.error('Some error occurred, please refresh the page.');
                });
            }
            
            // On selection of any action for Vendor Orders grid, perform function
            $scope.VORModel.vendorOrderItems_GoAction = function (index, parentGirdIndex) {
                
                debug(index +','+ parentGirdIndex)
                if(parentGirdIndex == null){
                
                
                  		var vorId= $scope.VORModel.VOR_Header.VORId;
                  		var 	vohId    =$scope.VORModel.vendorOrdersList[index].Id;
		                var vogId=null
                		vendorOrderReceivingService.addAllLineItemsToItemSubsection(vorId, 
                															vohId ,
                															 vogId ,
                															$scope.VORModel.vendorOrdersPageSortAttrsJSON,
		                                                                	$scope.VORModel.groupItemsVOGPageSortAttrsJSON,
		                                                                	$scope.VORModel.outstandingVOGPageSortAttrsJSON)
		                .then(function (successfulResult) {
		                    $scope.VORModel.populatePageModels(null, successfulResult);
		                });
                	
                
                 
                }
                else{
                
                		var vorId= $scope.VORModel.VOR_Header.VORId;
                  		var vohId    =null;
		                var vogId= $scope.VORModel.vendorOrdersList[parentGirdIndex].VOLIGroups[index].Id;
		                
                		vendorOrderReceivingService.addAllLineItemsToItemSubsection(vorId, 
                															vohId ,
                															 vogId ,
                															$scope.VORModel.vendorOrdersPageSortAttrsJSON,
		                                                                	$scope.VORModel.groupItemsVOGPageSortAttrsJSON,
		                                                                	$scope.VORModel.outstandingVOGPageSortAttrsJSON)
		                		.then(function (successfulResult) {
				                    $scope.VORModel.populatePageModels(null, successfulResult);
				                });
                
                		}
                
            }
            
            
            // remove group function
            $scope.VORModel.vendorOrderReceivingGroup_GoAction = function (index) {
            
                            
                        //var partId = $scope.VORModel.outstandingVOGList[index].PartId;
                
                        $scope.VORModel.VORLineItemGroupList[index]
                        
            
            
            }
            
            // On selection of any action for Vendor Orders grid, perform function
            $scope.VORModel.outstandingItems_GoAction = function (index, parentGirdIndex) {
                var partId = $scope.VORModel.outstandingVOGList[index].PartId;
                
                //Called service to get Vendor Order line
                vendorOrderReceivingService.addToItemSubsection($scope.VORModel.VOR_Header.VORId,
                                                                partId, 
                                                                $scope.VORModel.VOR_Header.VendorId,
                                                                false,
                                                                $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                $scope.VORModel.outstandingVOGPageSortAttrsJSON
                                                            )
                .then(function (successfulResult) {
                    $scope.VORModel.populatePageModels(null, successfulResult);
                });
            }
            
            // Click event method for Select/Deselect all vendor orders checkbox
            $scope.VORModel.onClickSelectAllVO = function(event) {
                if(event.target.attributes.class.value.indexOf("disabled_chk_tick") != -1){
                    return;
                    event.stopPropagation();
                }
                
                $scope.VORModel.currentSelectedVOIndex = null;
                $scope.VORModel.currentSelectedVOId = null;
                
                // First popup for confirmation if really want to unselect vendor order from receiving,
                // if any of item is already selected in receiving items grid
                if( $scope.VORModel.isAllVOSelected == true ){                  // Check with TRUE, as the selected box is not toggelled yet
                    // ToDo: Loop through items grid if any items from the current VENDOR ORDER is selected already
                    angular.element('#VODeselectConfirmBox').show();
                } else {
                    $scope.VORModel.isAllVOSelected = !$scope.VORModel.isAllVOSelected;
                    $scope.VORModel.VODeselectConfirm();
                }
            }





            // Click event method for Select/Deselect particular vendor order record checkbox
            $scope.VORModel.onClickSelectVO = function(event, indexVal, vendorOrderId) {
                a = event;
                if(event.target.attributes.class.value.indexOf("disabled_chk_tick") != -1){
                    return;
                    event.stopPropagation();
                }
                
                $scope.VORModel.currentSelectedVOIndex = indexVal;
                $scope.VORModel.currentSelectedVOId = vendorOrderId;
                // First popup for confirmation if really want to unselect vendor order from receiving,
                // if any of item is already selected in receiving items grid
                if($scope.VORModel.vendorOrdersList[indexVal].InProgressVRId != null){
                    // ToDo: Loop through items grid if any items from the current VENDOR ORDER is selected already
                    angular.element('#VODeselectConfirmBox').show();
                } else {
                    $scope.VORModel.VODeselectConfirm();
                }
            }

            // Function Edit on click line
            $scope.VORModel.editGroupItem=function (event,index){
            
            debug();
            if(event.target['type']=='text')
            {
            
            }
            else{
            
            
                   debug('call save items');
                var isEditModeEnabled = false;
                var lineitem = [];
                    for (i = 0; i < $scope.VORModel.groupItems_editRow.length; i++) {
                        if ($scope.VORModel.groupItems_editRow[i].isEdit == true) {
                            isEditModeEnabled = true;
                            index = i;
                        }
                       $scope.VORModel.groupItems_editRow[i].isEdit = false;
                    }
                    if (!isEditModeEnabled) {
                        $scope.VORModel.groupItems_editRow[index].isEdit = true;
                    } else {
                    
                    			
                                var vrGroupId = $scope.VORModel.VORLineItemGroupList[index].Id;
                                var partId = $scope.VORModel.VORLineItemGroupList[index].PartId;
                                var  qty    =  $scope.VORModel.VORLineItemGroupList[index].ReceivedQty; 
                                var cost  = $scope.VORModel.VORLineItemGroupList[index].Cost;
                                var vorId =  $scope.VORModel.VOR_Header.VORId;
                                
                                 $scope.VORModel.updateReceivedItemGroup (vorId,  
                                                                     partId,
                                                                     vrGroupId,
                                                                     qty,
                                                                     cost,
                                                                     $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                     $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                     $scope.VORModel.outstandingVOGPageSortAttrsJSON
                                                                     )
                                
                            debug('call save');
                    }
                }  
            }
            
            
            
            
            
            // Function Save Recieved Item Group
            $scope.VORModel.updateReceivedItemGroup= function(vorId,  partId,  vrGroupId,  qty,  cost, vendorOrdersPageSortAttrsJSON, 
                                        groupItemsPageSortAttrsJSON,  outstandingVOGPageSortAttrsJSON){

                 vendorOrderReceivingService.updateItemsSection(vorId,  partId,  vrGroupId,  qty,  cost, vendorOrdersPageSortAttrsJSON, 
                                        groupItemsPageSortAttrsJSON,  outstandingVOGPageSortAttrsJSON)
                        .then(function (successfulResult) {
                    
                                $scope.VORModel.populatePageModels(null,successfulResult)
                            });
            }
            
            $scope.VORModel.updateReceivedItemGroupChildClick =function(vorId,  partId,  vrGroupId,  qty,  cost, vendorOrdersPageSortAttrsJSON, 
                                        groupItemsPageSortAttrsJSON,  outstandingVOGPageSortAttrsJSON){
                                        
                        vendorOrderReceivingService.updateItemsSection(vorId,  partId,  vrGroupId,  qty,  cost, vendorOrdersPageSortAttrsJSON, 
                                        groupItemsPageSortAttrsJSON,  outstandingVOGPageSortAttrsJSON)
                        .then(function (successfulResult) {

                    
                                        $scope.VORModel.OnCompleteSearch(successfulResult)

                              
                            });
                                        
                                        
           }                            
            
            
            //ng-keydown="VORModel.editRowTabOut($event, $parent.$index ,$index)"
            
            //Tabout function 
            $scope.VORModel.editRowTabOutRecieved=function(event ,index){
            
                     debug('1233');
                     $scope.VORModel.groupItems_editRow[index].isChanged = 1; 
            
            
            }
            
            $scope.VORModel.editRowTabOutLast=function(event ,index){

            
                     debug('1233');

                     $scope.VORModel.groupItems_editRow[index].isChanged = 1; 

					if (!event.shiftKey && event.keyCode == 9){
						var vrGroupId = $scope.VORModel.VORLineItemGroupList[index].Id;
						var partId = $scope.VORModel.VORLineItemGroupList[index].PartId;
						var  qty    =  $scope.VORModel.VORLineItemGroupList[index].ReceivedQty; 
						var cost  = $scope.VORModel.VORLineItemGroupList[index].Cost;
						var vorId =  $scope.VORModel.VOR_Header.VORId;

						
						 $scope.VORModel.updateReceivedItemGroup (vorId,  



															 partId,
															 vrGroupId,
															 qty,
                                                                     cost,
                                                                     $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                     $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                     $scope.VORModel.outstandingVOGPageSortAttrsJSON
                                                                     )
                                
            		}

            }
            



            // Tab out Child row
            $scope.VORModel.editRowTabOutChild = function(event , parentindex ,index){
                     
                     debug( parentindex +','+index)
                     
                      if (!event.shiftKey && event.keyCode == 9){
                      			
                      			debug(parentindex);
                      		var result =$scope.VORModel.ReceivedItemTotalValidation(parentindex);
                      		
                            if(result ==true){
                            		 
                                    var groupJSONString= [];
                                    groupJSONString[0] = $scope.VORModel.VORLineItemGroupList[parentindex];
                                    var   vrGroupId     = $scope.VORModel.VORLineItemGroupList[parentindex].Id;
                                    var partId          = $scope.VORModel.VORLineItemGroupList[parentindex].PartId;
                                    var vorId = $scope.VORModel.VOR_Header.VORId;
                                    
                                    vendorOrderReceivingService.updateLineItemsOfItemsSection( vorId,partId, vrGroupId,  groupJSONString,
                                                                     $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                     $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                     $scope.VORModel.outstandingVOGPageSortAttrsJSON
                                                                    )
                                        .then(function (successfulResult) {
                                            
                                                $scope.VORModel.OnCompleteSearch(successfulResult);
                                                
                                            
                                            });
                                  
                            }else{
                                 $scope.VORModel.groupItems_editRow[parentindex].voLineItems_editRow[index].isEdit = false;
                                 Notification.error('Item Can Be saved only Till Reciving Total Not Equal to Group Total');
                            }
                                
            		}
            
            }
            
            // Edit vendor recieved list items
            $scope.VORModel.editVolItem =function(event, index, parentindex){
            
                     var isEditModeEnabled = false;
                     var lineitem = [];
                     var partId= null;
                     var voLineItem = null;
                     var qtyRequired = null;
                     
               if($scope.VORModel.groupItems_editRow[parentindex].isChanged == 1){
               
                                var vrGroupId = $scope.VORModel.VORLineItemGroupList[parentindex].Id;
                                var partId = $scope.VORModel.VORLineItemGroupList[parentindex].PartId;
                                var  qty    =  $scope.VORModel.VORLineItemGroupList[parentindex].ReceivedQty; 
                                var cost  = $scope.VORModel.VORLineItemGroupList[parentindex].Cost;
                                var vorId =  $scope.VORModel.VOR_Header.VORId;
                                
                                 $scope.VORModel.updateReceivedItemGroupChildClick(vorId,  
                                                                     partId,
                                                                     vrGroupId,
                                                                     qty,
                                                                     cost,
                                                                     $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                     $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                     $scope.VORModel.outstandingVOGPageSortAttrsJSON
                                                                     )
                
               }else{
               
                  if(event.target['type']=='text'){
                    
                    } 
                     else{
                        for (i = 0; i < $scope.VORModel.groupItems_editRow[parentindex].voLineItems_editRow.length; i++) {
                            if ($scope.VORModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit == true) {
                                $scope.VORModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit
                                isEditModeEnabled = true;
                            }
                             $scope.VORModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit = false;
                         }
                  }
                if (!isEditModeEnabled) {
                
                            $scope.VORModel.groupItems_editRow[parentindex].voLineItems_editRow[index].isEdit = true;
                } else {
                        
                            var result =$scope.VORModel.ReceivedItemTotalValidation(parentindex);
                            if(result ==true){
                                    var groupJSONString= [];
                                    groupJSONString[0] = $scope.VORModel.VORLineItemGroupList[parentindex];
                                    var   vrGroupId     = $scope.VORModel.VORLineItemGroupList[parentindex].Id;
                                    var partId          = $scope.VORModel.VORLineItemGroupList[parentindex].PartId;
                                    var vorId = $scope.VORModel.VOR_Header.VORId;
                                    
                                    vendorOrderReceivingService.updateLineItemsOfItemsSection( vorId,partId, vrGroupId,  groupJSONString,
                                                                     $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                     $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                     $scope.VORModel.outstandingVOGPageSortAttrsJSON
                                                                    )
                                        .then(function (successfulResult) {
                                            
                                                $scope.VORModel.OnCompleteSearch(successfulResult);
                                            
                                            });
                                  
                            }else{
                                 $scope.VORModel.groupItems_editRow[parentindex].voLineItems_editRow[index].isEdit = true;
                                 Notification.error('Item can be saved only till reciving total not eqaul to group total');
                            }
                            
                }
               
               
               }
            }
            
            $scope.VORModel.ReceivedItemTotalValidation =function( index )
            {
                
                    var GroupItem= $scope.VORModel.VORLineItemGroupList[index];
                    var Ispackaged =$scope.VORModel.VORLineItemGroupList[index].UnitType;
                    var voli = GroupItem.VendorOrderLineItemList;
		            var qtyReceived = 0 ;
		            var PackageQty = $scope.VORModel.VORLineItemGroupList[index].PackageQty;
                    if(Ispackaged !=null && Ispackaged !='NULL'){
                    		 for( i =0 ; i < voli.length; i++ ){
		                        debug(voli[i].ReceivedQty);
		                        qtyReceived  = qtyReceived +  parseInt(voli[i].ReceivedQty);
		                    }
		                    qtyReceived = qtyReceived/PackageQty;
		                    if(qtyReceived != GroupItem.ReceivedQty ){
		                        return false;
		                    }else{
		                        return true;
		                    }
                    }else{
		                    for( i =0 ; i < voli.length; i++ ){
		                        debug(voli[i].ReceivedQty);
		                        qtyReceived  = qtyReceived +  parseInt(voli[i].ReceivedQty);
		                    }
		                    debug(qtyReceived + ','+ GroupItem.ReceivedQty);
		                    if(qtyReceived != GroupItem.ReceivedQty ){
		                        return false;
		                    }else{
		                        return true;
		                    }
                    }
                  
            }
            
            
            
              //Confimation box popup on stock Excess Genration
            $scope.VORModel.StockexcessConfirmBoxShow = function() {
            
            					angular.element('#StockexcessConfirmBox').modal({
                                                      backdrop: 'static',
                                                      keyboard: false 
                                                    });
            }
            
            //Confirm box selection call method
             $scope.VORModel.StockexcessConfirmBox_Response =function(response){
                 if(response){
                    // If YES: then set select all to false
                    $scope.VORModel.isAllVOSelected = false;

                    $scope.VORModel.StockexcessConfirm();
                }
                
                angular.element('#StockexcessConfirmBox').hide();
             
             }
             


             $scope.VORModel.StockexcessConfirm =function(){
             //call funtion to create stock excess
                debug('Excess record is created');
					var vorId = $scope.VORModel.HoldResult.VORId;
                    var partId = $scope.VORModel.HoldResult.partId;
                    var vendorId = $scope.VORModel.VOR_Header.VendorId;
                    $scope.VORModel.HoldResult ={};
                    vendorOrderReceivingService.addToItemSubsectionAfterConfimation(vorId, partId,vendorId,true, true,
                                                                    $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                     $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                     $scope.VORModel.outstandingVOGPageSortAttrsJSON)
                                        .then(function (successfulResult) {
                                            
                                                $scope.VORModel.OnCompleteSearch(successfulResult)
                                            
                                            });     
                    
             }
            
            
            
            
            // Confirm box selection callback method
            $scope.VORModel.VODeselectConfirmBox_Response = function(response) {
                if(response){
                    // If YES: then set select all to false
                    $scope.VORModel.isAllVOSelected = false;
                    $scope.VORModel.VODeselectConfirm();
                }
                angular.element('#VODeselectConfirmBox').hide();
                
            }
            
            // Click event method for Select/Deselect particular vendor order record checkbox
            $scope.VORModel.VODeselectConfirm = function() {
                var indexVal = $scope.VORModel.currentSelectedVOIndex;
                var vendorOrderId = ($scope.VORModel.currentSelectedVOId != undefined) ? $scope.VORModel.currentSelectedVOId : null;
                var InProgressVRId = $scope.VORModel.VOR_Header.VORId;
                var isSelected = $scope.VORModel.isAllVOSelected;
                debug('Hey..!! I am here');
                debug($scope.VORModel);
                if(indexVal != null){
                    $scope.VORModel.vendorOrdersList[indexVal].InProgressVRId = ($scope.VORModel.vendorOrdersList[indexVal].InProgressVRId == null) 
                                                                                ? $scope.VORModel.VOR_Header.VORId
                                                                                : null;
                    InProgressVRId = $scope.VORModel.vendorOrdersList[indexVal].InProgressVRId;
                }
                
                vendorOrderReceivingService.receiveVendorOrderItems(vendorOrderId, InProgressVRId, isSelected)
                .then(function (successfulResult) {
                    if(successfulResult == "true"){
                        $scope.VORModel.loadAllGridDetails(null, null);
                    } else if(indexVal != null){
                        $scope.VORModel.vendorOrdersList[indexVal].InProgressVRId = null;
                    }
                });
            }
            
            
            //remove from group go action call
            $scope.VORModel.groupItemsGoAction =function(index){
            	if ($scope.VORModel.groupItems_editRow[index].radioValue != 0) {
					var vrGroupId = $scope.VORModel.VORLineItemGroupList[index].Id;
					var vorId = $scope.VORModel.VOR_Header.VORId;
				
					vendorOrderReceivingService.removeItem(vorId, vrGroupId,
						$scope.VORModel.vendorOrdersPageSortAttrsJSON,
						$scope.VORModel.groupItemsVOGPageSortAttrsJSON,
						$scope.VORModel.outstandingVOGPageSortAttrsJSON)
					.then(function (successfulResult) {
						$scope.VORModel.populatePageModels(null, successfulResult)
					});
				}
            }
            
            // Method to handle any updates in sort controls
            $scope.VORModel.ReceivingForVO_PageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VORModel.vendorOrdersPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VORModel.vendorOrdersPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VORModel.vendorOrdersPageSortAttrsJSON.CurrentPage = 1;
                $scope.VORModel.ReceivingForVO_paginationControlsAction();
            }
            
            // Method to handle any updates in sort controls
            $scope.VORModel.ReceivingForVO_paginationControlsAction = function () {
                $scope.VORModel.loadAllGridDetails('VendorOrder', $scope.VORModel.ReceivingForVO_UpdatePaginationControls);
            }
            
            // Update pagination count for Vendor Orders grid
            $scope.VORModel.ReceivingForVO_UpdatePaginationControls = function () {
                setTimeout(function () {
                    $scope.VORModel.vendorOrdersPageSortAttrsJSON.ChangesCount++;
                }, 10);
            }
            

            
            
            
            //load chart details
            
            
              $scope.VORModel.loadChartData = function () {
            
                var index = [];
            
                var MaxOrder = $scope.VendorOrderModel.partInfoDetail.AutoReorderTo;
                MaxOrder = MaxOrder + (MaxOrder * .1);
            
                $scope.partChartsDetails.MaxOrder = MaxOrder;
            
                debug('max' + $scope.partChartsDetails.MaxOrder)
            
                /*  $scope.partChartsDetails ={QtyComitted : {startAngle:2.827433388230814 , endAngle :4.3617251235193315  } ,
                QtyAvalable : {startAngle:4.3617251235193315 , endAngle : 6.397068040872217},
                Instock :{startAngle:2.827433388230814 , endAngle : 6.397068040872217},
                QtyOnOrder :{startAngle:6.397068040872217 , endAngle : 7.0},
                };  */
            
                $scope.chartData = {
                    QtyComitted : {
                        Angle : 4.3617251235193315
                    },
                    QtyAvalable : {
                        Angle : 6.397068040872217
                    },
                    Instock : {
                        Angle : 6.397068040872217
                    },
                    QtyOnOrder : {
                        Angle : 7.0
                    },
                    minPoint : {
                        Angle : 2.827433388230814
                    },
                    maxPoint : {
                        Angle : 12.00741192144774
                    },
                    ReOrderMin : {
                        Angle : 0
                    },
                    ReOrderMax : {
                        Angle : 0
                    }
            
                };
            
                $scope.labelDataValue = {
                    QtyComitted : $scope.VendorOrderModel.partInfoDetail.QtyCommited,
                    QtyAvalable : $scope.VendorOrderModel.partInfoDetail.QtyAvailable,
                    Instock : $scope.VendorOrderModel.partInfoDetail.InStockQty,
                    QtyOnOrder : $scope.VendorOrderModel.partInfoDetail.QtyOnOrder,
                    ReOrderMin : $scope.VendorOrderModel.partInfoDetail.AutoReorderAt,
                    ReOrderMax : $scope.VendorOrderModel.partInfoDetail.AutoReorderTo,
                    maxPoint : $scope.VendorOrderModel.MaxOrder
                };
            
                debug($scope.labelDataValue)
            
                index.splice(1, 0, {
                    key : 'QtyComitted',
                    value : $scope.VendorOrderModel.partInfoDetail.QtyCommited,
                    lastAngle : 'init'
            
                });
            
                index.splice(2, 0, {
                    key : 'QtyAvalable',
                    value : $scope.VendorOrderModel.partInfoDetail.QtyAvailable,
                    lastAngle : 'QtyComitted'
            
                })
            
                index.splice(3, 0, {
                    key : 'Instock',
                    value : $scope.VendorOrderModel.partInfoDetail.InStockQty,
                    lastAngle : 'init'
            
                })
                index.splice(4, 0, {
                    key : 'QtyOnOrder',
                    value : $scope.VendorOrderModel.partInfoDetail.QtyOnOrder,
                    lastAngle : 'QtyAvalable'
            
                })
            
                index.splice(5, 0, {
                    key : 'maxOrder',
                    value : $scope.VendorOrderModel.partInfoDetail.AutoReorderTo,
                    lastAngle : 'QtyOnOrder'
            
                })
            
                index.splice(6, 0, {
                    key : 'ReOrderMin',
                    value : $scope.VendorOrderModel.partInfoDetail.AutoReorderAt,
                    lastAngle : 'ReOrderMin'
            
                })
            
                index.splice(7, 0, {
                    key : 'ReOrderMax',
                    value : $scope.VendorOrderModel.partInfoDetail.AutoReorderTo,
                    lastAngle : 'ReOrderMax'
            
                })
            
                $scope.temp = {}
            
                for (i = 0; i < index.length; i++) {
            
                    var firstangle = index[i].value;
                    var lastangle = index[i].lastAngle;
                    var key = index[i].key;
            
                    if (lastangle == 'init') {
            
                        var maxOrder = $scope.partChartsDetails.MaxOrder;
            
                        var endAngleVal = ((.45 * Math.PI * 2) + ((Math.PI * 2) * (0.009 * ((firstangle / maxOrder) * 100))));
            
                        $scope.temp[key] = {
                            startAngle : 2.827433388230814,
                            endAngle : endAngleVal
                        }
            
                        $scope.chartData[key] = {
                            Angle : endAngleVal
                        }
            
                    } else {
            
                        if (key == lastangle) {
            
                            var angleValue = ((.45 * Math.PI * 2) + (Math.PI * 2) * (0.009 * ((firstangle / maxOrder) * 100)))
                            $scope.chartData[key] = {
                                Angle : angleValue
                            };
                        } else {
            
                            var startAngleVal = $scope.temp[lastangle].endAngle;
                            var endAngleval = (startAngleVal +
                                ((Math.PI * 2) * (0.009 * ((firstangle / maxOrder) * 100))));
            
                            $scope.temp[key] = {
                                startAngle : startAngleVal,
                                endAngle : endAngleval
                            }
            
                            $scope.chartData[key] = {
                                Angle : $scope.temp[key].endAngle
                            };
            
                        }
                    }
            

            
            
                }


                
                
                
                
                
                
              $scope.chartData['minPoint'] = {
                    Angle : 2.827433388230814
                };
                $scope.chartData['maxPoint'] = {
                    Angle : 8.482300164692441
                };
            
                angular.copy($scope.temp, $scope.partChartsDetails);

            }

            //Function Blur
            $scope.VORModel.CallBlur =function(){
            
                debug('blured');
            
            }
            
            // Method to handle any updates in sort controls
            $scope.VORModel.OutstandingItems_PageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VORModel.outstandingVOGPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VORModel.outstandingVOGPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VORModel.outstandingVOGPageSortAttrsJSON.CurrentPage = 1;
                $scope.VORModel.OutstandingItems_paginationControlsAction();
            }


            // Method to handle any updates in sort controls
            $scope.VORModel.OutstandingItems_paginationControlsAction = function () {
                $scope.VORModel.loadAllGridDetails('OutStanding', $scope.VORModel.OutstandingItems_UpdatePaginationControls);
            }
            

            // Update pagination count for Vendor Orders grid
            $scope.VORModel.OutstandingItems_UpdatePaginationControls = function () {
                setTimeout(function () {
                    $scope.VORModel.outstandingVOGPageSortAttrsJSON.ChangesCount++;
                }, 10);
            }
            
            // Method to handle any updates in sort controls
            $scope.VORModel.GroupItems_PageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VORModel.groupItemsVOGPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VORModel.groupItemsVOGPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VORModel.groupItemsVOGPageSortAttrsJSON.CurrentPage = 1;
                $scope.VORModel.GroupItems_paginationControlsAction();
            }

            // Method to handle any updates in sort controls
            $scope.VORModel.GroupItems_paginationControlsAction = function () {
                $scope.VORModel.loadAllGridDetails(null, $scope.VORModel.GroupItems_UpdatePaginationControls);
            }
            

            // Update pagination count for Vendor Orders grid
            $scope.VORModel.GroupItems_UpdatePaginationControls = function () {
                setTimeout(function () {
                    $scope.VORModel.groupItemsVOGPageSortAttrsJSON.ChangesCount++;
                }, 10);
            }
			$scope.VORModel.addAllReceiving = function(){
                debug('Add All Receiving ');

               
            }
            




            // function for bul removal
            $scope.VORModel.removeAllReceived = function(){
               					
               					var vorId= $scope.VORModel.VOR_Header.VORId;
               					vendorOrderReceivingService.removeAllItemsFromItemSubSection(vorId, 
               					 									$scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                     $scope.VORModel.groupItemsVOGPageSortAttrsJSON,
                                                                     $scope.VORModel.outstandingVOGPageSortAttrsJSON)
           			 				  .then(function (successfulResult) {
					                        
					                        $scope.VORModel.populatePageModels(null, successfulResult);
					                        
					                      
                   					 });
                 
            }
            /// Function To bulk addition 
            $scope.VORModel.addAllOutstanding = function(){
            					var vorId= $scope.VORModel.VOR_Header.VORId;
           						 vendorOrderReceivingService.addAllLineItemsToItemSubsection(vorId, null, null,
           			 												 $scope.VORModel.vendorOrdersPageSortAttrsJSON,
                                                                     $scope.VORModel.groupItemsVOGPageSortAttrsJSON,

                                                                     $scope.VORModel.outstandingVOGPageSortAttrsJSON)
           			 				.then(function (successfulResult) {
					                        
					                        $scope.VORModel.populatePageModels(null, successfulResult);
					                        
					                      
                   					 });
            }
            
            /// Commit receiving Method
            $scope.VORModel.finalizeOrder = function(){
				var vorId= $scope.VORModel.VOR_Header.VORId;
			 	vendorOrderReceivingService.CommitReceiving(vorId).then(function (successfulResult) {
			 		debug('successfulResult');
			 		debug(successfulResult);
                	$scope.VORModel.VOR_Header.Status = successfulResult.Status__c;
            	});
            }
          $scope.VORModel.confirmDelete = function() {
            var dialog = ngDialog
                    .open({
                        template : '<div class="dialogBox"><h3>Delete Vendor Invoicing  '
                                + '</h3><hr/>'
                                + '<form >'
                                + '<span > Are you sure ? <hr/>'
                                + '<div style="text-align: right;">'
                                + '<button style="margin-right:10px;" type="button" class="btn btn-default greenBtn" ng-click="VORModel.vendorRecievingDelete()'
                                + ' && closeThisDialog()">Delete</button>'
                                + '<button style="margin-right:10px;" type="button" class="btn btn-default grayBtn" ng-click="closeThisDialog()">Cancel</button>'
                                + '</div>' + '</form>' + '</div>',
                        showClose : false,
                        scope : $scope,
                        plain : true
                    });
        };  
        
        // added By Anurag
         $scope.VORModel.vendorRecievingDelete = function() {
        
           var vorId= $scope.VORModel.VOR_Header.VORId;
            debug(vorId);
         	vendorOrderReceivingService.deleteVendorRecieving(vorId).then(function (successfulSearchResult) {
                    Notification.success("Vendor Receiving Deleted Successfully");
                    debug(successfulSearchResult);
                    window.location.href = "{!$Page.HomeSearch}";
               }, function (errorSearchResult) {
                   responseData = errorSearchResult;
                   Notification.error(errorSearchResult);
         });
         return true ;	
         };
            
        });

            


        // Page services
        vendorOrderReceivingApp.service("vendorOrderReceivingService", function ($q) {

            //Get Part popup Data
            this.getPartRecord = function (partId){
                partId = encodeString(partId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.getPartByPartId}',
                                partId,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var partRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            partRec = partRec.replace(re, '');
                            deferred.resolve(JSON.parse(partRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            // Get CO - Header
            this.getCOHeaderRec = function (coHeaderId){
                coHeaderId = encodeString(coHeaderId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.getCoHeaderById}',
                                coHeaderId,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var coHeaderRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            coHeaderRec = coHeaderRec.replace(re, '');
                            deferred.resolve(JSON.parse(coHeaderRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
        
            this.addVendor = function (vendorId, VORId) {
                vendorId = encodeString(vendorId);
                VORId = encodeString(VORId);
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.addVendor}',
                    vendorId, VORId,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var vendorId = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        vendorId = vendorId.replace(re, '');
                        deferred.resolve(vendorId); 
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
             this.getVORDetails = function (VORId, gridName,lastEditedPartId, vendorOrdersPageSortAttrsJSON, groupItemsVOGPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON) {
                VORId = encodeString(VORId);
                gridName = encodeString(gridName);
                lastEditedPartId = encodeString(lastEditedPartId);
                vendorOrdersPageSortAttrsJSON = encodeString(angular.toJson(vendorOrdersPageSortAttrsJSON));
                groupItemsVOGPageSortAttrsJSON = encodeString(angular.toJson(groupItemsVOGPageSortAttrsJSON));
                outstandingVOGPageSortAttrsJSON = encodeString(angular.toJson(outstandingVOGPageSortAttrsJSON));
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.getVORDetails}',
                     VORId, gridName,lastEditedPartId, vendorOrdersPageSortAttrsJSON, groupItemsVOGPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var vorDetails = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        vorDetails = vorDetails.replace(re, '');
                        deferred.resolve(JSON.parse(vorDetails));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            this.updateVORHeaderDetails = function (VORId, VORHeaderJSON) {
                VORId = encodeString(VORId);
                VORHeaderJSON = encodeString(angular.toJson(VORHeaderJSON));
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.updateVORHeaderDetails}',
                    VORId, VORHeaderJSON,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var vorhDetails = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        vorhDetails = vorhDetails.replace(re, '');
                        deferred.resolve(JSON.parse(vorhDetails));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            this.receiveVendorOrderItems = function (vendorOrderId, VORId, isSelected) {
                vendorOrderId = encodeString(vendorOrderId);
                VORId = encodeString(VORId);
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.receiveVendorOrderItems}',
                    vendorOrderId, VORId, isSelected,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var isSuccessful = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        isSuccessful = isSuccessful.replace(re, '');
                        deferred.resolve(isSuccessful);
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            


            // Service method to add selected group to vendor Order Receiving Items grid
            this.addToItemSubsection = function (VORId, partId, vendorId, isFromSearchToAdd, vendorOrdersPageSortAttrsJSON, groupItemsVOGPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON) {
                VORId = encodeString(VORId);
                partId = encodeString(partId);
                vendorId = encodeString(vendorId);
                vendorOrdersPageSortAttrsJSON = encodeString(angular.toJson(vendorOrdersPageSortAttrsJSON));
                groupItemsVOGPageSortAttrsJSON = encodeString(angular.toJson(groupItemsVOGPageSortAttrsJSON));
                outstandingVOGPageSortAttrsJSON = encodeString(angular.toJson(outstandingVOGPageSortAttrsJSON));
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.addToItemSubsection}',
                    VORId, partId, vendorId, isFromSearchToAdd, vendorOrdersPageSortAttrsJSON, groupItemsVOGPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON,

                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {

                        var newResult = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        newResult = newResult.replace(re, '');
                        deferred.resolve(JSON.parse(newResult));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            //Bulk Remove function
            this.removeAllItemsFromItemSubSection = function(vorId, vendorOrdersPageSortAttrsJSON, groupItemsPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON){
                vorId = encodeString(vorId);
                vendorOrdersPageSortAttrsJSON = encodeString(angular.toJson(vendorOrdersPageSortAttrsJSON));
                groupItemsPageSortAttrsJSON = encodeString(angular.toJson(groupItemsPageSortAttrsJSON));
                outstandingVOGPageSortAttrsJSON = encodeString(angular.toJson(outstandingVOGPageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.removeAllItemsFromItemSubSection}',
                    vorId,vendorOrdersPageSortAttrsJSON, groupItemsPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON,

                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {

                        var newResult = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');


                        newResult = newResult.replace(re, '');
                        deferred.resolve(JSON.parse(newResult));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            this.removeItem = function (vorId,vrGroupId, vendorOrdersPageSortAttrsJSON, groupItemsPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON){
                vorId = encodeString(vorId);
                vrGroupId = encodeString(vrGroupId);
                vendorOrdersPageSortAttrsJSON = encodeString(angular.toJson(vendorOrdersPageSortAttrsJSON));
                groupItemsPageSortAttrsJSON = encodeString(angular.toJson(groupItemsPageSortAttrsJSON));
                outstandingVOGPageSortAttrsJSON = encodeString(angular.toJson(outstandingVOGPageSortAttrsJSON));    
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.removeItem}',
                    vorId , vrGroupId ,vendorOrdersPageSortAttrsJSON, groupItemsPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON,

                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {

                        var newResult = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        newResult = newResult.replace(re, '');
                        deferred.resolve(JSON.parse(newResult));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
                    
            
            }
            // Update Recieving Group Records
            this.updateItemsSection =function(vorId,  partId,  vrGroupId,  qty,  cost, vendorOrdersPageSortAttrsJSON, 
                                        groupItemsPageSortAttrsJSON,  outstandingVOGPageSortAttrsJSON){
            
                    vorId = encodeString(vorId);
                    partId = encodeString(partId);
                    vrGroupId = encodeString(vrGroupId);
                    vendorOrdersPageSortAttrsJSON = encodeString(angular.toJson(vendorOrdersPageSortAttrsJSON));
                    groupItemsPageSortAttrsJSON = encodeString(angular.toJson(groupItemsPageSortAttrsJSON));
                    outstandingVOGPageSortAttrsJSON = encodeString(angular.toJson(outstandingVOGPageSortAttrsJSON));
                    var deferred = $q.defer();
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.VendorOrderReceivingCtrl.updateItemsSection}',
                            vorId,  partId,  vrGroupId,  qty,  cost,vendorOrdersPageSortAttrsJSON, 
                            groupItemsPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON,
                            function (result, event) {
                            if (event.type == 'exception') {
                                deferred.reject(event.message);
                            } else {
        
                                var newResult = decodeString(result);
                                var find = '\'';
                                var re = new RegExp(find, 'g');
                                newResult = newResult.replace(re, '');
                                deferred.resolve(JSON.parse(newResult));
                            }
                        }, {
                            escape : true
                        });
                        return deferred.promise;
            }
            
            //receive all items
            
            
			this.addAllLineItemsToItemSubsection = function(vorId, vohId , vogId , vendorOrdersPageSortAttrsJSON,  groupItemsPageSortAttrsJSON,  outstandingVOGPageSortAttrsJSON){
									vorId = encodeString(vorId);
									vohId = encodeString(vohId);
									vogId = encodeString(vogId);
									vendorOrdersPageSortAttrsJSON = encodeString(angular.toJson(vendorOrdersPageSortAttrsJSON));
									groupItemsPageSortAttrsJSON = encodeString(angular.toJson(groupItemsPageSortAttrsJSON));
									outstandingVOGPageSortAttrsJSON = encodeString(angular.toJson(outstandingVOGPageSortAttrsJSON));
									    var deferred = $q.defer();
                                    Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.VendorOrderReceivingCtrl.addAllLineItemsToItemSubsection}',
                                        vorId , vohId , vogId,vendorOrdersPageSortAttrsJSON, 
                                        groupItemsPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON,
                                        function (result, event) {
                                        if (event.type == 'exception') {
                                            deferred.reject(event.message);
                                        } else {
                    
                                            var newResult = decodeString(result);
                                            var find = '\'';
                                            var re = new RegExp(find, 'g');
                                            newResult = newResult.replace(re, '');
                                            deferred.resolve(JSON.parse(newResult));
                                        }
                                    }, {
                                        escape : true
                                    });
                                    return deferred.promise;
			
			}
            
            // Update Line Item 
            this.updateLineItemsOfItemsSection=function( vorId, partId,vrGroupId, groupJSONString,  vendorOrdersPageSortAttrsJSON,
                                  groupItemsPageSortAttrsJSON,  outstandingVOGPageSortAttrsJSON){
                                 debug( groupJSONString);
                                 vorId = encodeString(vorId);
                                 partId = encodeString(partId);
                                 vrGroupId = encodeString(vrGroupId);
                                 groupJSONString = encodeString(angular.toJson(groupJSONString));
                                 vendorOrdersPageSortAttrsJSON = encodeString(angular.toJson(vendorOrdersPageSortAttrsJSON));
                                 groupItemsPageSortAttrsJSON = encodeString(angular.toJson(groupItemsPageSortAttrsJSON));
                                 outstandingVOGPageSortAttrsJSON = encodeString(angular.toJson(outstandingVOGPageSortAttrsJSON));
                                var deferred = $q.defer();
                                    Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.VendorOrderReceivingCtrl.updateLineItemsOfItemsSection}',
                                        vorId , partId ,  vrGroupId,  groupJSONString ,vendorOrdersPageSortAttrsJSON, 
                                        groupItemsPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON,
                                        function (result, event) {
                                        if (event.type == 'exception') {
                                            deferred.reject(event.message);
                                        } else {
                    
                                            var newResult = decodeString(result);
                                            var find = '\'';
                                            var re = new RegExp(find, 'g');
                                            newResult = newResult.replace(re, '');
                                            deferred.resolve(JSON.parse(newResult));
                                        }
                                    }, {
                                        escape : true
                                    });
                                    return deferred.promise;
                    
                                 
                                 
                                 }
							//Pop excess
							this.getGroupRecDetail =function(vrGroupId){
									vrGroupId = encodeString(vrGroupId);
									var deferred = $q.defer();
		                                    Visualforce.remoting.Manager.invokeAction(
		                                        '{!$RemoteAction.VendorOrderReceivingCtrl.getGroupRecDetail}',
		                                      	 vrGroupId,
		                                      	  function (result, event) {
		                                        if (event.type == 'exception') {
		                                            deferred.reject(event.message);
		                                        } else {
		                    
		                                            var newResult = decodeString(result);
		                                            var find = '\'';
		                                            var re = new RegExp(find, 'g');
		                                            newResult = newResult.replace(re, '');
		                                            deferred.resolve(JSON.parse(newResult));
		                                        }
		                                    }, {
		                                        escape : true
		                                    });  
		                                    return deferred.promise;                            
		                }


				// Create Stock EXcess Line Items
                this.addToItemSubsectionAfterConfimation =function(vorId, partId,vendorId,isStockExcessGenerated,isFoundPartInOtherVOHeader,vendorOrdersPageSortAttrsJSON, 
                                                        groupItemsPageSortAttrsJSON,outstandingVOGPageSortAttrsJSON) {
                                vorId = encodeString(vorId);
                                partId = encodeString(partId);
                                vendorOrdersPageSortAttrsJSON = encodeString(angular.toJson(vendorOrdersPageSortAttrsJSON));
                                groupItemsPageSortAttrsJSON = encodeString(angular.toJson(groupItemsPageSortAttrsJSON));
                                outstandingVOGPageSortAttrsJSON = encodeString(angular.toJson(outstandingVOGPageSortAttrsJSON));
                                var deferred = $q.defer();
                                    Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.VendorOrderReceivingCtrl.addToItemSubsectionAfterConfimation}',
                                        vorId, partId,isStockExcessGenerated,vendorOrdersPageSortAttrsJSON, 
                                       groupItemsPageSortAttrsJSON, outstandingVOGPageSortAttrsJSON,
                                        function (result, event) {
                                        if (event.type == 'exception') {
                                            deferred.reject(event.message);
                                        } else {
                    
                                            var newResult = decodeString(result);
                                            var find = '\'';
                                            var re = new RegExp(find, 'g');
                                            newResult = newResult.replace(re, '');
                                            deferred.resolve(JSON.parse(newResult));
                                        }
                                    }, {
                                        escape : true
                                    });
                                    return deferred.promise;                            
                                                        
                }
                
                // popUp 
                
                
        	// Commit Receiving Action
            this.CommitReceiving = function(vorId){
                vorId = encodeString(vorId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderReceivingCtrl.commitRecevingAction}',
                    		vorId,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var newResult = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        newResult = newResult.replace(re, '');
                        deferred.resolve(JSON.parse(newResult));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            
            this.deleteVendorRecieving = function (vorId){
	             vorId = encodeString(vorId);
	             var deferred = $q.defer();
	             Visualforce.remoting.Manager.invokeAction(
	                 '{!$RemoteAction.VendorOrderReceivingCtrl.deleteVendorOrderRecieving}', vorId,
	                 function (result, event) {
	                     if (event.type == 'exception') {
	                         deferred.reject(event.message);
	                     } else {
	                         var vrHeaderRec = decodeString(result);
	                         deferred.resolve(vrHeaderRec);
	                     }
	                 }, {
	                     escape : true
	             });
	             return deferred.promise;
	         }
	    
                
        });
    </script>
    
    <body ng-controller="vendorOrderReceivingController" ng-init="VORModel.loadVendor()" ng-cloak="ng-cloak">
        
        <!-- Header start -->
        <c:BPGlobalHeader />
        <!-- Header End -->
        
        <!-- START: Page Content -->
        <div class="row" id="VOR_sidebar_div2">
            
            <!-- START: Side panel start -->   
            <div class="col-lg-3 col-md-3 col-sm-3 sidepanel" id="workflow-sidepanel">
                <div class="row" id="VOR_workflow_sidepanel_div1">
                    <div class="customerSelector" ng-if="VORModel.VOR_Header.VendorName == null || VORModel.VOR_Header.VendorName.length == 0" id="VOR_workflow_sidepanel_div2">
                        <div id="VOR_workflow_sidepanel_div3">
                            <div class="customerImage" id="VOR_workflow_sidepanel_div4">
                            </div>
                            <div class="add-new" id="VOR_workflow_sidepanel_div5">
                                <span  style="font-style: italic;" id="VOR_workflow_sidepanel_span_no_customer">No Vendor</span>
                                <div id="VOR_workflow_sidepanel_div6">
                                    <img src="{!URLFOR($Resource.icon_images, 'images/hashimg1.png')}" style="height:32px; width:20px;" id="VOR_workflow_sidepanel_vendor_image"/>
                                    <a href="" ng-click="VORModel.RelatedList_addAction($event, 'Vendor')" id="VOR_workflow_sidepanel_add_vendor_link">Add One!</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="selectedUserBox" ng-if="VORModel.VOR_Header.VendorName != null && VORModel.VOR_Header.VendorName.length != 0" id="VOR_workflow_sidepanel_div8">
                        <div class="customerImage" id="VOR_workflow_sidepanel_div9">
                            <img src="{!URLFOR($Resource.UserImage, 'profile-pic.jpg')}" style="height:32px; width:32px;" id="VOR_workflow_sidepanel_user_image"/>
                        </div>
                        <div class="userinfo" id="VOR_workflow_sidepanel_div10">
                            <a href="" id="VOR_workflow_sidepanel_cust_name_link">{{VORModel.VOR_Header.VendorName}} 
                            </a>
                        </div>
                        <div class="customerImage" id="VOR_workflow_sidepanel_div11">
                            <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" id="VOR_workflow_sidepanel_user_image_link"/>
                        </div>
                    </div>
                </div>
                <div class="row" id="VOR_workflow_sidepanel_div12">
                    <div class="selectedUserBox" id="VOR_workflow_sidepanel_div13">
                        <div class="customerImage" id="VOR_workflow_sidepanel_div14">
                            <img src="{!URLFOR($Resource.UserImage, 'profile-pic.jpg')}" style="height:32px; width:32px;" id="VOR_workflow_sidepanel_user_img"/>
                        </div>
                        <div class="userinfo" id="VOR_workflow_sidepanel_div15">
                            <a href="" id="VOR_workflow_sidepanel_user_name_link">{!$User.FirstName} {!$User.LastName}</a>
                        </div>
                        <div class="customerImage" id="VOR_workflow_sidepanel_cust_image_div">
                            <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" id="VOR_workflow_sidepanel_cust_image1"/>
                        </div>
                    </div>
                </div>
                <div class="row " style="margin-top:10px;" id="VOR_workflow_sidepanel_info_div1" >
                    <div class="status_Info" id="VOR_workflow_sidepanel_info_div1_div1">
                        <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" id="VOR_workflow_sidepanel_cust_image1"/>
                        <span style="text-transform: uppercase">  <strong id="VOR_workflow_sidepanel_info_div1_p_1">{{VORModel.VOR_Header.Status}}</strong></span>
                    </div>
                </div >
                <br/>
                <div class="row sections-link" id="workflow-actions" >
                    <div class="heading" id="VOR_workflow_workflow_actions_div1">
                        <a href="#VOR_Info_Block" rel="#VOR_Info_Block" id="VOR_workflow_workflow_actions_link1" ng-click="VORModel.setHighlightedSection = 'Info'">
                            <span id="VOR_workflow_workflow_actions_span1_1" ng-class="{'color-orange' : VORModel.setHighlightedSection == 'Info'}">
                            {{VORModel.LeftSideHeadingLables.Info}} &nbsp; Info </span>
                        </a>    
                    </div>
                    <div class="sub-heading" id="VOR_workflow_workflow_actions_div2">
                        <a href="#VOR_General_Block" rel="#VOR_General_Block" id="VOR_workflow_workflow_actions_link2" ng-click="VORModel.setHighlightedSection = 'General'">
                            <span class="link" id="VOR_workflow_workflow_actions_span2_1" ng-class="{'color-orange' : VORModel.setHighlightedSection == 'General'}"><strong id="VOR_workflow_workflow_actions_p2"></strong> {{VORModel.LeftSideHeadingLables.I_General}}&nbsp; General</span>
                        </a>
                        <!-- <span class="icons" id="VOR_workflow_workflow_actions_span2_1">
                            <i class="fa fa-circle online" id="VOR_workflow_workflow_actions_p3"></i>
                        </span> -->
                    </div>
                    <div class="sub-heading" id="VOR_workflow_workflow_actions_div3">
                        <a href="#VOR_Vendor_Order_Receiving_Block" rel="#VOR_Vendor_Order_Receiving_Block" id="VOR_workflow_workflow_actions_link3" ng-click="VORModel.setHighlightedSection = 'VOR Receivinig'">
                            <span class="link" id="VOR_workflow_workflow_actions_span3_1" ng-class="{'color-orange' : VORModel.setHighlightedSection == 'VOR Receivinig'}"><strong id="VOR_workflow_workflow_actions_p3"></strong> {{VORModel.LeftSideHeadingLables.I_Receiving_For_Vendor}} &nbsp; Receiving For vendor Order</span>
                        </a>
                        <!-- <span class="icons" id="VOR_workflow_workflow_actions_span3_1">
                            <i class="fa fa-circle online" id="VOR_workflow_workflow_actions_p5"></i>
                        </span> -->
                    </div>
                    
                    <div class="heading" id="VOR_workflow_workflow_actions_div4">
                        <a href="#VOR_Vendor_Received_Block" rel="#VOR_Vendor_Received_Block" id="VOR_workflow_workflow_actions_link6" ng-click="VORModel.setHighlightedSection = 'Received'">
                            <span id="VOR_workflow_workflow_actions_span4_1" ng-class="{'color-orange' : VORModel.setHighlightedSection == 'Received'}">{{VORModel.LeftSideHeadingLables.Received}}  &nbsp; Received </span>
                        </a>    
                    </div>
                    <div class="sub-heading" id="VOR_workflow_workflow_actions_div5">
                        <a href="#VOR_Items_Block" rel="#VOR_Items_Block" id="VOR_workflow_workflow_actions_link7" ng-click="VORModel.setHighlightedSection = 'Items'">
                            <span class="link" id="VOR_workflow_workflow_actions_span5_1" ng-class="{'color-orange' : VORModel.setHighlightedSection == 'Items'}"><strong id="VOR_workflow_workflow_actions_p4"></strong> {{VORModel.LeftSideHeadingLables.R_Items}} &nbsp; Items</span>
                        </a>
                        <!-- <span class="icons" id="VOR_workflow_workflow_actions_span5_1">
                            <i class="fa fa-circle online" id="VOR_workflow_workflow_actions_p4"></i>
                        </span> -->
                    </div>

                    <div class="sub-heading" id="VOR_workflow_workflow_actions_div7" 
                    	ng-show="VORModel.VOR_Header.VendorId != null && VORModel.totalOutstandingItems != 0 && VORModel.VOR_Header.Status == 'In Progress'">
                        <a href="#VOR_Outstanding_Items_Block" rel="#VOR_Outstanding_Items_Block" id="VOR_workflow_workflow_actions_link8" ng-click="VORModel.setHighlightedSection = 'Outstanding'">
                            <span class="link" id="VOR_workflow_workflow_actions_span8" ng-class="{'color-orange' : VORModel.setHighlightedSection == 'Outstanding'}"><strong id="VOR_workflow_workflow_actions_p8"></strong>  
                              {{VORModel.LeftSideHeadingLables.R_Outstanding}}  &nbsp; Outstanding Items for  {{VORModel.SelectedVendorOrdersList[0]}}
                            </span>
                        </a>
                        <!-- <span class="icons" id="VOR_workflow_workflow_actions_span6_1">
                            <i class="fa fa-circle offline" id="VOR_workflow_workflow_actions_p3_1"></i>
                        </span> -->
                    </div>
                    
                    <div class="heading" id="VOR_workflow_workflow_actions_div{{8 + VORModel.SelectedVendorOrdersList.length}}" 
                    	ng-show="VORModel.VOR_Header.VendorId != null &&  VORModel.VORLineItemGroupList.length != 0  && VORModel.VOR_Header.Status == 'In Progress'">
                        <a href="#VOR_Finalize_Block" rel="#VOR_Finalize_Block" id="VOR_workflow_workflow_actions_link{{9 + VORModel.SelectedVendorOrdersList.length}}" ng-click="VORModel.setHighlightedSection = 'Finalize'">
                            <span id="VOR_workflow_workflow_actions_span{{8 + VORModel.SelectedVendorOrdersList.length}}_1" ng-class="{'color-orange' : VORModel.setHighlightedSection == 'Finalize'}">{{VORModel.LeftSideHeadingLables.Finalize}}&nbsp; Finalize </span>
                        </a>    
                    </div>
                    <div class="heading" id="VOR_workflow_workflow_actions_div{{8 + VORModel.SelectedVendorOrdersList.length}}" ng-show="VORModel.VOR_Header.VendorId != null && (VORModel.VOR_Header.Status == 'Stocked' || VORModel.VOR_Header.Status == 'Invoiced')">
                        <a href="#VOR_Finalize_Block" rel="#VOR_Finalize_Block" id="VOR_workflow_workflow_actions_link{{9 + VORModel.SelectedVendorOrdersList.length}}" ng-click="VORModel.setHighlightedSection = 'Finalize'">
                            <span id="VOR_workflow_workflow_actions_span{{8 + VORModel.SelectedVendorOrdersList.length}}_1" ng-class="{'color-orange' : VORModel.setHighlightedSection == 'Finalize'}">{{VORModel.LeftSideHeadingLables.Invoice_History}} &nbsp; Invoice History  </span>
                        </a>    
                    </div>
                </div>
                <div class="left-panel-price" id="VOR_left-panel-price">
                    <div class="row total_price" id="VOR_left-panel-price_total_price">
                        <div class="col-lg-5 col-md-5 form-label" id="VOR_left-panel-price_total_price_form-label" style="margin-top: 3%;">
                            <strong style="text-transform: uppercase">Received</strong>
                        </div>
                        <div class="col-lg-4 col-md-4 price" id="VOR_left-panel-price_total_price_price" style="font-size: 21px;">
                            <span id="VOR_left-panel-price_total_price_price_span" style="text-decoration: underline;">
                            	${{VORModel.GroupTotalCost}}
                            </span>
                        </div>
                        <div class="col-lg-3 col-md-3">
                            &nbsp;
                        </div>
                    </div>
                </div>
                
            </div> 
            <!-- END: Left Side Bar -->
            
            <!-- START: Center Panel -->
            <div class="col-lg-9 col-md-9 col-sm-9 topPadding" style="position: absolute; top: 30px; right: 0;">
                <div class="row sub-search-row" id="fixed-seacrh-row">
                    <div class="col-lg-3 col-md-3 order-number" id="VOR_fixed-seacrh-row_order-number">
                        <span id="VOR_fixed-seacrh-row_order-number_span" ng-show="VORModel.VOR_Header.VORName != null && VORModel.VOR_Header.VORName != ''">
                            {{VORModel.VOR_Header.VORName}}
                        </span>
                        <span id="VOR_fixed-seacrh-row_order-number_span" ng-show="VORModel.VOR_Header.PackagingSlipNumber == null || VORModel.VOR_Header.PackagingSlipNumber == ''"></span>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 sub-search" id="VOR_fixed-seacrh-row_sub-search">
                        <div id="VOR_fixed-seacrh-row_sub-search_padded-row" class="padded-row" style="width:100%">
                            <c:AutoSuggestVendorOrder />
                        </div>
                    </div>
                    <div class="new-div" id="VOR_fixed-seacrh-row_sub-search_new-div">
                        <a href="">New</a>
                    </div>
                    <div class="icons-div pull-right" id="VOR_fixed-seacrh-row_sub-search_icons-div">
                        <div>
                            <a id="VOR_fixed-seacrh-row_sub-search_icons-div_a" href=""><i class="fa fa-floppy-o"></i></a>
                        </div>
                        <div>
                            <a aria-expanded="false" class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" ng-if = "VORModel.totalGroupItems == 0 && VORModel.totalOutstandingItems == 0">
                            <span class="fa fa-cog"></span>
                            </a>
                           
                            <ul id="VOR_fixed-seacrh-row_sub-search_icons-div_link_dropdown" class="link_dropdown dropdown-menu" role="menu" >
                                <li><a href="" ng-click = "VORModel.confirmDelete()">Delete Vendor Receiving</a></li>
                            </ul>
                             <a aria-expanded="false"  role="button" ng-if = "!(VORModel.totalGroupItems == 0 && VORModel.totalOutstandingItems == 0)">
                            <span class="fa fa-cog"></span>
                            </a>
                        </div>
                    </div>
                </div>
                
                <div class="row dynamic_heading heading_panel backgroundOrange" id="sticky-heading">
                    <div class="row" style="height: 30px; background-color: white"> </div>
                    <div class="left_heading col-lg-12 col-md-12" id="VOR_dynamic_heading_panel_left_heading">
                        <h1 id="VOR_dynamic_heading_panel_left_heading_h1">
                            <span class="heading_icon handCursor" ng-click="VORModel.hidePanel($event, 'VOR_Info_Block')">
                                <i class="fa fa-chevron-circle-right"></i>
                            </span>
                            <p class="header_icon_text"> A Info</p>
                        </h1>
                    </div>
                </div>
                
                <!-- scrollable content  --> 
                <div class="row content" id="VOR_Info_Block">
                    <!-- START: General Section -->
                    <div class="row VO-form" id="VOR_General_Block">
                        <div class="row heading_panel_secondary">
                            <div class="left_heading_secondary">
                                <h1 >General </h1>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-lg-8 col-md-8">
                                <!-- START: Vendor selection section -->
                                <div class="row general_section_row">
                                    <div class="col-lg-4 col-md-4 form-label Info_section_left_div required" id="VOR_info_form-label_VENDOR">
                                        <strong class="req-label">VENDOR</strong>
                                        <i class="fa fa-question-circle gray" data-toggle="tooltip" title="Vendor"></i>
                                    </div>
                                    <div class="customerSelector" id="VOR_info_customerSelector" ng-if="VORModel.VOR_Header.VendorName == null || VORModel.VOR_Header.VendorName.length == 0">
                                        <div>
                                            <div class="customerImage" id="customer-order-info_customerSelector_customerImage">
                                            </div>
                                            <div class="add-new" id="customer-order-info_customerSelector_customerImage_add-new">
                                                <span id="customer-order-info_customerSelector_customerImage_add-new_span"  style="font-style: italic;">No Vendor</span>
                                                <div>
                                                    <img src="{!URLFOR($Resource.icon_images, 'images/hashimg1.png')}" style="height:32px; width:20px;" />
                                                    <a  id="customer-order-info_customerSelector_customerImage_add-new_addone" href=""
                                                        ng-click="VORModel.RelatedList_addAction($event, 'Vendor')">Add One!</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="selectedUserBox" id="customer-order-info_selectedUserBox" ng-if="VORModel.VOR_Header.VendorName != null && VORModel.VOR_Header.VendorName.length != 0">
                                        <div class="customerImage" id="customer-order-info_selectedUserBox_customerImage">
                                            <img src="{!URLFOR($Resource.UserImage, 'profile-pic.jpg')}" style="height:32px; width:32px;" />
                                        </div>
                                        <div class="userinfo" id="customer-order-info_selectedUserBox_userinfo">
                                            <a href="">{{VORModel.VOR_Header.VendorName}}</a>
                                        </div>
                                        <div id="customer-order-info_selectedUserBox_customerImage" class="customerImage">
                                            <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" />
                                        </div>
                                    </div>
                                </div>
                                <!-- END: Vendor selection section -->
                                
                                <!-- START: Owner selection section -->
                                <div class="row general_section_row">
                                    <div class="col-lg-4 col-md-4 form-label Info_section_left_div" id="VOR_info_form-label_OWNER">
                                        <strong>OWNER</strong>
                                        <i class="fa fa-question-circle gray" data-toggle="tooltip" title="Owner"></i>
                                    </div>
                                    <div class="selectedUserBox" id="VOR_info_form-label_OWNER_selectedUserBox">
                                        <div class="customerImage" id="VOR_info_form-label_OWNER_selectedUserBox_customerImage">
                                            <img src="{!URLFOR($Resource.UserImage, 'profile-pic.jpg')}" style="height:32px; width:32px;" />
                                        </div>
                                        <div id="VOR_info_form-label_OWNER_selectedUserBox_userinfo" class="userinfo">
                                            <a href="">{!$User.FirstName} {!$User.LastName}</a>
                                        </div>
                                        <div id="VOR_info_form-label_OWNER_selectedUserBox_customerImage"  class="customerImage">
                                            <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" />
                                        </div>
                                    </div>
                                </div>
                                <!-- END: Owner selection section -->
                                
                                <!-- START: STATUS -->
                                <div class="row general_section_row">
                                    <div class="col-lg-4 col-md-4 form-label Info_section_left_div" id="VOR_info_form-label_STATUS">
                                        <strong>STATUS</strong>
                                        <i class="fa fa-question-circle gray" data-toggle="tooltip" title="Status"></i>
                                    </div>
                                    <div class="status_Info" id="VOR_info_form-label_STATUS_selection">
                                        <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" id="VOR_info_form-label_STATUS_selectedUserBox_customerImage"/>
                                        <span style="text-transform: uppercase">
                                            <strong id="VOR_info_form-label_STATUS_info">{{VORModel.VOR_Header.Status}}</strong>
                                        </span>
                                    </div>
                                </div>
                                <!-- END: STATUS -->
                                
                                <!-- START: Packing Slip # -->
                                <div class="row general_section_row">
                                    <div class="col-lg-4 col-md-4 form-label Info_section_left_div required" id="VOR_info_form-label_PACKING_SLIP">
                                        <strong class="req-label">PACKING SLIP#</strong>
                                        <i class="fa fa-question-circle gray" data-toggle="tooltip" title="{!$ObjectType.Vendor_Receiving_Header__c.fields.Packing_Slip_Number__c.label}"></i>
                                    </div>
                                    <div id="VOR_info_form-label_PACKING_SLIP_selection">
                                        <input type="text" class="form-control" id="packingSlipNumber" placeholder="{!$ObjectType.Vendor_Receiving_Header__c.fields.Packing_Slip_Number__c.label}"
                                                maxlength="255" ng-model="VORModel.VOR_Header.PackagingSlipNumber" rel="PackingSlipNumberId"
                                                ng-class="{'redborder' : VORModel.VendorOrderReceivingFormValidationModal['PackagingSlipNumber']['isError'] == true}" 
                                                data-toggle="tooltip" title="{{VORModel.VOR_Header['PackagingSlipNumber']['ErrorMessage']}}"
                                                style="width: 38%;" ng-disabled="VORModel.VOR_Header.Status == 'Stocked'"
                                                ng-blur="VORModel.updateVORHeaderDetails()"/>
                                    </div>
                                </div>
                                <!-- END: Packing Slip # -->
                                
                                <!-- START: Receiving From Invoice -->
                                <div class="row general_section_row">
                                    <div class="col-lg-4 col-md-4 form-label Info_section_left_div" id="VOR_info_form-label_RECEIVING_FROM_INVOICE" >
                                        <div class="col-lg-9 col-md-9" style="padding-right: 0px;"><strong>Receiving From Invoice?</strong></div>
                                        <i class="fa fa-question-circle gray" data-toggle="tooltip" title="Receiving From Invoice?" style="padding-top: 10px;"></i>
                                    </div>
                                    <div id="VOR_info_form-label_RECEIVING_FROM_INVOICE_selection">
                                        <div style="margin-top: 0px;" class="required">
                                            <strong style="padding-left: 45px;" class="req-label">Total</strong>
                                        </div>
                                        <div style="margin-top: -15px;">
                                            <div class="form-group small" >
                                                <label class="checkbox">
                                                    <span class="chk_tick" ng-class="{'chked' : VORModel.VOR_Header.IsReceivingFromInvoice == true}" 
                                                                            ng-click="VORModel.onClickReceivingFromInvoice($event);">
                                                        <i class="fa fa-check-square chksqure" ></i>
                                                    </span>
                                                </label>
                                            </div>
                                            
                                                 <input id="receivingFromInvoiceTotal" type="text" rel="SLIP" class="form-control halfWidth"
                                                 ng-attr-tabindex="{{tabIndex}}"
                                                 ng-disabled="VORModel.VOR_Header.IsReceivingFromInvoice && VORModel.VOR_Header.Status != 'Stocked'" placeholder="Total" 
                                                 ng-model="VORModel.VOR_Header.ReceivingFromInvoiceTotal" ng-blur="VORModel.updateVORHeaderDetails()"
                                                 ng-class="{redborder : VORModel.VendorOrderReceivingFormValidationModal[ReceivingFromInvoiceTotal][isError] == true}" 
                                                 data-toggle="tooltip"
                                               	 title="{{VORModel.VendorOrderReceivingFormValidationModal[ReceivingFromInvoiceTotal][ErrorMessage]}}"/>
                                                               
																
                                        </div>
                                    </div>
                                </div>
                                <!-- END: Receiving From Invoice -->
                            </div>
                            <div class="col-lg-4 col-md-4">
                                <!-- Calender -->
                            </div>
                        </div>
                    </div>
                    <!-- END: General Section -->
                    
                    <!-- START: RECEIVING FOR VENDOR ORDER SECTION -->
                    <div class="VOR_outer_block VO-form" id="VOR_Vendor_Order_Receiving_Block"
                         ng-show="VORModel.VOR_Header.VendorId != null">
                        <div class="row heading_panel_secondary" >
                            <div class="left_heading_secondary pull-left" >
                                <h1 >Receiving For Vendor Order</h1>
                            </div>
                            <div class="right_sub pull-right" id="VOR_Vendor_Received_Block_heading_panel_right_sub">
								<div class="dropdown" id="VOR_header_dropdown_div_bulkremove" style="float: left; margin: 5px;">
                                    <a aria-expanded="false" class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" 
                                       style="padding-top: 10px; padding-bottom: 10px;" id="VOR_header_dropdown_link">
                                        <span class="fa fa-cog  Orange Customtool" style="font-size:20px;"  id="VOR_header_dropdown_span"></span>
                                    </a>
                                    <ul class="link_dropdown dropdown-menu" role="menu" id="VOR_header_dropdown_ul" style="margin-left:-160px">
                                        
                                    </ul>
                                </div>
								
								<i class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>
                            </div>
                        </div>
                        
                        <div class="gid_container" id="VOR_Vendor_Received_Block_grid_container_Empty_Div" 
                            ng-show="VORModel.vendorOrdersList.length == 0">
                            No records found
                        </div>
                        
                        <!-- START: Grid -->
                        <div id="1" ng-show="VORModel.vendorOrdersList.length != 0">
                            <div class="general_section_row gid_container">
                                <table class="table" id="ReceivingForVendorOrders_Grid">
                                    <col width="5%"  />
                                    <col width="23%" />
                                    <col width="18%" />
                                    <col width="18%" />
                                    <col width="18%" />
                                    <col width="18%" />
                                    
                                    <tr  class="tableHeader">
                                        <th>
                                            <div class="form-group small" >
                                                <label class="checkbox">
                                                    <span class="chk_tick" ng-class="{'chked' : VORModel.isAllVOSelected == true, 'disabled_chk_tick' : VORModel.isAllVOSelected == null}" 
                                                                            ng-click="VORModel.onClickSelectAllVO($event);"
                                                                            style="margin-top: -15px; height: 30px; width: 30px;">
                                                        <i class="fa fa-check-square chksqure" style="font-size: 40px;"></i>
                                                    </span>
                                                </label>
                                            </div>
                                        </th>
                                        <th style="cursor: pointer;" ng-click="VORModel.ReceivingForVO_PageSortControlsAction();">
                                            <i class="fa fa-sort-asc" ng-show="VORModel.vendorOrdersPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                            <i class="fa fa-sort-desc" ng-show="VORModel.vendorOrdersPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                            <i class="fa fa-sort" ng-show="VORModel.vendorOrdersPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                            ORDER #
                                        </th>

                                        <th>QTY UNRECEIVED</th>
                                        <th>% RECEIVED</th>
                                        <th>ORDER TYPE</th>
                                        <th>EXPECTED DATE</th>
                                    </tr>
                                    <tbody ng-repeat="vendorOrder in VORModel.vendorOrdersList" >
                                        <!-- START: Vendor Orders list -->
                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="VOR_Vendor_Received_row{{$index}}_edit"  
                                            ng-click="VORModel.editVendorOrderReceivedItem($event, $index)"
                                            ng-blur = "VORModel.editVendorOrderReceivedItem($event, $index)">
                                            <td id="VOR_Vendor_Received_block_grid_container_tbody_tr_td_1_{{$index}}" class="vor_exapnded_tr">
                                                <div class="form-group small" >
                                                    <label class="checkbox">
                                                        <span class="chk_tick" ng-class="{'chked' : vendorOrder.InProgressVRId != null && vendorOrder.InProgressVRId == VORModel.VOR_Header.VORId, 'disabled_chk_tick' : vendorOrder.InProgressVRId != null && vendorOrder.InProgressVRId != VORModel.VOR_Header.VORId}" 
                                                                                ng-click="VORModel.onClickSelectVO($event, $index, vendorOrder.Id);"
                                                                                style="margin-top: -15px; height: 30px; width: 30px;">
                                                            <i class="fa fa-check-square chksqure" style="font-size: 40px;"></i>
                                                        </span>
                                                    </label>
                                                </div>
                                            </td>
                                            <td  id="VOR_Vendor_Received_block_grid_container_tbody_tr_td_2_{{$index}}" >
                                                <div>{{vendorOrder.VOName}}</div>
                                                <div ng-if="vendorOrder.InProgressVRId != null && vendorOrder.InProgressVRId != VORModel.VOR_Header.VORId" style="color:red">Receiving in progress {{vendorOrder.InProgressVR}}</div>
                                                
                                            </td>
                                            <td  id="VOR_Vendor_Received_block_grid_container_tbody_tr_td_3_{{$index}}" >
                                                {{vendorOrder.QtyUnreceived}}
                                            </td>
                                            <td  id="VOR_Vendor_Received_block_grid_container_tbody_tr_td_4_{{$index}}" >

                                                {{vendorOrder.PercentRecieved | number : 2}}%
                                            </td>
                                            <td  id="VOR_Vendor_Received_block_grid_container_tbody_tr_td_5_{{$index}}" >
                                                {{vendorOrder.OrderType.Name}} 
                                            </td>
                                            <td  id="VOR_Vendor_Received_block_grid_container_tbody_tr_td_6_{{$index}}" >
                                                {{vendorOrder.ExpectedDate}} 
                                            </td>
                                        </tr>
                                        <!-- END: Vendor Orders list -->
                                        
                                        <!-- START: Edit row action -->
                                        <tr ng-show="VORModel.vendorOrderItems_editRow[$index].isEdit"
                                            class="edit_panel sample-show-hide" id="vo_record_row{{$index}}_edit">
                                            <td colspan="9" id="VOR_Vendor_Received_block_grid_container_tbody_expandtr_td_1_{{$index}}">
                                                <div id="vo_tbody_expandtr_edit_box_{{$index}}" class="edit_box col-lg-9 col-md-9" >
                                                    <div class="its-heading" id="VOR_Vendor_Received_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
                                                        <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" styleClass="img_action"/>
                                                        <span>Actions (1 Action Available)</span>
                                                    </div>
                                                    <div id=" vo_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}} " class="edit-body">
                                                        <form>
                                                            <div class="radio" id="vo_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
                                                                <label>
                                                                <input type="radio" name="optionsRadios" id="optionsRadios1" value="1"  
                                                                    ng-model= "VORModel.vendorOrderItems_editRow[$index].radioValue"/>
                                                                <span>Receive All</span>
                                                                </label>
                                                            </div>
                                                            <a href="" id="vo_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" class="btn btn-default editform_btn" role="button"
                                                                ng-click="VORModel.vendorOrderItems_GoAction($index, null)" >Go</a>                                
                                                        </form>
                                                    </div>
                                                    <a href="" class="faq_link">
                                                    <i class="fa fa-question-circle qmark"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                        <!-- END: Edit row action -->
                                        
                                        <!-- START: Vendor Order Groups list on edit of Vendor Order -->
                                        <tr ng-show="VORModel.vendorOrderItems_editRow[$index].isEdit">
                                            <td colspan="9" class="group_exapnded_tr">
                                                <div ng-repeat="voGroupItem in vendorOrder.VOLIGroups " class="volineItem_row_clickable"
                                                     ng-click="VORModel.editvoGroupItem($event, $parent.$index, $index)">
                                                    <div class="row_line_item_div ">
                                                        <div class="firstchild" style="margin-left: 4%; width: 25%;">{{voGroupItem.ItemDesc}}
                                                        <div ng-if="voGroupItem.UnitType !='NULL' && voGroupItem.UnitType !==null" style="color:red">{{voGroupItem.OrderType}}</div>
                                                        </div>
                                                        <div class="secondchild" style="margin-left: 0; width: 19%;">

                                                             <span>{{voGroupItem.UnreceivedQty}}</span>
                                                        </div>
                                                        <div class="thirdchild" style="margin-left:50px" > 

                                                            <span>{{voGroupItem.PercentRecieved | number : 2}}%</span>
                                                        </div>
                                                        <div class="otherchild" style="width: 20%;">&nbsp;</div>
                                                        <div class="lastchild "> {{voGroupItem.ExpectedDate}} </div>
                                                    </div>
                                                    <div class="edit_panel row" ng-show="VORModel.vendorOrderItems_editRow[$parent.$index].voliGroups_editRow[$index].isEdit">
                                                        <div id="voglineitem_tbody_expandtr_edit_box_{{$index}}" class="edit_box col-lg-9 col-md-9" >
                                                            <div class="its-heading" id="voglineitem_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
                                                                <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" styleClass="img_action"/>
                                                                <span>Actions (1 Action Available)</span>
                                                            </div>
                                                            <div id=" voglineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}} " class="edit-body">
                                                                <form>
                                                                    <div class="radio" id="voglineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
                                                                        <label>
                                                                            <input type="radio" name="optionsRadios" id="optionsRadios1" value="1"  
                                                                                ng-model= "VORModel.vendorOrderItems_editRow[$parent.$index].voliGroups_editRow[$index].radioValue"/>
                                                                            <span>Receive Item</span>
                                                                        </label>
                                                                    </div>
                                                                    <a href="" id="voglineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" class="btn btn-default editform_btn" role="button"
                                                                        ng-click="VORModel.vendorOrderItems_GoAction($index, $parent.$index)" >Go</a>                                
                                                                </form>
                                                            </div>
                                                            <a href="" class="faq_link">
                                                            <i class="fa fa-question-circle qmark"></i>
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <!-- END: Vendor Order Groups list on edit of Vendor Order -->
                                    </tbody>
                                </table>
                            </div>
                            
                            <!-- Pagination container -->
                            <div class="pagination_container" id="Receiving_For_Vendor_Orders_Pagination" ng-if="VORModel.totalVendorOrders != undefined" >
                                <list-pagination id-value = "Receiving_For_Vendor_Orders_Pagination_" 
                                                 total-records-length = "VORModel.totalVendorOrders"
                                                 page-size = "VORModel.vendorOrdersPageSortAttrsJSON.PageSize"
                                                 current-page = "VORModel.vendorOrdersPageSortAttrsJSON.CurrentPage"
                                                 changes-count = "VORModel.vendorOrdersPageSortAttrsJSON.ChangesCount"
                                                 pagination-control-method = "VORModel.ReceivingForVO_paginationControlsAction" />
                            </div>
                        </div>
                        <!-- END: Grid -->
                    </div>
                    <!-- END: RECEIVING FOR VENDOR ORDER SECTION -->
                </div>
            
                <div class="row Order_Section" id="VOR_Vendor_Received_Block">
                            <div  id="VO_order_section_heading">
                                <div class="row  heading_panel_Main  backgroundOrange" >
                                    <div class="row" style="height: 10px; background-color: white"> </div>
                                    <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
                                        <h1 id="CO_dynamic_heading_panel_left_heading_h1">
                                            <span class="heading_icon handCursor" ng-click="VORModel.hidePanel($event, 'Vendor_Orders')" >
                                                <i class="fa fa-chevron-circle-right"></i>
                                            </span>
                                            <p class="header_icon_text"> B Received  ....TOTAL ${{VORModel.GroupTotalCost}}</p>
                                        </h1>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            
                            <!-- START: ITEMS grid -->
                            <div class="VO_outer_block" id="Vendor_Orders">
                                <div class="VO-form" id="VOR_Items_Block">
                                    <div class="row heading_panel_secondary">
                                        <div class="left_heading_secondary pull-left" >
                                            <h1 >Items
                                                <i class="fa fa-plus-square plush_sign Orange handCursor" id="Order_Block_heading_panel_left_sub_h1_text_plus_icon"
                                                    ng-if="(VORModel.VendorOrderHeader.Status == 'Open' || VORModel.VendorOrderHeader.Status == 'Locked') && (VORModel.VendorOrderHeader.VendorId != null && VORModel.VendorOrderHeader.VendorId != '')"
                                                    ng-click="VORModel.RelatedList_addAction($event, 'Merchandise')"></i>
                                            </h1>
                                        </div>
                                        
                                        <div class="right_sub pull-right" id="Merchandise_block_heading_panel_right_sub">
                                                   <div class="dropdown" id="VOR_header_dropdown_div_bulkremove" style="float: left; margin: 5px;">
                                                        <a aria-expanded="false" class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" 
                                                            style="padding-top: 10px; padding-bottom: 10px;" id="VOR_header_dropdown_link">
                                                            <span class="fa fa-cog  Orange Customtool" style="font-size:20px;"  id="VOR_header_dropdown_span"></span>

                                                            </a>
                                                            <ul class="link_dropdown dropdown-menu" role="menu" id="VOR_header_dropdown_ul" style="margin-left:-160px">
                                                                <li><a href="#" id="VOR_header_dropdown_profile" ng-click="VORModel.removeAllReceived()">Remove All Item</a></li>


                                                            </ul>
                                                        </div>
                                                   <i class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>


                                             </div>
                                    </div> 
                                    
                                    <div class="gid_container" id="VO_Order_block_grid_container_Empty_Div" 
                                        ng-show="VORModel.vendorOrderLineItemGroupList.length == 0">
                                        No records found
                                    </div>
                                    
                                    <div id="1" ng-show="VORModel.vendorOrderLineItemGroupList.length != 0">
                                        <div class=" general_section_row">
                                            <div class="gid_container" id="VO_Order_block_grid_container">
                                                <table class="table" id="VendorOrderItem_Grid">
                                                    <col width="3%"  />
                                                    <col width="3%"  />
                                                    <col width="30%" />
                                                    <col width="10%"  />
                                                    <col width="11%" />
                                                    <col width="10%" />
                                                    <col width="13%"  />
                                                    <col width="10%" />
                                                    <col width="11%"  />
                                                    <tr  class="tableHeader">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VORModel.GroupItems_PageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VORModel.groupItemsVOGPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VORModel.groupItemsVOGPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VORModel.groupItemsVOGPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            ITEM/DESC
                                                        </th>
                                                       
                                                        <th>NEEDED FOR</th>
                                                        <th>NEEDED BY</th>
                                                        <th>ORDER</th>
                                                         <th>RECIEVED</th>
                                                        <th>COST</th>
                                                        <th>TOTAL</th>
                                                    </tr>
                                                    <tbody  ng-repeat="vorLineItemGroup in  VORModel.VORLineItemGroupList" >
                                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit"  
                                                            ng-click="VORModel.editGroupItem($event, $index)"
                                                            ng-blur = "VORModel.editGroupItem($event, $index)" >
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" class="group_exapnded_tr">
                                                                <i class="fa fa-wrench"></i>
                                                            </td >  
                                                            <td></td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" >
                                                                 <div>
                                                                    <a ng-mouseover="VORModel.openpartpopup($event, $index);" ng-mouseleave="VORModel.hidePartPopUp();">
                                                                        {{ vorLineItemGroup.ItemDesc}}
                                                                    </a>
                                                                 </div>
                                                                 <div ng-if="vorLineItemGroup.UnitType  !='NULL' && vorLineItemGroup.UnitType  !=null" style="color:red">{{ vorLineItemGroup.OrderType }}</div>
                                                                
                                                            </td>
                                                           
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}" >
                                                                

                                                                <div>
                                                                	<a ng-mouseover="VORModel.showCOPopUp($event, vorLineItemGroup.CoHeaderId);" ng-mouseleave="VORModel.hideCOPopUp();">
                                                                		{{vorLineItemGroup.NeededFor}}
                                                                	</a>
                                                                </div>
                                                                <div><span ng-if="vorLineItemGroup.IsExcess" style="Color:red">
                                                                    <a ng-mouseover="VORModel.showNeededForPopUp($event, vorLineItemGroup.Id);" 
                                                                    	ng-mouseleave="VORModel.hideNeededForPopUp();" style="color:red"> 
                                                                        With Excess
                                                                    </a>
                                                                </span>
                                                                </div>
                                                                
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" >
                                                                {{ vorLineItemGroup.NeededBy  ==  null ? ' ' :vorLineItemGroup.NeededBy }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}" >
                                                                {{ vorLineItemGroup.OrderValue }} {{ vorLineItemGroup.UnitType == null || vorLineItemGroup.UnitType == "NULL" ?  " " :" " + vorLineItemGroup.UnitType }}
                                                            </td>
                                                             <td  id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" >
                                                             	<div style="width:100%">
                                                                    <div ng-if="VORModel.groupItems_editRow[$index].isEdit==false"  >  {{ vorLineItemGroup.ReceivedQty }} {{ vorLineItemGroup.UnitType == null || vorLineItemGroup.UnitType == "NULL" ?  " " :" " + vorLineItemGroup.UnitType }} </div> 
                                                                    <div ng-if="VORModel.groupItems_editRow[$index].isEdit==true && VORModel.VOR_Header.Status == 'In Progress'" ng-keydown="VORModel.editRowTabOutRecieved($event,$index)"  > <number-only-input input-value="vorLineItemGroup.ReceivedQty " /> </div>
                                                                    <div ng-if="VORModel.groupItems_editRow[$index].isEdit==true && VORModel.VOR_Header.Status != 'In Progress'"   >  {{ vorLineItemGroup.ReceivedQty }} {{ vorLineItemGroup.UnitType == null || vorLineItemGroup.UnitType == "NULL" ?  " " :" " + vorLineItemGroup.UnitType }} </div> 
                                                               </div>		     
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" >
                                                            		
                                                                    <div ng-if="VORModel.groupItems_editRow[$index].isEdit==false" > $ {{ vorLineItemGroup.Cost }} </div> 
                                                                    <div ng-if="VORModel.groupItems_editRow[$index].isEdit==true && VORModel.VOR_Header.Status == 'In Progress'" ng-keydown="VORModel.editRowTabOutLast($event,$index)"> <number-only-input input-value="vorLineItemGroup.Cost" /></div>
                                                                     <div ng-if="VORModel.groupItems_editRow[$index].isEdit==true && VORModel.VOR_Header.Status != 'In Progress'"> $ {{ vorLineItemGroup.Cost }} </div>
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}" >
                                                               $ {{ vorLineItemGroup.Total }}
                                                            </td>
                                                        </tr>
                                                        <tr ng-show="VORModel.groupItems_editRow[$index].isEdit && vorLineItemGroup.OtherVOHeaderNameList.length != 0">
                                                          <td colspan="9" class="group_exapnded_tr">
                                                                 <div class="show_Availableline">
                                                                      THIS PART IS INCLUDED THESE UNSELECTED ITEMS: <span  ng-repeat="OtherVendorOrder in  vorLineItemGroup.OtherVOHeaderNameList" > {{OtherVendorOrder}}</span>   
                                                                 </div>
                                                          </td>
                                                        </tr>
                                                        <tr ng-show="VORModel.groupItems_editRow[$index].isEdit && VORModel.VOR_Header.Status == 'In Progress'"
                                                            class="edit_panel sample-show-hide" id="vogroup_item_row{{$index}}_edit">
                                                            <td colspan="9" id="CO_Merchandise_block_grid_container_tbody_expandtr_td_1_{{$index}}">
                                                                <div id="vogroup_tbody_expandtr_edit_box_{{$index}}" class="edit_box col-lg-9 col-md-9" >
                                                                    <div class="its-heading" id="CO_Merchandise_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
                                                                        <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" styleClass="img_action"/>
                                                                        <span>Actions (1 Actions Available)</span>
                                                                    </div>
                                                                    <div id=" vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}} " class="edit-body">
                                                                        <form>
                                                                            
                                                                            <div class="radio" id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
                                                                                <label>
                                                                                <input type="radio" name="optionsRadios" id="optionsRadios2" value="2"  
                                                                                    ng-model= "VORModel.groupItems_editRow[$index].radioValue"/>
                                                                                <span>Remove From Receiving</span>
                                                                                </label>
                                                                            </div>
                                                                            <a href="" id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" class="btn btn-default editform_btn" role="button"
                                                                                ng-click="VORModel.groupItemsGoAction($index)" >Go</a>                                
                                                                        </form>
                                                                    </div>
                                                                    <a href="" class="faq_link">
                                                                    <i class="fa fa-question-circle qmark"></i>
                                                                    </a>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        <tr ng-show="VORModel.groupItems_editRow[$index].isEdit">
                                                            <td colspan="9" class="group_exapnded_tr">
                                                                <div ng-repeat="vorLineItems in vorLineItemGroup.VendorOrderLineItemList " class="volineItem_row_clickable" 
                                                                     ng-click="VORModel.editVolItem($event, $index, $parent.$index)">
                                                                        <div class=" volineItem_row_item ">
                                                                            <div class="firstchild" >
                                                                            	{{vorLineItems.VendorOrderHeaderName}}
                                                                        		
                                                                             </div>

                                                                            <div class="secondchild" >
                                                                            	<div ng-if="vorLineItems.IsExcess == true"> Stock <span Style="Color:red"> Excess</span> </div>
                                                                            	<div ng-if="vorLineItems.IsExcess == false"> 
	                                                                            	<a ng-mouseover="VORModel.showCOPopUp($event, vorLineItems.CoHeaderId);" ng-mouseleave="VORModel.hideCOPopUp();">
				                                                                		{{vorLineItems.NeededFor}}
				                                                                	</a>
			                                                                	</div>
                                                                           	</div>
                                                                            <div class="thirdchild_secondry"  >{{vorLineItems.NeededBy}} </div>
                                                                            <div class="otherchild"  >{{vorLineItems.Need}} </div>
                                                                            <div class="otherchild"  ng-if="VORModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit==false" >  {{ vorLineItems.ReceivedQty }} </div> 
                                                                            <div class="otherchild" ng-if="VORModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && 
                                                                            		VORModel.VOR_Header.Status == 'In Progress'" ng-keydown="VORModel.editRowTabOutChild($event, $parent.$parent.$index ,$index)"  >
                                                                            		 <number-only-input input-value="vorLineItems.ReceivedQty" /></div>
                                                                            <div class="otherchild" ng-if="VORModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit &&
                                                                            		 VORModel.VOR_Header.Status != 'In Progress'"  > {{ vorLineItems.ReceivedQty }}
                                                                            		 </div>
                                                                        </div>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        
                                        <!-- Pagination container -->
                                        <div class="pagination_container" id="Vendor_Order_Items_Pagination" ng-if="VORModel.totalGroupItems != undefined" >

                    <!--                        ng-show="VORModel.totalGroupItems > VORModel.groupItemsVOGPageSortAttrsJSON.PageSize" > -->
                                            <list-pagination id-value = "Vendor_Order_Items_Pagination_" 
                                                             total-records-length = "VORModel.totalGroupItems"
                                                             page-size = "VORModel.groupItemsVOGPageSortAttrsJSON.PageSize"
                                                             current-page = "VORModel.groupItemsVOGPageSortAttrsJSON.CurrentPage"
                                                             changes-count = "VORModel.groupItemsVOGPageSortAttrsJSON.ChangesCount"
                                                             pagination-control-method = "VORModel.GroupItems_paginationControlsAction" />
                                        </div>
                                    </div>
                                
  
  
                                
                                
                                </div>
                                
                                
                        <div class="VOR_outer_block VO-form" id="VOR_Outstanding_Items_Block"
                             ng-show="VORModel.VOR_Header.VendorId != null && VORModel.totalOutstandingItems != 0 && VORModel.VOR_Header.Status == 'In Progress'">
                         
                            <div class="row heading_panel_secondary" style="border: 0px;">
                                <div class="left_heading_secondary pull-left" >
                                    <h1 ng-show="VORModel.SelectedVendorOrdersList.length == 1">
                                        Outstanding Items for {{VORModel.SelectedVendorOrdersList[0]}}
                                    </h1>
                                    <h1 ng-show="VORModel.SelectedVendorOrdersList.length > 1">
                                        Outstanding Items for
                                        <span ng-repeat="selectedVO in VORModel.SelectedVendorOrdersList">
                                            &nbsp;{{selectedVO}},
                                        </span>
                                    </h1>
                                </div>
                                <div class="right_sub pull-right" id="VOR_Outstanding_Block_heading_panel_right_sub">
									<div class="dropdown" id="VOR_header_dropdown_div_bulkremove" style="float: left; margin: 5px;">
                                       <a aria-expanded="false" class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" 
                                          style="padding-top: 10px; padding-bottom: 10px;" id="VOR_header_dropdown_link">
                                           <span class="fa fa-cog  Orange Customtool" style="font-size:20px;"  id="VOR_header_dropdown_span"></span>
                                       </a>
                                       <ul class="link_dropdown dropdown-menu" role="menu" id="VOR_header_dropdown_ul" style="margin-left:-160px">
                                           <li><a href="#" id="VOR_header_dropdown_profile" ng-click="VORModel.addAllOutstanding()">Add All Item</a></li>
                                       </ul>
                                    </div>

                                    <i class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>
                                    
                                </div>
                            </div>
                            
                            <!-- START: Grid -->
                            <div id="1">
                                <div class="general_section_row gid_container">
                                    <table class="table" id="OutstandingGroups_Grid">
                                        <col width="5%"  />
                                        <col width="23%" />
                                        <col width="22%" />
                                        <col width="18%" />
                                        <col width="16%" />
                                        <col width="16%" />
                                        
                                        <tr  class="tableHeader">
                                            <th>
                                                
                                            </th>
                                            <th style="cursor: pointer;" ng-click="VORModel.OutstandingItems_PageSortControlsAction();">
                                                <i class="fa fa-sort-asc" ng-show="VORModel.outstandingVOGPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                <i class="fa fa-sort-desc" ng-show="VORModel.outstandingVOGPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                <i class="fa fa-sort" ng-show="VORModel.outstandingVOGPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                ITEM/DESC
                                            </th>
                                            <th>NEEDED FOR</th>
                                            <th>NEEDED BY</th>
                                            <th>ORDERED</th>
                                            <th>ORDER #</th>
                                        </tr>
                                        <tbody ng-repeat="outstandingGroup in VORModel.outstandingVOGList" >
                                            <!-- START: Vendor Orders list -->
                                            <tr class="clickable_row" id="rowGroup{{$index}}" rel="VOR_Outstanding_row{{$index}}_edit"  
                                                ng-click="VORModel.editOutstandingItem($event, $index)"
                                                ng-blur = "VORModel.editOutstandingItem($event, $index)">
                                                <td id="VOR_Outstanding_block_grid_container_tbody_tr_td_1_{{$index}}" class="vor_exapnded_tr">
                                                    
                                                </td>
                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_2_{{$index}}" >
                                                    <div>{{outstandingGroup.ItemDesc}}</div>
                                                    <div ng-if="outstandingGroup.InProgressVRId != null && outstandingGroup.InProgressVRId != VORModel.VOR_Header.VORId" style="color:red">Receiving in progress {{outstandingGroup.InProgressVR}}</div>
                                                </td>
                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_3_{{$index}}" >
                                                    {{outstandingGroup.NeededFor}} 
                                                </td>
                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_4_{{$index}}" >
                                                    {{outstandingGroup.NeededBy}} 
                                                </td>
                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_5_{{$index}}" >
                                                    {{outstandingGroup.OrderValue}} 
                                                </td>
                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_6_{{$index}}" >
                                                    {{outstandingGroup.VOHeaderName}} 
                                                </td>
                                            </tr>
                                            <!-- END: Vendor Orders list -->
                                            
                                            <!-- START: Edit row action -->
                                            <tr ng-show="VORModel.outstandingItems_editRow[$index].isEdit"
                                                class="edit_panel sample-show-hide" id="vo_record_row{{$index}}_edit">
                                                <td colspan="9" id="VOR_Outstanding_block_grid_container_tbody_expandtr_td_1_{{$index}}">
                                                    <div id="vo_tbody_expandtr_edit_box_{{$index}}" class="edit_box col-lg-9 col-md-9" >
                                                        <div class="its-heading" id="VOR_Outstanding_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
                                                            <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" styleClass="img_action"/>
                                                            <span>Actions (1 Action Available)</span>
                                                        </div>
                                                        <div id="vo_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}} " class="edit-body">
                                                            <form>
                                                                <div class="radio" id="vo_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
                                                                    <label>
                                                                    <input type="radio" name="optionsRadios" id="optionsRadios1" value="1"  
                                                                        ng-model= "VORModel.outstandingItems_editRow[$index].radioValue"/>
                                                                    <span>Receive Item</span>
                                                                    </label>
                                                                </div>
                                                                <a href="" id="vo_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" class="btn btn-default editform_btn" role="button"
                                                                    ng-click="VORModel.outstandingItems_GoAction($index, null)" >Go</a>                                
                                                            </form>
                                                        </div>
                                                        <a href="" class="faq_link">
                                                        <i class="fa fa-question-circle qmark"></i>
                                                        </a>
                                                    </div>
                                                </td>
                                            </tr>
                                            <!-- END: Edit row action -->
                                            
                                            <!-- START: Vendor Order Groups list on edit of Vendor Order -->
                                            <tr ng-show="VORModel.outstandingItems_editRow[$index].isEdit">
                                                <td colspan="9" class="group_exapnded_tr">
                                                    <div class="volineItem_row_clickable ng-scope" ng-repeat="outstandingGroupItem in outstandingGroup.VendorOrderLineItemList ">
                                                        <div class="row_line_item_div">
                                                            <div class="Outstandingfirstchild" >
                                                            
                                                            					<div ng-if="outstandingGroupItem.IsRequiredForCustomer !=true && outstandingGroupItem.IsExcess != true ">{{outstandingGroupItem.ItemDesc}}</div>
                                                                        		<div ng-if="outstandingGroupItem.IsExcess == true">{{outstandingGroupItem.Location}}</div>
                                                                        		<div ng-if="outstandingGroupItem.IsRequiredForCustomer ==true">{{outstandingGroupItem.Customer}}</div>
                                                                        		<div ng-if="vorLineItemGroup.UnitType  !='NULL' && vorLineItemGroup.UnitType  !=null" style="color:red">{{ vorLineItemGroup.OrderType }}</div>
                                                            </div>
                                                            <div class="Outstandingsecondchild" >
                                                                 <span>{{outstandingGroupItem.NeededFor}}</span>
                                                            </div>
                                                            <div class="Outstandingthirdchild" > 
                                                                <span>{{outstandingGroupItem.NeededBy}}</span>
                                                            </div>
                                                            <div class="Outstandingfourchild"> {{outstandingGroupItem.Need}} </div>
                                                            <div class="Outstandinglastchild "> {{outstandingGroupItem.VendorOrderHeaderName}} </div>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>
                                            <!-- END: Vendor Order Groups list on edit of Vendor Order -->
                                        </tbody>
                                    </table>
                                </div>
                                
                                <!-- Pagination container -->
                                <div class="pagination_container" id="Receiving_For_Outstanding_Items_Pagination" ng-if="VORModel.totalOutstandingItems != undefined" >
                                    <list-pagination id-value = "Receiving_For_Outstanding_Items_Pagination_" 
                                                     total-records-length = "VORModel.totalOutstandingItems"
                                                     page-size = "VORModel.outstandingVOGPageSortAttrsJSON.PageSize"
                                                     current-page = "VORModel.outstandingVOGPageSortAttrsJSON.CurrentPage"
                                                     changes-count = "VORModel.outstandingVOGPageSortAttrsJSON.ChangesCount"
                                                     pagination-control-method = "VORModel.OutstandingItems_paginationControlsAction" />
                                </div>
                            </div>
                            <!-- END: Grid -->
                        </div>
                        <!-- END: OUTSTANDING FOR VENDOR ORDER SECTION -->
                        
                                   
                      
                    </div>
                                
                        </div>
                        

                    <!-- section End -->
                    
               <div class="Finalize_Section row" id="VOR_Finalize_Block" ng-show="VORModel.VOR_Header.VendorId != null &&  VORModel.VORLineItemGroupList.length != 0  && VORModel.VOR_Header.Status == 'In Progress'" >
	                       <div id="VR_order_section_heading">
	                           <div class="row  heading_panel_Main  backgroundOrange" >
	                               <div class="row" style="height: 10px; background-color: white"> </div>
	                               <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
	                                   <h1 id="CO_dynamic_heading_panel_left_heading_h1">
	                                       <span class="heading_icon handCursor" ng-click="VendorOrderModel.hidePanel($event, 'Vendor_Orders')" >
	                                           <i class="fa fa-chevron-circle-right"></i>
	                                       </span>
	                                       <p class="header_icon_text">C Finalize </p>
	                                   </h1>
	                               </div>
	                           </div>
	               	        </div>
	               	        
	               	        <div class="clearfix"></div>
	               	        
	               	        <div >
                            	<div>
                                	<div class="gid_container" id="VO_Order_block_grid_container">
										<button id="CO_active_invoice_not_Invoiced_gid_container_finalize_btn" class="large_btn btn" ng-class="{'active_btn' : VORModel.VOR_Header.Status != 'Stocked'}"  
												ng-disabled='(VORModel.VOR_Header.Status == "Stocked" || VORModel.VOR_Header.PackagingSlipNumber == undefined || VORModel.VOR_Header.PackagingSlipNumber == "" || VORModel.VOR_Header.PackagingSlipNumber == null)' 
												ng-click="VORModel.finalizeOrder()" style="width : 650px;">COMMIT RECEIVING</button>
                                    </div>
                              	</div>
                           	</div>
                           	
                		</div>
      
      			<!-- Invoice Section start -->
      			
      					 <div class="row Invoicing_Section" id="VOR_Vendor_Invoicing_Block" ng-show="VORModel.VOR_Header.VendorId != null && (VORModel.VOR_Header.Status == 'Stocked' || VORModel.VOR_Header.Status == 'Invoiced')">
                            <div  id="VO_order_section_heading">
                                <div class="row  heading_panel_Main  backgroundOrange" >
                                    <div class="row" style="height: 10px; background-color: white"> </div>
                                    <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
                                        <h1 id="CO_dynamic_heading_panel_left_heading_h1">
                                            <span class="heading_icon handCursor" ng-click="VORModel.hidePanel($event, 'Vendor_Orders')" >
                                                <i class="fa fa-chevron-circle-right"></i>
                                            </span>
                                            <p class="header_icon_text"> D INVOICE HISTORY</p>
                                        </h1>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                               <div class="VO_outer_block" id="Vendor_Orders">
                                 <div class="VO-form" id="VOR_Items_Block">
                                    <div class="row heading_panel_secondary">
                                        <div class="left_heading_secondary pull-left" >
                                            <h1 >Items
                                                <i class="fa fa-plus-square plush_sign Orange handCursor" id="Order_Block_heading_panel_left_sub_h1_text_plus_icon"
                                                    ng-click="VORModel.RelatedList_addAction($event, 'Merchandise')"></i>
                                            </h1>
                                        </div>
                                        <div class="right_sub pull-right" id="Merchandise_block_heading_panel_right_sub">
                                                   <div class="dropdown" id="VOR_header_dropdown_div_bulkremove" style="float: left; margin: 5px;">
                                                        <a aria-expanded="false" class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" 
                                                            style="padding-top: 10px; padding-bottom: 10px;" id="VOR_header_dropdown_link">
                                                            <span class="fa fa-cog  Orange Customtool" style="font-size:20px;"  id="VOR_header_dropdown_span"></span>

                                                            </a>
                                                            <ul class="link_dropdown dropdown-menu" role="menu" id="VOR_header_dropdown_ul" style="margin-left:-160px">
                                                                <li><a href="#" id="VOR_header_dropdown_profile" ng-click="VORModel.removeAllReceived()">Remove All Item</a></li>


                                                            </ul>
                                                        </div>
                                                   <i class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>
                                             </div>
                                	    </div> 
      								 <div class="general_section_row gid_container">
		                                <table class="table" id="ReceivingForVendorOrders_Grid">
		                                    <col width="5%"  />
		                                    <col width="23%" />
		                                    <col width="15%" />
		                                    <col width="15%" />
		                                    <col width="15%" />
		                                    <col width="12%" />
		                                    <col width="15%" />
		                                    <tr  class="tableHeader">
		                                        
		                                        <th style="cursor: pointer;" ng-click="VORModel.ReceivingForVO_PageSortControlsAction();">
		                                            <i class="fa fa-sort-asc" ng-show="VORModel.vendorOrdersPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
		                                            <i class="fa fa-sort-desc" ng-show="VORModel.vendorOrdersPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
		                                            <i class="fa fa-sort" ng-show="VORModel.vendorOrdersPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
		                                           
		                                        </th>
												<th>
		                                            INVOICE # 
		                                        </th>
		                                        <th>INVOICE DATE</th>
		                                        <th>INVOICED BY</th>
		                                        <th>LINE ITEM</th>
		                                        <th>TOTAL COST</th>
		                                        <th>STATUS</th>
		                                    </tr>
		                                     <tbody ng-repeat="VIHistory in VORModel.VIHistoryList" >
	                                            <tr class="clickable_row" id="rowGroup{{$index}}" rel="VOR_Outstanding_row{{$index}}_edit"  
	                                                ng-click="VORModel.editOutstandingItem($event, $index)"
	                                                ng-blur = "VORModel.editOutstandingItem($event, $index)">
	                                                <td id="VOR_Outstanding_block_grid_container_tbody_tr_td_1_{{$index}}" class="vor_exapnded_tr">
	                                                    
	                                                </td>
	                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_2_{{$index}}" >
	                                                    <div>{{VIHistory.InvoiceNumber}}</div>
	                                                    
	                                                </td>
	                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_3_{{$index}}" >
	                                                    {{VIHistory.InvoiceDate}} 
	                                                </td>
	                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_4_{{$index}}" >
	                                                    {{VIHistory.InvoicedByName}} 
	                                                </td>
	                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_5_{{$index}}" >
	                                                    {{VIHistory.TotalLineItems}} 
	                                                </td>
	                                                <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_6_{{$index}}" >
	                                                    ${{VIHistory.TotalCost}} 
	                                                </td>
	                                                 <td  id="VOR_Outstanding_block_grid_container_tbody_tr_td_6_{{$index}}" >
	                                                    {{VIHistory.Status}} 
	                                                </td>
	                                            </tr>
	                                          </tbody>  
		                                 </table>
		                             </div>  	
      							 </div>
      						 	
      						 	     
      						  </div>
      					</div>		  
      			<!-- Invoice Section End -->
      			
      		  <div  style="height:200px" id="dummydivfinalise"></div>         
</div>  
    
            
                
                
            <!-- END: Center Panel -->
            
        </div>
        <!-- START: Page Content -->
        
        <!-- START: Vendor Order selection confirmation block -->
        <div class="ConfirmBox-overlayNew" id="VODeselectConfirmBox" > 
            <div>
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" aria-label="Close"
                            ng-click="VORModel.VODeselectConfirmBox_Response(false)">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title">Confirmation Deselection</h4>
                    </div>
                    <div class="modal-body">
                        <p>Continuing will remove all selected items from receiving for Vendor Order.</p>
                        <p>Process is not reversible.</p>
                        <br /> Are you sure, you want to continue?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary"
                            ng-click="VORModel.VODeselectConfirmBox_Response(true)">Yes</button>
                        <button type="button" class="btn btn-default"
                            ng-click="VORModel.VODeselectConfirmBox_Response(false)">No</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- END: Vendor Order selection confirmation block -->
        
            <!-- START: Vendor Order Stock excess confirmation   block -->
        <div class="ConfirmBox-overlayNew" id="StockexcessConfirmBox" >
            <div >
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" aria-label="Close"
                            ng-click="VORModel.StockexcessConfirmBox_Response(false)">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        <h4 class="modal-title">Confirmation Stock Excess</h4>
                    </div>
                    <div class="modal-body">
                        <p>Part is present in unselected outstanding continue will create stock Excess 
                            and unselected vendor order will not fullfill</p>
                        <p>Process is not reversible.</p>
                        <br /> Are you sure, you want to continue?
                    </div>
                    <div class="modal-footer">   
                        <button type="button" class="btn btn-primary"
                            ng-click="VORModel.StockexcessConfirmBox_Response(true)">Yes</button>
                        <button type="button" class="btn btn-default"
                            ng-click="VORModel.StockexcessConfirmBox_Response(false)">No</button>
                    </div>
                </div>
            </div>
        </div>
        
    </body>


    <c:PartsChartPopup />
    <style>
        .halfWidth {
            width: 31.5%;
        }
        .sections-link .sub-heading {
         	border-left:none;
         }
    </style>
</html>
</apex:page>