<apex:component controller="CustomerOrderCtrl" >
	<!-- Import styles -->
	<c:NewPopupStyle />

	<!-- Include required directives -->
	<!-- Directive for price fields -->
	<c:dirNumberInput />

	<style>
		#AddEditHourLog .controls1 {   
			top: -45px;
		}
		
		.modal-content .fee_popup_container .leftbordernone{
			border-left: none;
		}
		
		.modal-content .fee_popup_container .popupinside .min_overflow{
			height: 360px;
			overflow: auto;
			float: left;
		}
		
		.modal-content .fee_popup_container	.angucomplete-dropdown{
			margin: 0;
		}
		
		.modal-content .fee_popup_container  .popupright .tabconainer form .angucomplete-overide-dropdown{
			width: 63% !important
		}
		
		.modal-content .fee_popup_container .angucomplete-overide-dropdown .ML{
			margin-left: 6px;
		}
		.starimgdivlog{
			height: auto;
			margin-bottom: 0px;
		}
		.itemiconlog{
			width: auto;
			margin-left: 10px;
		}
		.logservicelabel p
		{
			padding: 0px;
			text-align: right;
			margin-right: 5px;
			text-transform: uppercase;
		}
		.pull-left p
		{
			text-transform: uppercase;
		}
		.logservices .lightbox .infotext
		{
			margin-left: 0px;
		    margin-top: 7px;
		    position: relative;
		    width: 140px;
		    float: left;
		    left: 0;
		}
		.logservice-dialog .popup_container
		{
			height:auto;
			padding-bottom: 50px;
		}
		.logservices
		{
			margin-bottom:7px;
		}
		.logservices .infoemail
		{
			word-wrap: break-word;
			
		}
		.logservicelabel .fa-question-circle
		{
				color: #939CA9;
		}
		.logservicepopup .InfoMT
		{
			margin-top: 7px;
		}
		#logservice .popupright
		{
			border:none;
		}
		.ui-datepicker
		{
			z-index: 1000000 !important;
		}
		.M10
		{
			margin-left:10px;
		}
		.logservicepopup .logservices .lightbox
		{
			width:200px;
		}
		.M7
		{
			margin:6px;
			text-transform: lowercase;
		}
		.exptxt
		{
			font-size: 10px;
			float:left;
			padding-top: 8px;
			
		}
		.user-fb
		{   float: right;
		    margin-top: 19px;
		    margin-right: -11px;
		    color: #00CEFF
		}
		.user-twitter
		{
		 	float:right;
		    color: #00CEFF
		}
		.log-ques
		{
			padding-top:2px;
		}
		.logservices .starimgdiv
		{
			height: auto;
			margin-bottom: 0;
		}
		.logservices .itemicon
		{
			width: auto;
		}
		.logservices .lightbox .infotext p
		{
			float: left;
			width: 120px;
		}
		.hourlogMR{
			margin-right: 3px;
		}
		.PTL5{
			padding: 5px 0px 0px 5px;
		}
	</style>

	<script>
        var addEditHourLogModule= angular.module('addEditHourLogModule', ['dir.priceInput', 'autocomplete', 'ui-notification', 'ui.date'] );
        addEditHourLogModule.controller('AddEditHourLogController', function ($scope, Notification, AddEditHourLogService) {
            /****** Modals initialization ******/
           
            if($scope.AddEditHourLog == undefined){
                $scope.AddEditHourLog = {};
                 $scope.AddEditHourLog.HourLogModel = {};
            }
          
           $scope.AddEditHourLog.setDefaultValidationModel = function() {
                $scope.AddEditHourLog.hourLogFormValidationModal = {
                    TimeSpent_H : {
                        isError : false,
                        ErrorMessage : '',
                        Type : 'Maxlength,Maxvalue,Numeric,Minvalue',
                        Maxlength:2,
                        Maxvalue:23,
                        Minvalue:0
                    },
                    TimeSpent_M : {
                        isError : false,
                        ErrorMessage : '',
                        Type : 'Maxlength,Maxvalue,Numeric,Minvalue',
                        Maxlength:2,
                        Maxvalue:59,
                        Minvalue:0
                    },
                     TimeSpent_D : {
                        isError : false,
                        ErrorMessage : '',
                        Type : 'Numeric,Minvalue',
                        Minvalue:0
                       
                    },
                    RemainingEstimate_D:{
                        isError : false,
                        ErrorMessage : '',
                        Type : 'Numeric,Minvalue',
                        Minvalue:0
                       
                    },
                    RemainingEstimate_H:{
                        isError : false,
                        ErrorMessage : '',
                        Type : 'Maxlength,Maxvalue,Numeric,Minvalue',
                        Maxlength:2,
                        Maxvalue:23,
                        Minvalue:0
                       
                    },
                    RemainingEstimate_M:{
                        isError : false,
                        ErrorMessage : '',
                        Type : 'Maxlength,Maxvalue,Numeric,Minvalue',
                        Maxlength:2,
                        Maxvalue:59,
                        Minvalue:0
                       
                    },
                    WorkPerformedDate:{
                     	isError : false,
                        ErrorMessage : '',
                        Type : 'Required',
                    }
                    
                };
                 $scope.AddEditHourLog.SimilarFee=[];
            }
            
            $scope.AddEditHourLog.helpText = {
                Code          : 'Fee Code',
                Description   : 'Fee Description',
                FeePrices        : 'Fee Prices',
                FeeFixedRate     : 'Fee Fixed Rate',
                Price          : 'Fee Rate, Required if Fixed Rate selected',
                CategoryName      : 'Fee Category',
                FeeTaxable       : 'Fee Taxable'
            }
            
          
         
          
          
            /****** Add/Edit Fee eventlisteners ******/
            $scope.AddEditHourLog.addNewHourLogService = function () {
             	$scope.AddEditHourLog.setDefaultValidationModel();
                $scope.AddEditHourLog.clearAllData();
                $scope.AddEditHourLog.isEditMode = false;
                $scope.AddEditHourLog.openPopup();                
            }
            
            
         
            /****** Add/Edit Fee events ******/
            
             $scope.$on('EditHourLogServiceEvent', function(event, logHourObject,coHeaderId, index) {  
             	  $scope.AddEditHourLog.setDefaultValidationModel();
				  debug("------------");
             	  debug(logHourObject);
	          	  $scope.AddEditHourLog.isEditMode = true;
                  $scope.AddEditHourLog.HourLogModel=logHourObject;
                  $scope.AddEditHourLog.HourLogModel.coHeaderId = coHeaderId;
                  $scope.AddEditHourLog.HourLogModel.index = index;
                  $scope.AddEditHourLog.openPopup();
            });
            
             $scope.$on('AddHourlogServiceEvent', function(event, logHourObject, coHeaderId, index) {  
                  $scope.AddEditHourLog.HourLogModel = logHourObject;
                  $scope.AddEditHourLog.HourLogModel.coHeaderId = coHeaderId;
                  $scope.AddEditHourLog.HourLogModel.index = index;
                  $scope.AddEditHourLog.addNewHourLogService();
            });
             
          
           $scope.AddEditHourLog.clearAllData = function () {
            	$scope.AddEditHourLog.HourLogModel.WorkPerformedDate = $scope.AddEditHourLog.getCurrentDate();
            	
                $scope.AddEditHourLog.HourLogModel.EmployeeName = "{!$User.FirstName} {!$User.LastName}";
                $scope.AddEditHourLog.HourLogModel.EmployeeId = '{!$User.Id}';
                $scope.AddEditHourLog.HourLogModel.Notes = '';
                $scope.AddEditHourLog.HourLogModel.TimeSpent_D = 0;
                $scope.AddEditHourLog.HourLogModel.TimeSpent_M = 0;
                $scope.AddEditHourLog.HourLogModel.TimeSpent_H = 0;
                $scope.AddEditHourLog.HourLogModel.RemainingEstimate_D = 0;
                $scope.AddEditHourLog.HourLogModel.RemainingEstimate_M = 0;
                $scope.AddEditHourLog.HourLogModel.RemainingEstimate_H = 0;
            }
            
            $scope.AddEditHourLog.getCurrentDate  = function(){
                    	var today = new Date();
					    var dd = today.getDate();
					    var mm = today.getMonth()+1; //January is 0!
					    var yyyy = today.getFullYear();
					    if(dd<10){
					        dd='0'+dd
					    } 
					    if(mm<10){
					        mm='0'+mm
					    } 
					    var today = mm+'/'+dd+'/'+yyyy;

					    return today;
           }
          
          $scope.AddEditHourLog.SaveHourLogForm=function(){
          	var daysval= $scope.AddEditHourLog.HourLogModel['TimeSpent_D'];
          	var hourval= $scope.AddEditHourLog.HourLogModel['TimeSpent_H'];
          	var minuteval= $scope.AddEditHourLog.HourLogModel['TimeSpent_M'];
          	if(daysval == ""){
          		$scope.AddEditHourLog.HourLogModel['TimeSpent_D'] = 0;
          	}
          	if(hourval == ""){
          		$scope.AddEditHourLog.HourLogModel['TimeSpent_H'] = 0;
          	}
          	if(daysval!="" || hourval!=""|| minuteval!="")
			{
			   $scope.AddEditHourLog.isValidForm = true;
                // Validate form
                $scope.AddEditHourLog.validateForm();
                
                if(!$scope.AddEditHourLog.isValidForm) {
                    Notification.error('{!JSENCODE($Label.Review_Errors_Notification)}');
                    return;
                }
       			$scope.AddEditHourLog.saveHourLogData();
       		}
       		else
       		{
       			Notification.error("{!JSENCODE($Label.Time_Spent_Cannot_Be_Zero)}");
       		}   
          }
          
      	$scope.AddEditHourLog.saveHourLogData = function() {
	  		debug($scope.AddEditHourLog.HourLogModel);
       		AddEditHourLogService.saveHourLog($scope.AddEditHourLog.HourLogModel, $scope.AddEditHourLog.HourLogModel.coHeaderId).
           		then(function (hourLogList) {
           		debug($scope.$parent.logHourRecordSaveCallback);
	           		if($scope.$parent.logHourRecordSaveCallback != undefined){
		               debug(hourLogList);
					   $scope.$parent.logHourRecordSaveCallback(hourLogList, $scope.AddEditHourLog.HourLogModel.index);
					   Notification.success('{!JSENCODE($Label.Label_Log)} {!JSENCODE($Label.Label_Hours)} {!JSENCODE($Label.Saved_Successfully)}');
				 	} 
	           		  	$scope.AddEditHourLog.closePopup();
	            	}, 
            		function (errorSearchResult) {
                    	Notification.error("{!JSENCODE($Label.Page_Server_Save_Error)}");
                    }
           		);
           }
           
       $scope.AddEditHourLog.getSimilarFees = function(modelKey) {
       		var fieldValue = $scope.AddEditHourLog.feeModel[modelKey];
            $scope.AddEditHourLog.SimilarFee = {};
                if((($scope.AddEditHourLog.feeModel['Code'] == '' || $scope.AddEditHourLog.feeModel['Code'] == null) 
                		&& ($scope.AddEditHourLog.feeModel['Description'] == null || $scope.AddEditHourLog.feeModel['Description'] == '')) 
                	|| $scope.AddEditHourLog.isEditMode) {
                    return;
                }
                AddEditHourLogService.getSimilarFees($scope.AddEditHourLog.feeModel)
                .then(function(SimilarFee) {
                debug(SimilarFee);
                	$scope.AddEditHourLog.SimilarFee = SimilarFee;
                	//$scope.KitCompModal.closePopup();
                }, function(errorSearchResult) {
                });
            }
          
             $scope.AddEditHourLog.validateForm = function () {
                angular.forEach($scope.AddEditHourLog.hourLogFormValidationModal, function(value, key) {
                    $scope.AddEditHourLog.validateFieldWithKey(key);
                });
            }
               
            $scope.AddEditHourLog.validateFieldWithKey = function (modelKey) {
                var fieldValue = $scope.AddEditHourLog.HourLogModel[modelKey];
                var isError = false;
                var ErrorMessage = '';
                var validateType = $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].Type;
                debug('fieldValue')
                debug(fieldValue == '');
                 if(modelKey == 'TimeSpent_M'){
                	if(!$scope.AddEditHourLog.HourLogModel.TimeSpent_D && !$scope.AddEditHourLog.HourLogModel.TimeSpent_H && !$scope.AddEditHourLog.HourLogModel.TimeSpent_M ){
                		isError = true;
                        ErrorMessage = '{!JSENCODE($Label.Field_Is_Required)}';
                	}else if($scope.AddEditHourLog.HourLogModel.TimeSpent_D == 0 && $scope.AddEditHourLog.HourLogModel.TimeSpent_H == 0 && $scope.AddEditHourLog.HourLogModel.TimeSpent_M == 0 ){
                		isError = true;
                        ErrorMessage = '{!JSENCODE($Label.Field_Is_Required)}';
                	}
                }
                 if (validateType.indexOf('Maxvalue') > -1) {
                    if(fieldValue != undefined && fieldValue!= '' && fieldValue  > $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].Maxvalue){
                        isError = true;
                         ErrorMessage = '{!JSENCODE($Label.Max_Value_Should_Be)} '+ $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].Maxvalue;
                    } 
                }
                
                if (validateType.indexOf('Minvalue') > -1) {
                    if(fieldValue != undefined && fieldValue!= '' && fieldValue  < $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].Minvalue){
                        isError = true;
                         ErrorMessage = '{!JSENCODE($Label.Min_Value_Should_Be)} '+ $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].Minvalue;
                    } 
                }
                
                if(validateType.indexOf('Maxlength') > -1){
                     if(fieldValue != undefined && fieldValue!= '' && fieldValue.length > $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].Maxlength){
                          isError = true;
                          ErrorMessage = '{!JSENCODE($Label.Max_Length_Should_Be)} '+ $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].Maxlength;
					 }
                }
                
                if (validateType.indexOf('Numeric') > -1) {
                    if(fieldValue != undefined &&  isNaN(fieldValue)){
                        isError = true;
                        ErrorMessage = '{!JSENCODE($Label.Field_Value_Non_Numeric)}';
                    } 
                }
                if (validateType.indexOf('Required') > -1) {
                    if(fieldValue == undefined || fieldValue == null || fieldValue === ''){
                        isError = true;
                        ErrorMessage = '{!JSENCODE($Label.Field_Is_Required)}';
                    } 
                }
               
                $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].isError = isError;
                $scope.AddEditHourLog.hourLogFormValidationModal[modelKey].ErrorMessage = ErrorMessage;
               	
                // Set validation flag value
                if($scope.AddEditHourLog.hourLogFormValidationModal[modelKey].isError == true){
                    $scope.AddEditHourLog.isValidForm = false;
                }
            }
            
          
           $scope.AddEditHourLog.clearFields = function(key){
               		debug( $scope.AddEditHourLog.feeModel[key])
                    $scope.AddEditHourLog.feeModel[key] = '';
                    $scope.AddEditHourLog.getSimilarFees(key);
                             
            }
          
          //number only
          $scope.AddEditHourLog.validateNumber = function(e){
          	 var key   = e.keyCode ? e.keyCode : e.which;
		     if (!( [8, 9, 13, 27, 46, 110, 190].indexOf(key) !== -1 ||
		         (key == 65 && ( e.ctrlKey || e.metaKey  ) ) || 
		         (key >= 35 && key <= 40) ||
		         (key >= 48 && key <= 57 && !(e.shiftKey || e.altKey)) ||
		         (key >= 96 && key <= 105)
		       )) e.preventDefault();
          
          }
          
          
          
            // Method to perform SAVE action for popup
            $scope.AddEditHourLog.closePopup = function() {
                angular.element('#logservice').modal('hide');
            }
            $scope.AddEditHourLog.keydownevent=function(event) { 
            debug('tab');
			   if (!event.shiftKey && event.keyCode == 9) {
                   			
                   			event.preventDefault();
                   			angular.element('#closemodalup').focus();
                 }
			   
			  };
			            
              $scope.AddEditHourLog.openPopup = function () {
                angular.element('#logservice').modal({
                    backdrop : 'static',
                    keyboard : false
                });
                
            }
        });
        
       
       
       
           addEditHourLogModule.service("AddEditHourLogService", function ($q) {
               this.saveHourLog = function(hourlogRecordJSON, coHeaderId){
               		hourlogRecordJSON = encodeString(angular.toJson(hourlogRecordJSON));
               		coHeaderId = encodeString(coHeaderId);
                    var deferred = $q.defer();
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.CustomerOrderCtrl.saveHoursLogged}', hourlogRecordJSON, coHeaderId,
                        function (result, event) {
                           if (event.type == 'exception') {
                                deferred.reject(event.message);
                            } else {
                                var hourRecord = decodeString(result);
                                var find = '\'';
                                var re = new RegExp(find, 'g');
                                hourRecord = hourRecord.replace(re, '');
                                deferred.resolve(JSON.parse(hourRecord));
                            }
                        }, {
                            escape : ture
                    });
                    return deferred.promise;
            }
                });
       
      
    </script>

	<div id="logservice" class="modal fade" role="dialog"
		ng-controller="AddEditHourLogController"
		ng-init=" AddEditHourLog.setDefaultValidationModel();">
		<div class="modal-dialog logservice-dialog">
			<!-- Modal content-->
			<div class="modal-content col-md-12">
				<div class="modal-body popup_container fee_popup_container">
					<div class="right_heading_container col-md-12 popupright ">
					<h1 class="right_panel_heading">{!$Label.COPage_Log_Service_Work}</h1>
					<div class="savecancle_btncntnr">
					<button type="button" class="btn btn-default greenBtn  pull-right"
								ng-attr-tabindex ="107"
								ng-click="AddEditHourLog.SaveHourLogForm();">{!$Label.Save_Label}</button>
						<button type="button" id="closemodalup"
							class="btn btn-default grayBtn pull-right hourlogMR"
							ng-attr-tabindex ="112" 
							ng-click="AddEditHourLog.closePopup();">{!$Label.Cancel_Label}</button>
						
				  </div>
			</div>
							<div class="popupinside logservicepopup">
								<div class="col-md-12 InfoMT logservices">
                                    <div class="col-md-2 logservicelabel "><p class="T3 col-md-10 req-label">{!$Label.Label_Employee}</p>
                                    <i class="fa fa-question-circle log-ques"></i>
                                    </div>
                                        <div class="col-md-9">
                                            <div class="lightbox pull-left">
                                                <div class="starimgdiv starimgdivlog  col-md-3 Plr0 MB12">
                                                     <img class="Profile_pic" src="{!URLFOR($Resource.Images, 'profile_default.jpg')}" style="height:30px;width:100%"/>
                                                </div>
                                                <div class="infotext">
                                                    <p class="infoname">{{AddEditHourLog.HourLogModel.EmployeeName}}</p>
                                                     <i class="fa fa-twitter user-twitter"></i>
                                                    <i class="fa fa-facebook-official user-fb"></i>
                                                </div>
                                                 <div class="itemiconlog itemicon">
                                                        <p class="T7">{!$Label.Label_Employee} | <span class="userStatus feeuserstatus ng-scope">{!$Label.Label_Active}</span></p>
                                                    </div>
                                            </div>
                                        </div>
                                    </div>
									<div class="col-md-12 InfoMT"> 
		                           <div class="col-md-2 logservicelabel"><p class="T3 col-md-10  req-label">{!$Label.Label_Date}</p>
                                    <i class="fa fa-question-circle log-ques"></i>
                                    </div>
		                             <div class="col-md-9">
									 	<div class="pull-left Plr0">

								            <p class="input-group" style="width: 200px;">
								            <input class="form-control"
								            ng-attr-tabindex ="101" 
								           ng-class="{'redborder' : AddEditHourLog.hourLogFormValidationModal['WorkPerformedDate']['isError'] == true}" 
								              ng-model="AddEditHourLog.HourLogModel.WorkPerformedDate" style="width: 200px;" type="text" ui-date="dateOptions" ui-date-format="mm/dd/yy"  />

								            </p>
								        </div>	
		                             </div>
	                             </div>
										<div class="col-md-12 InfoMT">
		                           <div class="col-md-2 logservicelabel"><p class="T3 col-md-10  req-label">{!$Label.COPage_Time_Spent}</p>
                                    <i class="fa fa-question-circle log-ques"></i>
                                    </div>
		                             <div class="col-md-5">
									 	<div class="pull-left Plr0">

								              <p class="input-group" style="width: 60px; float:left; margin-right: 10px">
								              <input class="form-control " type="text"   style="width:35px"
								              		ng-attr-tabindex ="102" 
									              ng-model="AddEditHourLog.HourLogModel.TimeSpent_D"
									              ng-keydown = "AddEditHourLog.validateNumber($event)"
									              ng-blur="AddEditHourLog.validateFieldWithKey('TimeSpent_D');"
									              ng-class="{'redborder' : AddEditHourLog.hourLogFormValidationModal['TimeSpent_D']['isError'] == true}"
													title="{{AddEditHourLog.hourLogFormValidationModal['TimeSpent_D']['ErrorMessage']}}"
								              />
												<label class="T3 M7 PTL5">d</label>
								            </p>
								            <p class="input-group" style="width: 60px; float:left; margin-right: 10px">
								              <input class="form-control " type="text"  style="width:35px" ng-model="AddEditHourLog.HourLogModel.TimeSpent_H"
								              ng-attr-tabindex ="103" 
								              ng-keydown = "AddEditHourLog.validateNumber($event)"
								              ng-blur="AddEditHourLog.validateFieldWithKey('TimeSpent_H');"
								              ng-class="{'redborder' : AddEditHourLog.hourLogFormValidationModal['TimeSpent_H']['isError'] == true}"
												title="{{AddEditHourLog.hourLogFormValidationModal['TimeSpent_H']['ErrorMessage']}}"
								              />
												<label class="T3 M7 PTL5">h</label>
								            </p>
								            <p class="input-group" style="width: 60px; float:left; margin-right: 10px">
								              <input class="form-control " type="text"  style="width:35px" ng-model="AddEditHourLog.HourLogModel.TimeSpent_M"
								               ng-attr-tabindex ="104" 
								               ng-keydown = "AddEditHourLog.validateNumber($event)"
								               ng-blur="AddEditHourLog.validateFieldWithKey('TimeSpent_M');"
								               ng-class="{'redborder' : AddEditHourLog.hourLogFormValidationModal['TimeSpent_M']['isError'] == true}"
												title="{{AddEditHourLog.hourLogFormValidationModal['TimeSpent_M']['ErrorMessage']}}"
								              />
												<label class="T3 M7 PTL5">m</label>
								            </p>
								            <span class="T7 M10 exptxt" >(eg 1d 2h 30m)</span>
								        </div>
		                             </div>
		                              <div class="col-md-5">
								          <div class="pull-left">
								            <p class="T3 M10" style="float: left; margin-right:10px; width: 185px; text-align: right;">{!$Label.COPage_Previously_Logged}</p>
		                            	  	<i class="fa fa-question-circle log-ques" style="float: left; margin-right:10px; color: #939CA9; "></i>
		                              		<span>{{AddEditHourLog.HourLogModel.PreviouslyLogged}}</span>
		                              		</div>
								        </div>	
	                             </div>
								<div class="col-md-12 InfoMT">
		                           <div class="col-md-2 logservicelabel"><p class="T3 col-md-10">{!$Label.COPage_Remaining_Estimate}</p>
                                    <i class="fa fa-question-circle log-ques"></i>
                                    </div>
		                             <div class="col-md-5">
									 	<div class="pull-left Plr0">

								            <p class="input-group" style="width: 60px; float:left; margin-right: 10px">
								              <input class="form-control " type="text"   style="width:35px" ng-model="AddEditHourLog.HourLogModel.RemainingEstimate_D"
								              	  ng-attr-tabindex ="105" 
								              	  ng-blur="AddEditHourLog.validateFieldWithKey('RemainingEstimate_D');"
								              	  ng-keydown = "AddEditHourLog.validateNumber($event)"
									              ng-class="{'redborder' : AddEditHourLog.hourLogFormValidationModal['RemainingEstimate_D']['isError'] == true}"
													title="{{AddEditHourLog.hourLogFormValidationModal['RemainingEstimate_D']['ErrorMessage']}}"
								              />
												<label class="T3 M7 PTL5">d</label>
								            </p>
								            <p class="input-group" style="width: 60px; float:left; margin-right: 10px">
								              <input class="form-control " type="text"    style="width:35px" ng-model="AddEditHourLog.HourLogModel.RemainingEstimate_H"
								              ng-attr-tabindex ="106" 
								              ng-blur="AddEditHourLog.validateFieldWithKey('RemainingEstimate_H');"
								              ng-keydown = "AddEditHourLog.validateNumber($event)"
								               ng-class="{'redborder' : AddEditHourLog.hourLogFormValidationModal['RemainingEstimate_H']['isError'] == true}"
												title="{{AddEditHourLog.hourLogFormValidationModal['RemainingEstimate_H']['ErrorMessage']}}"
								              />
												<label class="T3 M7 PTL5">h</label>
								            </p>
								            <p class="input-group" style="width: 60px; float:left; margin-right: 10px">
								              <input class="form-control " type="text"   style="width:35px" ng-model="AddEditHourLog.HourLogModel.RemainingEstimate_M"
								               ng-attr-tabindex ="107" 
								               ng-blur="AddEditHourLog.validateFieldWithKey('RemainingEstimate_M');"
								               ng-keydown = "AddEditHourLog.validateNumber($event)"
								               ng-class="{'redborder' : AddEditHourLog.hourLogFormValidationModal['RemainingEstimate_M']['isError'] == true}"
												title="{{AddEditHourLog.hourLogFormValidationModal['RemainingEstimate_M']['ErrorMessage']}}"
								              />
												<label class="T3 M7 PTL5">m</label>
								            </p>
								            <span class="T7 M10 exptxt" >(eg 1d 2h 30m)</span>
								        </div>	
		                             </div>
		                            <div class="col-md-5">
								          <div class="pull-left">
								            <p class="T3 M10" style="float: left; margin-right:10px; width: 185px; text-align: right;">{!$Label.COPage_Original_Estimate}</p>
		                            	  	<i class="fa fa-question-circle log-ques" style="float: left; margin-right:10px; color: #939CA9;"></i>
		                              		<span> {{AddEditHourLog.HourLogModel.OriginalEstimate}} </span>
		                              		</div>
								        </div>	
	                             </div>
								<div class="col-md-12 InfoMT">
		                           <div class="col-md-2 logservicelabel"><p class="T3 col-md-10">{!$Label.Label_Notes}</p>
                                    <i class="fa fa-question-circle log-ques"></i>
                                    </div>
		                             <div class="col-md-9">
									 	<div class="pull-left Plr0">
								            <textarea rows="4" cols="60" style="resize:none;" 
								            ng-attr-tabindex ="108" 
								            ng-model="AddEditHourLog.HourLogModel.Notes"></textarea>
								        </div>	
		                             </div>
	                             </div>
								<div class="right_heading_container col-md-12">
								<div class="savecancle_btncntnr  pull-right">
									<button type="button" class="btn btn-default greenBtn pull-right" 
									ng-attr-tabindex ="109" 
									ng-click="AddEditHourLog.SaveHourLogForm();" >{!$Label.Save_Label}</button>
									<button type="button" id="closemodal" ng-keydown="keydownevent()" 
										ng-attr-tabindex ="110" 
										class="btn btn-default grayBtn pull-right hourlogMR" ng-click="AddEditHourLog.closePopup();">{!$Label.Cancel_Label}</button>
									
								</div>
							</div>
					
					</div>
				</div>
			</div>
		</div>
	</div>

</apex:component>