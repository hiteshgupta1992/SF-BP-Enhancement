<apex:component id="SalesTaxesListComp" controller="BlackPurlContentCtrl">
    <!-- Component Attributes -->
    <apex:attribute name="uniqueId" required="true" type="String" description="unique Id for components here."/>
    
        <body>
            <span id="{!uniqueId}Notification"></span>


            <div id="{!uniqueId}grid" style="width:100%"></div>
            <div class="{!uniqueId}waitingSearchDiv"   > 
                <img class="waitingImage" src="{!URLFOR($Resource.Images, '/loading.gif')}" title="Please Wait..." />
            </div>

        </body>
        <style>
            .bpGridAddButton {
                float:left;
                position:relative;

            }


            .bpGridRowSelected {
                text-align:left;

            }


            .ob-center {
                text-align:center;
            }


            .ob-right {
                text-align:center;
            }










        </style>
        <script>
            


            var {!uniqueId}currentRowIndex = -1;
            var {!uniqueId}firstClickEvent = true;
            var {!uniqueId}salesTaxDefaultConfirm = true;
            var {!uniqueId}salesTaxDefaultClickEventName = '';
            var {!uniqueId}prevDefaultRowIndex = -1;
            var EditRowStatus=false;
            var Ajaxstatus=0;
             
            $(document).ready(function () {
                // Notification Popup
                {!uniqueId}popupNotification = $("#{!uniqueId}Notification").kendoNotification({
                    // hide automatically after 2 seconds
                    autoHideAfter: 5000,
                    // prevent accidental hiding for 100 mili-second
                    allowHideAfter: 100,
                    // prevent to show a hide button
                    button: false,
                    // allow hiding by clicking on the notification content
                    hideOnClick: true,
                    // Set animation to false
                    animation: false
                }).data("kendoNotification");




                // Load grid here
                {!uniqueId}loadSalesTaxGrid();
                
                if({!uniqueId}salesTaxGrid == null){
                    {!uniqueId}salesTaxGrid = $("#{!uniqueId}grid").data("kendoGrid");
                }
                
                $("#{!uniqueId}grid").data().kendoGrid.dataSource.bind('requestStart', {!uniqueId}start);
                $("#{!uniqueId}grid").data().kendoGrid.dataSource.bind('requestEnd', {!uniqueId}end );
                
                function {!uniqueId}start(){
                    

                    
                    $(".{!uniqueId}waitingSearchDiv").show();//i.e. make your loading gif visible
                    
                }
                
                function {!uniqueId}end(){
               
                    
                    
                    $(".{!uniqueId}waitingSearchDiv").hide();//i.e. make your loading gif visible
                   
                }
                
                // Load document click bindings
                $(document).on('click', function (event) {
                    if($(event.target).attr('class').indexOf("overlay") == -1)
                    {

                            {!uniqueId}ST_DocOnClikcBindings(event);
                            if( {!uniqueId}salesTaxGrid.editable != null && ({!uniqueId}salesTaxGrid.editable.validatable.validate())){
                                {!uniqueId}toggleSTToolbarButtons(false);
                            }
                    }

                });
                











                /********** Bind all Sales Tax events here  ************/
                {!uniqueId}salesTaxGrid.element.on("click", "tbody>tr>td", "click", function (event) {
                    {!uniqueId}STGridCellSingleClickEvent(this);
                    
                    event.stopPropagation();
                });
                
                $("#{!uniqueId}ST_Add_Button", {!uniqueId}salesTaxGrid.element).on("click", function (event) {
                    {!uniqueId}STGridAddButtonClickEvent();
                    
                    event.stopPropagation();
                });
                
                $("#{!uniqueId}ST_Clone_Button", {!uniqueId}salesTaxGrid.element).on("click", function (event) {
                    {!uniqueId}STGridCloneButtonClickEvent();
                    
                    event.stopPropagation();
                });
                
                $("#{!uniqueId}ST_Delete_Button", {!uniqueId}salesTaxGrid.element).on("click", function (event) {
                    {!uniqueId}STGridDeleteButtonClickEvent();
                    
                    event.stopPropagation();
                });
                
                /********** Unbind Category drop down click  ************************/
                {!uniqueId}salesTaxGrid.element.on("click", "tbody>tr>td>span.k-dropdown", "click", function (event) {
                    $(document).unbind('click');
                    event.stopPropagation();
                });
                
                {!uniqueId}salesTaxGrid.element.on("change", "tbody>tr>td>span.k-dropdown", "change", function (event) {
                    var delta = 200;
                    var timeout = false;
                        event.stopPropagation();
                        if (timeout === false) {
                            setTimeout(CallBinds, delta);
                        }
                });
                
                function CallBinds() {
                    $(document).bind('click', function (event) {
                            {!uniqueId}ST_DocOnClikcBindings(event)
                            if( {!uniqueId}salesTaxGrid.editable != null && ({!uniqueId}salesTaxGrid.editable.validatable.validate())){
                                {!uniqueId}toggleSTToolbarButtons(false);
                            }
                        });
                    }
            });
            
            // Method: Load the grid

            function {!uniqueId}loadSalesTaxGrid(){
            
                // Grid Data Source
                var salesTaxGridDataSource = new kendo.data.DataSource({


                    transport: {
                        read: function (options) {

                            // make AJAX request to the remote service
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.BlackPurlContentCtrl.getJSONForAllSalesTax}',
                                function(result, event){
                                    if (event.type == 'exception') {
                                        {!uniqueId}showPopupNotification(event.message, "error");

                                    } else {
                                        var salesTaxes = decodeString(result);
                                        var find = '\'';
                                        var re = new RegExp(find, 'g');
                                        salesTaxes = salesTaxes.replace(re,'');
                                        salesTaxes = JSON.parse(salesTaxes);
                                        if(salesTaxes.length==0)
                                        {
                                         {!uniqueId}showPopupNotification('No records found ','info');
                                        }

                                        options.success(salesTaxes);
                                    }
                            },
                            {escape: true}
                            );





                        }
                    },


                    create:function(e)
                    {

                        return false;
                    },

                    update:function(e)
                    {

                        return false;
                    },




                    schema: {

                        model: {
                            Id: "ST_Id",
                            fields: {
                                ST_Name: {
                                    type: "string", 
                                    validation : {
                                        required:{message: "Sales Tax Name is required"},
                                        salesTaxNamevalidation: function (input) {
                                            var count = 0;
                                            if(input.is("[name='ST_Name']")) {
                                                var data = salesTaxGridDataSource.data();
                                                $.each( data, function( item, dataVal ) {
                                                    if(data[item]["ST_Name"].trim().toLowerCase() == input.val().trim().toLowerCase() ){
                                                        count += 1;
                                                    }
                                                });
                                            }
                                            if(count>1) {
                                            
                                            }else { 
                                                input.attr("data-salesTaxNamevalidation-msg", "Sales Tax Name already exists");
                                                return true;
                                            }
                                        },
                                        salesTaxNameSpecialCharValidation: function (input, params) {
                                            //check for the name attribute 
                                            if (input.filter("[name='ST_Name']").length && input.val()) {
                                                var a=!/[^a-zA-Z0-9 ]/.test(input.val());
                                                if(!a){
                                                    input.attr("data-salesTaxNameSpecialCharValidation-msg", "Enter an alphanumeric value");
                                                    return false;
                                                }
                                            }    
                                            return true;
                                        },
                                        salesTaxNameLengthValidation: function (input, params) {

                                            input.val(input.val().trim());
                                            if (input.is("[name='ST_Name']") && input.val().length > 80) {

                                                input.attr("data-salesTaxNameLengthValidation-msg", "Cannot exceed 80 characters");
                                                return false;
                                            } else if (input.is("[name='ST_Name']") && input.val().length == 0){
                                                input.attr("data-salesTaxNameLengthValidation-msg", "Cannot be Blank");
                                                return false;
                                            }
                                            
                                            return true;
                                        }
                                    }
                                },
                                ST_Active: { type: "boolean" },
                                ST_Rate: { 
                                    type: "number", editable: false,
                                    validation: { min: 0, max: 100 }
                                },
                                ST_Forms_Label: {
                                    type: "String",
                                    validation : {
                                        formLabelLengthValidation: function (input, params) {

                                            input.val(input.val().trim());
                                            if (input.is("[name='ST_Forms_Label']") && input.val().length > 20) {
                                                input.attr("data-formLabelLengthValidation-msg", "Cannot exceed 20 characters");
                                                return false;

                                            } 
                                            
                                            return true;


                                        },



                                        formLabelreq: function (input, params) {
                                            input.attr("data-formLabelreq-msg", "Required as 'List Tax Items In Forms' is not selected");
                                            
                                            if (input.is("[name='ST_Forms_Label']") && $(input).val().trim().length == 0) {
                                                var listFormLabelSelected = $(input).closest("tr").find("td>[name='ST_Forms_List_Taxes']").is(":checked");
                                                if(listFormLabelSelected == false){
                                                    return false;
                                                }
                                            }
                                            return true;
                                        }
                                    }
                                },
                                ST_Forms_List_Taxes : { type: "boolean" },
                                ST_Default: { type: "boolean", class:"ob-center" },
                                ST_Order: { type:"number", defaultValue:1 }
                            }
                        }
                    }
                });
                



                // Method: Load Data Grid here
                $("#{!uniqueId}grid").kendoGrid({
                    toolbar: [
                        {
                            name: "Add",
                            template: '<img src="{!URLFOR($Resource.Images, '/add.jpg')}" class="bpGridAddButton" id="{!uniqueId}ST_Add_Button">',
                            text: "Add New Sales Tax Item",
                            click: function(e){return false;}
                        },
                        {
                            name: "my-extra",
                            template: '<div class="rightFloatDiv"><div class="leftFloatDiv"><img src="{!URLFOR($Resource.Images, '/copy.png')}" class="my-clone-default" id="{!uniqueId}ST_Clone_Button"/></div><div class="rightFloatDiv"><img src="{!URLFOR($Resource.Images, '/delete.png')}" class="my-delete-default" id="{!uniqueId}ST_Delete_Button"/></div></div>'
                        }
                    ],
                    columns: [
                            {
                                field:"ST_Name", title:"Sales Tax Name", width: "35%",
                                template: "<span title=\'${ST_Name}\'>${ST_Name}</span>"
                            },
                            {
                                field: "ST_Rate", title: "Rate", width: "8%", align:"center",
                                template: '#=kendo.format("{0:p}", ST_Rate / 100)#'
                            },
                            {
                                field:"ST_Forms_Label",title:"Forms Label", width: "20%",
                                template: "<span title=\'${ST_Forms_Label}\'>${ST_Forms_Label}</span>"
                            },
                            {
                                field: "ST_Forms_List_Taxes", title: "List Tax items on forms", width: "17%", attributes:{ class:"ob-center" },
                                template: '<img style="align:center"  #= ST_Forms_List_Taxes ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>'
                            },
                            {
                                field: "ST_Default", title: "<span style=\'margin-left:14%\'>Default</span>", width: "9%", attributes:{ class:"ob-center" },
                                template: '<img  #= ST_Default ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>'
                            },
                            {
                                field: "ST_Active", title: "<span style=\'margin-left:15%\'>Active</span>", width: "8%",attributes:{ class:"ob-center" },
                                template: '<img  #= ST_Active ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>' 
                            }
                        ],

                         detailInit:  function (e)
                        {
                                 if($("#{!uniqueId}grid").data("kendoGrid").tbody.children().hasClass("k-grid-edit-row"))
                                 {
                                 }
                                 else
                                 {
                                
                                    {!uniqueId}initSalesTaxItemsGrid(e);
                                
                                }
                        },

                        dataSource: salesTaxGridDataSource,
                        scrollable:false,
                        sortable: {
                            mode: "single",
                            allowUnsort: false
                        },



                        reorderable: true,
                        dataBound: {!uniqueId}onSTDataBound,
                        selectable: "single",



                        editable: {
                            mode: "inline",
                            confirmation: false,
                            update: false
                        },
                        edit:function(e)
                            {   
                                    
                                    
                                    e.sender.unbind('dataBound');
                                    {!uniqueId}firstClickEvent = true;
                                    
                                    var input = e.container.find("input[name='ST_Name']");      
                                    input.focus();

                            },
                            save:function(e)
                            {
                                this.editable.end();
                            }
                });
            }
            
            // Sales Tax Grid Instance
            var {!uniqueId}salesTaxGrid = $("#{!uniqueId}grid").data("kendoGrid");
            
            function {!uniqueId}gridChange(currElem){
                {!uniqueId}currentRowIndex = this.select().index();
            } 
            
            // Method: click bindings for document click
            function {!uniqueId}ST_DocOnClikcBindings(event){

                var isSuccessfullySaved = {!uniqueId}validateAndSaveSTRow();
            }
            
            function {!uniqueId}STGridCellSingleClickEvent(thisElem){
                // Check if selected row is alreadey in edited mode
            
                   



                    var HaschildEdit=$('.k-detail-row').find('td.k-detail-cell #SalesTaxes_STIGrid').find('tr.k-grid-edit-row').hasClass('k-grid-edit-row');

                if($(thisElem).parent().hasClass('k-grid-edit-row')) {
                
                    
                }else {
                    var isSuccessfullySaved = true;

                 
                    
                  var hasEditedRow = {!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row");
                    if(hasEditedRow) {
                        // Save


                        isSuccessfullySaved = {!uniqueId}validateAndSaveSTRow();
                    }
                    

                    if(isSuccessfullySaved) {
                    if(HaschildEdit)
                         {
                         
                         $("#{!uniqueId}grid").data("kendoGrid").clearSelection();
                                {!uniqueId}salesTaxGrid.select( $('.k-detail-row').find('td.k-detail-cell #SalesTaxes_STIGrid').find('tr.k-grid-edit-row'));
                            
                       }
                       else
                       {
                                    {!uniqueId}toggleSelectedRowClass($(thisElem).parent());
                                    {!uniqueId}toggleSTToolbarButtons(!(isSuccessfullySaved && hasEditedRow));

                                   if({!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row"))
                                    {
                                    
                                    }
                                    else
                                    {

                                        
                                                $("#{!uniqueId}grid").data("kendoGrid").editRow($(thisElem).parent());

                                        
                                            
                                                
                                                
                                    } 
                        }

                        
                        // Unique DEFAULT bind
                        $( "#{!uniqueId}grid input[name='ST_Default']").on("change", function (event) {
                            checkExistingDefault_Global(this, 
                                                        'ST_Name', 'ST_Default', 'ST_Active', 
                                                        '{!uniqueId}grid', 'Sales Tax', {!uniqueId}currentRowIndex,
                                                        {!uniqueId}showPopupNotification
                                                    );

                        });
                        
                        // Unique ACTIVE bind
                        $( "#{!uniqueId}grid input[name='ST_Active']").on("change", function (event) {
                            checkExistingDefaultActive_Global(this, 
                                                              'ST_Name', 'ST_Default', 'ST_Active', 
                                                              '{!uniqueId}grid', 'Sales Tax', {!uniqueId}currentRowIndex,
                                                              {!uniqueId}showPopupNotification
                                                             );

                        });
                    }else{
                        if({!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row")) {
                            var existingEditedCells = $("#{!uniqueId}grid .bpGridRowSelected");
                            {!uniqueId}salesTaxGrid.select( $(existingEditedCells[0]).parent() );
                        }
                        }
                    }


                

            }
            function {!uniqueId}STGridAddButtonClickEvent(){
                if({!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row")) {
                    // Save
                    {!uniqueId}validateAndSaveSTRow();
                }else {
                    {!uniqueId}addNewSalesTaxRow(null);
                }
            }
            
            function {!uniqueId}STGridCloneButtonClickEvent(){
                if({!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row")) {
                    if(({!uniqueId}salesTaxGrid.editable.validatable.validate())){
                        var rowData = {!uniqueId}getSelectedSalesTaxRowData(false);
                        if(rowData != null && rowData.ST_Id != null && rowData.ST_Id != ""){
                            {!uniqueId}addNewSalesTaxRow(rowData);


                        }

                    }
                }
            }
            
            function {!uniqueId}addNewSalesTaxRow(rowData){
                var dataSource = {!uniqueId}salesTaxGrid.dataSource;
                var total = dataSource.data().length;
                dataSource.insert(total, {
                    "ST_Id": "",
                    "ST_Name" : (rowData == null) ? "" : (getClonedName(rowData.ST_Name)),
                    "ST_Forms_Label" : (rowData == null) ? "" : rowData.ST_Forms_Label,
                    "ST_Rate" : (rowData == null) ? 0.00 : rowData.ST_Rate,
                    "ST_Forms_List_Taxes" : (rowData == null) ? true : rowData.ST_Forms_List_Taxes,
                    "ST_Active" : (rowData == null) ? true : rowData.ST_Active,

                    "ST_Default" : false,
                    "ST_Order":0
                });
                dataSource.page(dataSource.totalPages());
                
                var newRowToAdd = {!uniqueId}salesTaxGrid.tbody.children().last();
                {!uniqueId}salesTaxGrid.editRow(newRowToAdd);
                   //EditRowStatus=true;
                
                {!uniqueId}prevDefaultRowIndex = -1;
                var gridData = {!uniqueId}salesTaxGrid.dataSource.data();
                for(var item = 0; item < gridData.length; item++){
                    {!uniqueId}prevDefaultRowIndex++;
                    if( gridData[item].ST_Default == true ){
                        break;
                    }
                }
                
                // Unique DEFAULT bind
                $( "#{!uniqueId}grid input[name='ST_Default']").on("change", function (event) {
                    checkExistingDefault_Global(this, 
                                                'ST_Name', 'ST_Default', 'ST_Active', 
                                                '{!uniqueId}grid', 'Sales Tax', {!uniqueId}currentRowIndex,
                                                {!uniqueId}showPopupNotification
                                            );

                });
                
                // Unique ACTIVE bind
                $( "#{!uniqueId}grid input[name='ST_Active']").on("change", function (event) {
                    checkExistingDefaultActive_Global(this, 
                                                  'ST_Name', 'ST_Default', 'ST_Active', 
                                                  '{!uniqueId}grid', 'Sales Tax', {!uniqueId}currentRowIndex,
                                                  {!uniqueId}showPopupNotification
                                                );

                });
                
                {!uniqueId}toggleSelectedRowClass(newRowToAdd);
                {!uniqueId}toggleSTToolbarButtons("TF");
            }
            
            function getClonedName(originalName) {
                var dataSource = {!uniqueId}salesTaxGrid.dataSource;
                var total = dataSource.data().length;
                var originalNameWithoutCounter;
                
                var cloneName = originalName + ' Copy';
                var countToBeAppend = 0;
                var isLoopExecuted = false;
                for(var i = 0; i < total ; i++ ) {
                    if(dataSource.at(i).ST_Name.search(cloneName) != -1) {
                        isLoopExecuted = true;
                        var lastIndex = dataSource.at(i).ST_Name.lastIndexOf(" Copy");
                        var counter = dataSource.at(i).ST_Name.substr(lastIndex + 5, dataSource.at(i).ST_Name.length);
                        if(countToBeAppend < +counter) {
                            countToBeAppend = +counter;
                        }
                    }
                }
                
                if(countToBeAppend == 0) {
                    if(isLoopExecuted) {
                        return cloneName + '1'; 
                    } else {
                        return cloneName;
                    }
                } else {
                    countToBeAppend++;
                    return cloneName + countToBeAppend;
                }
            }
            
            var confirmDeleteSalesTaxRecord = function(isConfirmed){
                if(!isConfirmed){



                    return;
                }






                var rowData = {!uniqueId}getSelectedSalesTaxRowData(true);






                var salesTaxRecId = rowData.ST_Id;
                
                if(salesTaxRecId == null || salesTaxRecId == ''){
                    {!uniqueId}refreshGridLocallySalesTax(rowData);
                }else{
                    Visualforce.remoting.Manager.invokeAction(  '{!$RemoteAction.BlackPurlContentCtrl.deleteSalesTax}',
                                                             encodeString(salesTaxRecId),
                                                                function(result, event){
                                                                    if (event.status) {
                                                                        // Successfully deleted record
                                                                        {!uniqueId}refreshGridLocallySalesTax(rowData);
                                                                        {!uniqueId}toggleSTToolbarButtons(false);
                                                                        EditRowStatus=false;
                                                                    } else if (event.type === 'exception') {


                                                                        {!uniqueId}showPopupNotification(event.message, "error");

                                                                    } else {


                                                                        {!uniqueId}showPopupNotification(event.message, "error");

                                                                    }
                                                                },
                                                                {escape: true}
                                                            );
                }
            }
            
            function {!uniqueId}STGridDeleteButtonClickEvent(){
                var rowData = {!uniqueId}getSelectedSalesTaxRowData(true);
                if(rowData == null){
                    return;
                }
                
                if(rowData.ST_Id != null && rowData.ST_Id.length > 0 && rowData.ST_Default == true){
                    {!uniqueId}showPopupNotification('Cannot delete a default Sales Tax record.', "error");
                    return;
                }
                
                if(rowData.ST_Id != null && rowData.ST_Id.length > 0 && rowData.ST_Default == true){
                    {!uniqueId}showPopupNotification('Cannot delete a default Sales Tax record.', "error");
                    return;
                }
                
                var delConfirmMsg = "Are you sure that you want to delete record for " + rowData.ST_Name + "?";
                delConfirmMsg = escapeHTML(delConfirmMsg);
                confirmAction("Confirm Delete", delConfirmMsg, confirmDeleteSalesTaxRecord);
            }
            
            function {!uniqueId}getSelectedSalesTaxRowData(isToDelInCase){
                var rowIndex = {!uniqueId}salesTaxGrid.select().closest("tr");
                if(rowIndex.length == 0){
                    if(isToDelInCase){
                        {!uniqueId}deleteNewEditingRowInSTGrid();
                    }
                    return null;
                }else{
                    var rowData = {!uniqueId}salesTaxGrid.dataItem(rowIndex);
                    if(rowData.ST_Id != ""){
                        return rowData;
                    }else if( ({!uniqueId}salesTaxGrid.editable.validatable.validate()) == false ){
                        if(isToDelInCase){
                            {!uniqueId}deleteNewEditingRowInSTGrid();
                        }
                        return null;
                    }
                }
                var rowData = {!uniqueId}salesTaxGrid.dataItem(rowIndex);
                return rowData;
            }
            
            function {!uniqueId}deleteNewEditingRowInSTGrid(){
                if({!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row")) {
                    var existingEditedCells = $("#{!uniqueId}grid .bpGridRowSelected");
                    {!uniqueId}refreshGridLocallySalesTax( $(existingEditedCells[0]).parent() );
                    {!uniqueId}toggleSTToolbarButtons(false);
                }
                
                // Select previous default checkbox again
                if({!uniqueId}prevDefaultRowIndex != -1){
                    var gridDataSource = $("#{!uniqueId}grid").data("kendoGrid").dataSource;
                    var prevDefaultRow = gridDataSource.view()[{!uniqueId}prevDefaultRowIndex];
                    if(prevDefaultRow != null){
                        prevDefaultRow.set("ST_Default", true);
                    }
                }
                {!uniqueId}prevDefaultRowIndex = -1;
            }
            
            // Validate and Save row
            function {!uniqueId}validateAndSaveSTRow(){
                if( {!uniqueId}salesTaxGrid.editable != null && ({!uniqueId}salesTaxGrid.editable.validatable.validate())){

                    {!uniqueId}saveSalesTax();






                    return true;
                }else {
                    return false;
                }
            }
            

            // Currently not in use
            function doesDataSourceHaveChanges(){
                var gridDataSource = {!uniqueId}salesTaxGrid.dataSource;
                var dirty = false;
                $.each(gridDataSource._data, function () {
                    if (this.dirty == true) {
                        dirty = true;
                    }
                });
            
                if (gridDataSource._destroyed.length > 0) dirty = true;
            

                return dirty;
            }
            
            function {!uniqueId}saveSalesTax(){
           



                if({!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row")) {
            


                    if(({!uniqueId}salesTaxGrid.editable.validatable.validate())) {
                        var rowIndex = {!uniqueId}salesTaxGrid.tbody.find(".k-grid-edit-row");



                        if(rowIndex.length == 0){
                            return;
                        }
                    

                        var rowData = JSON.stringify({!uniqueId}salesTaxGrid.dataItem(rowIndex));



                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.BlackPurlContentCtrl.saveSalesTaxJSON}',
                                                                            encodeString(rowData),
                                                                            function(result, event){

                                                                                if (event.status) {
                                                                                    

                                                                                    {!uniqueId}refreshGridSalesTax();
                                                                                   {!uniqueId}showPopupNotification("Saved", "success");

                                                                                }else if (event.type === 'exception') {
                                                                                    {!uniqueId}showPopupNotification(event.message, "error");

                                                                                } else {
                                                                                    {!uniqueId}showPopupNotification(event.message, "error");

                                                                                }
                                                                            },
                                                                            {escape: true}
                                );


                    }


                }
            }
            



























































































            // Refresh the grid:
            function {!uniqueId}refreshGridSalesTax(){
                {!uniqueId}salesTaxGrid.dataSource.read();
                {!uniqueId}salesTaxGrid.refresh();
                
            }
            
            // Refresh grid locally
            function {!uniqueId}refreshGridLocallySalesTax(rowData){
                
                {!uniqueId}salesTaxGrid.removeRow(rowData);
                {!uniqueId}salesTaxGrid.dataSource.remove(rowData);
                
                {!uniqueId}showPopupNotification("Deleted", "success");

            }
            
            function {!uniqueId}removeSelectedRowsClass(){
                var selectedRows = $("#{!uniqueId}grid .bpGridRowSelected");
                for(var rowNum = 0; rowNum < selectedRows.length; rowNum++){
                    lastColumnOfSelectedRow = $(selectedRows[rowNum]);
                    lastColumnOfSelectedRow.removeClass("bpGridRowSelected");
                }
            }
            
            function {!uniqueId}toggleSelectedRowClass(selectedRow){
                // If previouslySelectedRow
                var selectedCellElem = $(selectedRow.children()[0]);
                var previouslySelectedRow = (selectedCellElem.attr("class") == "bpGridRowSelected") ? true : false;
                
                var lastColumnOfSelectedRow;
                if(!previouslySelectedRow){
                    for(var i = 0; i < selectedRow.children().length; i++){
                        lastColumnOfSelectedRow = $(selectedRow.children()[i]);
                        lastColumnOfSelectedRow.addClass("bpGridRowSelected");
                    }
                }
            }
                
            function {!uniqueId}toggleSTToolbarButtons(makeActive){
                var tempMakeActive = makeActive;
                if(makeActive == "TF"){
                    makeActive = true;
                }
                var cloneButton = $("#{!uniqueId}ST_Clone_Button");
                var deleteButton = $("#{!uniqueId}ST_Delete_Button");
                
                if(makeActive){
                    // Show operations buttons in toolbar
                    cloneButton.removeClass("my-clone-default");
                    cloneButton.addClass("my-clone-active");
                    
                    deleteButton.removeClass("my-delete-default");
                    deleteButton.addClass("my-delete-active");
                    
                    cloneButton.prop('title', 'Clone');
                    deleteButton.prop('title', 'Delete');
                }else{
                    deleteButton.addClass("my-delete-default");
                    deleteButton.removeClass("my-delete-active");
                    
                    deleteButton.removeAttr('title');
                }
                
                if(!makeActive || tempMakeActive == "TF"){
                    // hide operations buttons in toolbar
                    cloneButton.addClass("my-clone-default");
                    cloneButton.removeClass("my-clone-active");
                    



                    cloneButton.removeAttr('title');

                }
            }
            
            function {!uniqueId}onSTDataBound(e) {
                $("#{!uniqueId}grid").find(".k-grid-toolbar").insertAfter($("#{!uniqueId}grid").children()[1]);
                $(".k-grid-toolbar").css("background-color", "#ffffff");
                $(".k-grid-toolbar").css("border-bottom", " solid 1px #ccc");
                $(".k-grid-toolbar").css("border-top", "none");
                $(".k-grid-toolbar").css("height", "25px");
                $(".k-grid-toolbar").css("vertical-align", "middle");
                
               $(".bpGridAddButton").prop('title', 'Add');
                
                {!uniqueId}salesTaxGrid.bind('edit', {!uniqueId}gridChange);
            }
            
            // Category picklist
            var {!uniqueId}categoryDatasource = JSON.parse(decodeString('{!CategoryPicklistValues}'));
            
            var dropdownSelected = false;
            function {!uniqueId}categoryDropDownEditor(container, options) {
                $('<input data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({      
                        dataTextField: "Name",
                        dataValueField: "Value",
                        dataSource: {!uniqueId}categoryDatasource,
                        change: function(e){
                            dropdownSelected = true;
                            e.preventDefault();
                        }
                });
            }
            




            function {!uniqueId}getCategoryName(category) {
                if(category == null || category.trim().length == 0 || {!uniqueId}categoryDatasource == null) return '';
                for (var idx = 0, length = {!uniqueId}categoryDatasource.length; idx < length; idx++) {
                    if ({!uniqueId}categoryDatasource[idx].Value === category) {
                        return {!uniqueId}categoryDatasource[idx].Name;
                    }
                }
            }
            
            /***************************************    SALES TAX ITEMS Methods     *****************************************/
            function {!uniqueId}initSalesTaxItemsGrid(e) {


                var ParentSalesTaxID = e.data.ST_Id ;
                if(e.data.ST_Name == null || e.data.ST_Name.trim().length == 0){
                    return;
                }
                
                var salesTaxITEMGridDataSource = new kendo.data.DataSource({
                    transport: {
                        read: function (options) {
                            
                            // make AJAX request to the remote service
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.BlackPurlContentCtrl.getJSONForSalesTaxWrapper}',
                                encodeString(ParentSalesTaxID),
                                function (result, event) {
                                    
                                    if (event.type == 'exception') {
                                        {!uniqueId}showPopupNotification(event.message, "error");

                                    } else {
                                           
                                            var salesTaxItems = decodeString(result);
                                            var find = '\'';
                                            var re = new RegExp(find, 'g');
                                            salesTaxItems = salesTaxItems.replace(re,'');
                                            
                                            salesTaxItems = JSON.parse(salesTaxItems);
                                            options.success(salesTaxItems);
                                    } // End else
                                },
                                {escape: true}
                            );
                        }
                    },
                    schema: {
                        model: {
                            Id: "STI_Id",
                            fields: {
                                STI_Name: {
                                    type: "string", 
                                    validation : {
                                        required:{message: "Sales Tax Item Name is required"},
                                        salesTaxITEMNameUniqueValidation: function (input) {
                                            var count = 0;
                                            if(input.is("[name='STI_Name']")) {
                                                var data = salesTaxITEMGridDataSource.data();
                                                $.each( data, function( item, dataVal ) {
                                                    if(data[item]["STI_Name"] == input.val() ){
                                                        count += 1;
                                                    }
                                                });
                                            }
                                            if(count>1) {
                                            
                                            }else { 
                                                input.attr("data-salesTaxITEMNameUniqueValidation-msg", "Sales Tax Item Name already exists");
                                                return true;
                                            }
                                        },
                                        salesTaxITEMNameSpecialCharValidation: function (input, params) {
                                            //check for the name attribute 
                                            if (input.filter("[name='STI_Name']").length && input.val()) {
                                                var a=!/[^a-zA-Z0-9 ]/.test(input.val());
                                                if(!a){
                                                    input.attr("data-salesTaxITEMNameSpecialCharValidation-msg", "Enter an alphanumeric value");
                                                    return false;
                                                }
                                            }    
                                            return true;
                                        },
                                        salesTaxITEMNameLengthValidation: function (input) {

                                            input.val(input.val().trim());
                                            if (input.is("[name='STI_Name']") && input.val().length > 80) {
                                                input.attr("data-salesTaxITEMNameLengthValidation-msg", "Max length exceeded, 80 characters only");
                                                return false;
                                            } else if (input.is("[name='STI_Name']") && input.val().length == 0){
                                                input.attr("data-salesTaxITEMNameLengthValidation-msg", "Cannot be Blank");
                                                return false;
                                            }
                                            
                                            return true;
                                        }
                                    }
                                },
                                STI_Id: { type: "string" },
                                ST_Id :{ type: "string" },
                                Is_included:{type:"boolean"},
                                STI_Active:{type:"boolean"},
                                STI_Rate:{ 
                                    type: "number",

                                    validation: { 
                                    STIRateValueValidation : function (input, params) {
                                        
                                        if (input.filter("[name='STI_Rate']").length && input.val()) {




                                                     
                                                     
                                                              if(input.val() > 100) {
                                                        input.attr("data-STIRateValueValidation-msg", "Rate cannot exceed 100%");
                                                        return false;
                                                     }
                                                     else if(input.val() < 0)
                                                     {
                                                        input.attr("data-STIRateValueValidation-msg", "Rate cannot be Negative");
                                                        return false;
                                                     
                                                     } 
                                            
                                            }    
                                            
                                             return true;
                                            
                                           
                                        }
                                    }

                                },
                                STI_Tax_Parts : {type:"boolean"},
                                STI_Tax_Labour :{type:"boolean"},
                                STI_Tax_Units :{type:"boolean"},
                                STI_Tax_Misc : {type:"boolean"},
                                STI_Forms_Label : {
                                    type:"string",
                                    validation: {
                                        required:  {message: "Forms Label is required" },
                                        salesTaxITEMFormLabelLengthValidation: function (input) {
                                            input.val(input.val().trim());
                                            if (input.is("[name='STI_Forms_Label']") && input.val().length > 20) {
                                                input.attr("data-salesTaxITEMFormLabelLengthValidation-msg", "Max length exceeded, 20 characters only");





                                                return false;
                                            }
                                            
                                            return true;
                                        }
                                    }
                                },
                                STI_Active : {type:"boolean"},
                                STI_Category : {type:"string"}
                            }
                        }
                    },
                   
                 });
                 
                 // Append grid to detail cell
                 $("<div class=\'STIGridClass\' id=\'{!uniqueId}STIGrid\'/>").appendTo(e.detailCell).kendoGrid({
                    dataSource: salesTaxITEMGridDataSource,
                    toolbar: [
                                {
                                    name: "AddChild",
                                    template: '<img src="{!URLFOR($Resource.Images, '/add.jpg')}" id="{!uniqueId}STI_Add_Button" class="bpGridAddButton" />',
                                    click: function(e){return false;}
                                },
                                {
                                    name: "my-extra",
                                    template: '<div class="rightFloatDiv"><div class="leftFloatDiv"><img src="{!URLFOR($Resource.Images, '/copy.png')}" class="my-clone-default" id="{!uniqueId}STI_Clone_Button"/></div><div class="rightFloatDiv"><img src="{!URLFOR($Resource.Images, '/delete.png')}" class="my-delete-default" id="{!uniqueId}STI_Delete_Button"/></div></div>'
                                }
                    ],
                    columns: [
                        {
                            field: "Is_included", title: "<span style=\'margin-left:3%\'>Selected</span>", width: "11%" ,attributes:{ class:"ob-center" } ,
                            template: '<img  #= Is_included ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>'
                        },
                        {
                            field:"STI_Name",title:"Tax Name", width: "15%"
                        },
                        {
                            field:"STI_Rate",title:"Rate", width: "10%" ,
                            template: '#=kendo.format("{0:p}", STI_Rate / 100)#' 
                        },
                        {
                            field: "STI_Tax_Parts", title: "<span style=\'margin-left:17%\'>Taxes : Parts </span>", width: "15%",attributes:{ class:"ob-right" } ,
                            template: '<img  #= STI_Tax_Parts ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>'
                        },
                        {
                            field: "STI_Tax_Labour", title: "<span style=\'margin-left:17%\'>Labour</span>", width: "10%",attributes:{ class:"ob-center" } ,
                            template: '<img  #= STI_Tax_Labour ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>'
                        },
                        {
                            field: "STI_Tax_Units", title: "<span style=\'margin-left:17%\'>Units </span>", width: "9%",attributes:{ class:"ob-center" } ,
                            template: '<img  #= STI_Tax_Units ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>'
                        },
                        {
                            field: "STI_Tax_Misc", title: "<span style=\'margin-left:18%\'>Misc</span>", width: "9%" ,attributes:{ class:"ob-center" },
                            template: '<img  #= STI_Tax_Misc ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>'
                        },
                        {
                            field:"STI_Forms_Label",title:"Forms Label", width: "13%"
                        },  
                        {
                            field:"STI_Category",title:"Category", width: "10%", editor: {!uniqueId}categoryDropDownEditor,
                            template: "#={!uniqueId}getCategoryName(STI_Category)#"
                        },  
                        {
                            field: "STI_Active", title: "<span style=\'margin-left:17%\'>Active</span>", width: "10%", attributes:{ class:"ob-center" },
                            template: '<img  #= STI_Active ? "src={!URLFOR($Resource.Images, '/Check_Selected.png')}" : "src=/img/checkbox_unchecked.gif"#  ></input>'
                        }
                    ],
                    editable: {
                        mode: "inline",
                        confirmation: false
                    },
                    sortable: {
                           mode: "single",
                           allowUnsort: false
                    },
                    scrollable: false,
                    reorderable: false,
                    dataBound: {!uniqueId}onSTLDataBound,
                    selectable: "single"
                 });
                 








                function {!uniqueId}toggleSTIToolbarButtons(currElem, makeActive){
                    var tempMakeActive = makeActive;
                    if(makeActive == "TF"){
                        makeActive = true;
                    }
                    {!uniqueId}removePrevActive();
                    
                    var cloneButton = $(currElem).closest("#{!uniqueId}STIGrid").find(".k-grid-toolbar").find("#{!uniqueId}STI_Clone_Button");
                    var deleteButton = $(currElem).closest("#{!uniqueId}STIGrid").find(".k-grid-toolbar").find("#{!uniqueId}STI_Delete_Button");
                    
                    if(makeActive){
                        // Show operations buttons in toolbar
                        cloneButton.removeClass("my-clone-default");
                        cloneButton.css("background-color", "#ffffff");;
                        cloneButton.addClass("my-clone-active");
                        
                        deleteButton.removeClass("my-delete-default");
                        deleteButton.addClass("my-delete-active");
                        
                        cloneButton.prop('title', 'Clone');
                        deleteButton.prop('title', 'Delete');
                    }else{
                        deleteButton.addClass("my-delete-default");
                        deleteButton.removeClass("my-delete-active");
                        
                        deleteButton.removeAttr('title');
                    }
                    
                    if(!makeActive || tempMakeActive == "TF"){
                        // hide operations buttons in toolbar
                        cloneButton.addClass("my-clone-default");
                        cloneButton.removeClass("my-clone-active");
                        



                        cloneButton.removeAttr('title');

                    }
                }
                
                function {!uniqueId}removePrevActive(){
                    var clonedActive = $(".rightFloatDiv .my-clone-active");
                    for(var i = 0; i < clonedActive.length; i++){
                        $(clonedActive[i]).removeClass("my-clone-active");
                        $(clonedActive[i]).addClass("my-clone-default");
                    }
                    
                    var deletedActive = $(".rightFloatDiv .my-delete-active");
                    for(var i = 0; i < deletedActive.length; i++){
                        $(deletedActive[i]).removeClass("my-delete-active");
                        $(deletedActive[i]).addClass("my-delete-default");
                    }
                }
                
                // Validate and Save row Sales Tax Item row
                function {!uniqueId}validateAndSaveSTITEMRow(a){
                    if(a.sender.editable.validatable.validate()){
                        {!uniqueId}saveSalesTaxItem(a);
                        return true;
                    }else {
                        return false;
                    }
                }
                
                function {!uniqueId}saveSalesTaxItem(a){
               
                Ajaxstatus=1;

                    if(a.sender.tbody.children().hasClass("k-grid-edit-row")) {
                        if((a.sender.editable.validatable.validate())) {
                            var rowIndex = a.sender.tbody.find(".k-grid-edit-row");
                            if(rowIndex.length == 0){
                                return;
                            }
                        
                            var rowData = JSON.stringify(a.sender.dataItem(rowIndex));
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.BlackPurlContentCtrl.saveSalesTaxItemJSON}',
                                                                                encodeString(rowData),
                                                                                function(result, event){
                                                                                    if (event.status) {

    
                                                                                               Calculate(decodeString(result));

                                                                                       
                                                                                        {!uniqueId}refreshGridSalesTaxItem(a);

                                                                                                  EditRowStatus=false;
                                                                                                  {!uniqueId}showPopupNotification("Saved", "success");

                                                            





                                                                                    }else if (event.type === 'exception') {
                                                                                    Ajaxstatus=0;
                                                                                        {!uniqueId}showPopupNotification(event.message, "error");

                                                                                    } else {
                                                                                    Ajaxstatus=0;
                                                                                        {!uniqueId}showPopupNotification(event.message, "error");

                                                                                    }
                                                                                },

                                                                                {escape: true}
                                    );
                        }
                    }
                }
                

              




              function Calculate(result)
          {
                
                                                                                         
                    var find = '\'';
                 var re = new RegExp(find, 'g');
                 result = result.replace(re,'');
                 result = JSON.parse(result);




                
                var DataJson=result;
                var master= $("#{!uniqueId}grid").find('tr.k-master-row');
                for(var i = 0;i < master.length ; i++)
                {
                            var masteritem=master[i];
                            var uid=$(masteritem).attr('data-uid');
                           

                             var Stid = $("#{!uniqueId}grid").data().kendoGrid.dataSource.getByUid(uid).ST_Id;
                              
                            for(var j=0 ; j < DataJson.length ; j++)
                            {
                                    
                                  if (DataJson[j].ST_Id == Stid){
                                    var STpercent=DataJson[j].ST_Rate
                                    
                                    
                                    if(String(STpercent).indexOf('.') > -1 )
                                    {
                                    
                                            var len=String(STpercent).length - String(STpercent).indexOf('.') ;
                                                if(len==2)
                                                {
                                                    STpercent =STpercent+"0 %";
                                                }
                                                else
                                                {
                                                STpercent =STpercent+" %";
                                                }
                                    
                                    }
                                    else
                                    {
                                    
                                        STpercent =STpercent+".00 %";
                                    }
                                    $(masteritem).find("td:nth-child(3)").html(STpercent);






                                    }   
                            }
                }
            } 
             
             var currElement;
                var currSelectedRow;
                function confirmSTIVisibleSelect(isConfirmed){
                    if(isConfirmed){
                        var currentSTIActive = $(currElement).closest("tr").find("input[name='STI_Active']");
                        $(currentSTIActive).prop('checked', true);
                        if(currSelectedRow != null){
                            currSelectedRow.STI_Active = true;
                        }
                    }else{
                        $(currElement).prop('checked', false);
                        if(currSelectedRow != null){
                            currSelectedRow.Is_included = false;
                        }
                    }
                }
                
                // If Sales Tax Item is selected and its not Active, then alert user if to make it Active and selected
                function {!uniqueId}STICheckSTISelectedActive(currElem, a){
                    currElement = currElem;
                    var currentSTIActive = $(currElem).closest("tr").find("input[name='STI_Active']");
                    var currRow = {!uniqueId}getSelectedSalesTaxItemRowData(a, false);
                    currSelectedRow = currRow;
                    
                    if(currentSTIActive.is(":checked") == false){
                        var updateConfirmMsg = "This item will be marked as ACTIVE and set as SELECTED. Do you want to proceed?";
                        
                        updateConfirmMsg = escapeHTML(updateConfirmMsg);
                        confirmAction("Confirm Update", updateConfirmMsg, confirmSTIVisibleSelect);











                    }
                }
                
                // If Sales Tax Item is selected and set to non-Active, then alert user that he cannot set the record as Inactive
                function {!uniqueId}STICheckSTIActive(currElem, a){
                    var currentSTISelected = $(currElem).closest("tr").find("input[name='Is_included']");
                    if(currentSTISelected.is(":checked") == true){
                        {!uniqueId}showPopupNotification('Cannot deactivate a selected Sales Tax Item record.', "error");
                        $(currElem).prop('checked', true);
                        var currRow = {!uniqueId}getSelectedSalesTaxItemRowData(a, false);
                        if(currRow != null){
                            currRow.STI_Active = true;
                        }
                    }
                }
                
                // Refresh the grid:
                function {!uniqueId}refreshGridSalesTaxItem(a){
                    
                            //debug('called');
                            //Getting grid items

                            var DetailRowSelect =a.sender.tbody.find(".k-grid-edit-row").closest("tr.k-detail-row");
                            
                            var uid= $(DetailRowSelect).prev(".k-master-row").data("uid");
                             var fld=$(DetailRowSelect).prev(".k-master-row");

                            //debug($(DetailRowSelect).find('td.k-detail-cell #{!uniqueId}STIGrid').data("kendoGrid"));
                             
                            //$(DetailRowSelect).prev(".k-master-row").find("td:nth-child(3)").html("")
            
                            var SelectChild=$('.k-detail-row').find('td.k-detail-cell #{!uniqueId}STIGrid');
                            
                            
                            
                             var grd=a.sender;
                            var master=grd;
                            for(var i =0;i<SelectChild.length;i++)  
                            {
                            
                                    var item=   SelectChild[i];
                                    if(item.Is_included)
                                    {
                                        NewRate +=item.STI_Rate;
                                    }
                                    $(item).data("kendoGrid").dataSource.read(); 


                            }
                            
                                        


                    {!uniqueId}toggleSTToolbarButtons(false);
                    {!uniqueId}toggleSTIToolbarButtons(this, false);
                    
                  
                    
                     
                   



                }
                
                // Refresh grid locally
                function {!uniqueId}refreshGridLocallySalesTaxItem(a, rowData){
                    a.sender.removeRow(rowData);
                    a.sender.dataSource.remove(rowData);
                    {!uniqueId}toggleSTToolbarButtons(false);
                }
                
                function {!uniqueId}getSelectedSalesTaxItemRowData(a, isToDelInCase){
                    var rowIndex = a.sender._editContainer;
                    if(rowIndex.length == 0){
                        {!uniqueId}deleteNewEditingRowInSTIGrid(a);
                        return null;
                    }else{
                        debug("Inn Here");
                        var rowData = a.sender.dataItem(rowIndex);
                        if(rowData.STI_Id != ""){
                            return rowData;
                        }else{
                            try{
                                if(isToDelInCase){

                                    {!uniqueId}deleteNewEditingRowInSTIGrid(a);
                                }
                            }catch(excep){}
                            return null;
                        }
                    }
                    var rowData = a.sender.dataItem(rowIndex);
                    return rowData;
                }
                
                function {!uniqueId}deleteNewEditingRowInSTIGrid(a){
                    if(a.sender.tbody.children().hasClass("k-grid-edit-row")) {
                        EditRowStatus=false;
                        var currentlySelectedEditingRow = a.sender._editContainer;
                        {!uniqueId}toggleSTIToolbarButtons(currentlySelectedEditingRow, true);
                        //{!uniqueId}refreshGridLocallySalesTax( currentlySelectedEditingRow );
                        {!uniqueId}refreshGridSalesTaxItem(a);
                        debug("::::::::::::::  " + EditRowStatus) ;
                    }
                }
                
                function {!uniqueId}addNewSalesTaxItemRow(a, rowData){
                    var dataSource = a.sender.dataSource;
                    var total = dataSource.data().length;
                    dataSource.insert(total, {
                        "STI_Id" : "",
                        "STI_Name" : (rowData == null) ? "" : (getClonedNameInSTI(a, rowData.STI_Name)),

                        "ST_Id" : e.data.ST_Id,
                        "Is_included" : (rowData == null) ? false : rowData.Is_included,
                        "STI_Active" : (rowData == null) ? true : rowData.STI_Active,
                        "STI_Rate" : (rowData == null) ? 0.00 : rowData.STI_Rate,
                        "STI_Tax_Parts" : (rowData == null) ? true : rowData.STI_Tax_Parts,
                        "STI_Tax_Labour": (rowData == null) ? true : rowData.STI_Tax_Labour,
                        "STI_Tax_Units": (rowData == null) ? true : rowData.STI_Tax_Units,
                        "STI_Tax_Misc": (rowData == null) ? true : rowData.STI_Tax_Misc,
                        "STI_Forms_Label": (rowData == null) ? "" : rowData.STI_Forms_Label,
                        "STI_Category": (rowData == null) ? "" : rowData.STI_Category,
                        "STI_Order":0
                    });
                    dataSource.page(dataSource.totalPages());
                    
                    var newRowToAdd = a.sender.tbody.children().last();
                     EditRowStatus=true;
                     debug(EditRowStatus)

                    a.sender.editRow(newRowToAdd);
                   
                    var nameInputBox = $(a.sender.tbody.children().last()).find("td>input[name='STI_Name']");
                    nameInputBox.select();
                    
                    // Unique DEFAULT bind
                    $( "#{!uniqueId}STIGrid input[name='Is_included']").on("change", function (event) {
                        {!uniqueId}STICheckSTISelectedActive(this, a);
                    });
                    
                    // Unique DEFAULT bind
                    $( "#{!uniqueId}STIGrid input[name='STI_Active']").on("change", function (event) {
                        {!uniqueId}STICheckSTIActive(this, a);
                    });
                    
                    {!uniqueId}toggleSelectedRowClass(newRowToAdd);
                    {!uniqueId}toggleSTIToolbarButtons(newRowToAdd, "TF");
                }
                
                function getClonedNameInSTI(a, originalName) {
                    var dataSource = a.sender.dataSource;
                    var total = dataSource.data().length;
                    var originalNameWithoutCounter;
                    
                    var cloneName = originalName + ' Copy';
                    var countToBeAppend = 0;
                    var isLoopExecuted = false;
                    for(var i = 0; i < total ; i++ ) {
                        if(dataSource.at(i).STI_Name.search(cloneName) != -1) {
                            isLoopExecuted = true;
                            var lastIndex = dataSource.at(i).STI_Name.lastIndexOf(" Copy");
                            var counter = dataSource.at(i).STI_Name.substr(lastIndex + 5, dataSource.at(i).STI_Name.length);
                            if(countToBeAppend < +counter) {
                                countToBeAppend = +counter;
                            }
                        }
                    }
                    
                    if(countToBeAppend == 0) {
                        if(isLoopExecuted) {
                            return cloneName + '1'; 
                        } else {
                            return cloneName;
                        }
                    } else {
                        countToBeAppend++;
                        return cloneName + countToBeAppend;
                    }
                    
                }
                
                var currentRowInstance;
                var currentElement;
                var confirmDeleteSalesTaxItemRecord = function(isConfirm){
                    if(!isConfirm){



                        return;
                    }
                    
                    {!uniqueId}toggleSTIToolbarButtons(currentElement, false);
                    var rowData = {!uniqueId}getSelectedSalesTaxItemRowData(currentRowInstance, true);








                    var salesTaxItemRecId = rowData.STI_Id;
                    
                    if(salesTaxItemRecId == null || salesTaxItemRecId == ''){
                        {!uniqueId}refreshGridLocallySalesTaxItem(currentRowInstance, rowData);
                    }else{
                        Visualforce.remoting.Manager.invokeAction(  '{!$RemoteAction.BlackPurlContentCtrl.deleteSalesTaxItem}',
                                                                    encodeString(salesTaxItemRecId),
                                                                    function(result, event){
                                                                        if (event.status) {
                                                                        debug(EditRowStatus);
                                                                            // Successfully deleted record
                                                                            {!uniqueId}refreshGridSalesTaxItem(currentRowInstance);


                                                                            Calculate(decodeString(result));
                                                                            EditRowStatus=false;
                                                                            {!uniqueId}showPopupNotification("Deleted", "success");

                                                                        } else if (event.type === 'exception') {
                                                                            {!uniqueId}showPopupNotification(event.message, "error");

                                                                        } else {
                                                                            {!uniqueId}showPopupNotification(event.message, "error");

                                                                        }
                                                                    },

                                                                    {escape: true}
                                                                );
                    }
                }
                
                function {!uniqueId}STIGridDeleteButtonClickEvent(currElem, a){
                    currentRowInstance = a;
                    currentElement = currElem;
                    var rowData = {!uniqueId}getSelectedSalesTaxItemRowData(a, true);
                    if(rowData == null){
                        return;
                    }
                    
                    var delConfirmMsg = 'Deleting this Sales Tax Item will also impact other associated Sales Tax records. Do you wish to continue?';
                    
                    delConfirmMsg = escapeHTML(delConfirmMsg);
                    confirmAction("Confirm Delete", delConfirmMsg, confirmDeleteSalesTaxItemRecord);
                }
                
                function {!uniqueId}onSTLDataBound(a) {



                    a.sender.unbind();
                    $("#{!uniqueId}STIGrid").data("kendoGrid").dataSource.bind('requestStart', {!uniqueId}startsmall);
                    $("#{!uniqueId}STIGrid").data("kendoGrid").dataSource.bind('requestEnd', {!uniqueId}endsamll );
                    
                    
                        function {!uniqueId}startsmall(){
                             
                             debug(Ajaxstatus)

                           
                            
                        }
                
                        function {!uniqueId}endsamll(){
                       
                             Ajaxstatus=0;
                              debug(Ajaxstatus);

                           
                           
                        }
                    
                    // Add a "ADD" button on toolbar
                    e.detailRow.find(".k-grid-toolbar").insertAfter(e.detailRow.find(".k-widget").children()[1]);
                    e.detailRow.find(".k-grid-toolbar").css("background-color", "#ffffff");
                    e.detailRow.find(".k-grid-toolbar").css("border-top", "none");
                    e.detailRow.find(".k-grid-toolbar").css("height", "25px");
                    e.detailRow.find(".k-grid-toolbar").css("vertical-align", "middle");

                    
                    $(".bpGridAddButton").prop('title', 'Add');
                    







                        a.sender.element.on("click", "div.k-grid-toolbar", "click", function (o)
                    {
                        
                        debug(Ajaxstatus+'click');

                        if(Ajaxstatus==0)
                        {
                            
                        
                        {!uniqueId}toggleSelectedRowClass($(this));
                        {!uniqueId}toggleSTToolbarButtons(false);
                        {!uniqueId}toggleSTIToolbarButtons(this, "TF");
                        
                        debug('gafsdfasd');
                            debug(EditRowStatus); 


                        //if( a.sender.tbody.children().hasClass("k-grid-edit-row")) 
                        
                           if( EditRowStatus==true) {
                            if({!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row"))
                            {
                            
                                    {!uniqueId}validateAndSaveSTRow();
                            }
                            else
                            {
                                    if( a.sender.tbody.children().hasClass("k-grid-edit-row"))
                                    {
                                        {!uniqueId}validateAndSaveSTITEMRow(a);
                                    }
                                    
                            }
                        }else {
                            var parentHasEditedRow = {!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row");
                            if(parentHasEditedRow){
                                // Save
                                var isSuccessfullySaved = {!uniqueId}validateAndSaveSTRow(a);
                            }
                            
                          
                        }
                        
                        }
                    o.stopPropagation();
                    });
                    
                    // Add detail row click event

                    a.sender.element.on("click", "tbody>tr:not(.k-grid-edit-row)", "click", function (o) {
                    
                      



                        if(Ajaxstatus==0)
                        {
                            
                        
                    






                        //if( a.sender.tbody.children().hasClass("k-grid-edit-row")) 
                           if( EditRowStatus==true) {
                            
                            var isSuccessfullySaved = true;
                            if({!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row"))
                            {
                            
                                    isSuccessfullySaved = {!uniqueId}validateAndSaveSTRow();
                            }
                            else
                            {
                                    if( a.sender.tbody.children().hasClass("k-grid-edit-row"))
                                    {
                                        isSuccessfullySaved = {!uniqueId}validateAndSaveSTITEMRow(a);
                                    }
                                    
                            }
                            
                            if(isSuccessfullySaved){
                                {!uniqueId}toggleSelectedRowClass($(this));
                                {!uniqueId}toggleSTToolbarButtons(false);
                                {!uniqueId}toggleSTIToolbarButtons(this, true);
                            }
                        }else {
                            {!uniqueId}toggleSelectedRowClass($(this));
                            {!uniqueId}toggleSTToolbarButtons(false);
                            {!uniqueId}toggleSTIToolbarButtons(this, true);
                            
                            var parentHasEditedRow = {!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row");
                            if(parentHasEditedRow){
                                // Save
                                var isSuccessfullySaved = {!uniqueId}validateAndSaveSTRow(a);
                            }
                            else
                            {
                                a.sender.editRow($(this));
                                EditRowStatus=true;
                              

                            }







                            // Unique DEFAULT bind
                            $(this).find("input[name='Is_included']").on("change", function (event) {
                                {!uniqueId}STICheckSTISelectedActive(this, a);
                            });
                            
                            // Unique DEFAULT bind
                            $(this).find("input[name='STI_Active']").on("change", function (event) {
                                {!uniqueId}STICheckSTIActive(this, a);
                            });
                          
                       
                            }
                        }
                         o.stopPropagation();
                    });
                    
                    // Add detail row "ADD" button click handler
                    a.sender.element.on("click", "#{!uniqueId}STI_Add_Button", "click", function (o) {
                        if( a.sender.tbody.children().hasClass("k-grid-edit-row")) {
                            {!uniqueId}validateAndSaveSTITEMRow(a);
                        }else {
                            var parentHasEditedRow = {!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row");
                            if(parentHasEditedRow){
                                // Save
                                var isSuccessfullySaved = {!uniqueId}validateAndSaveSTRow(a);
                            }
                            {!uniqueId}addNewSalesTaxItemRow(a, null);
                        }
                         o.stopPropagation();
                    });
                    
                    // Add detail row "CLONE" button click handler
                    a.sender.element.on("click", "#{!uniqueId}STI_Clone_Button", "click", function (o) {



                        if(a.sender.tbody.children().hasClass("k-grid-edit-row")) {
                            if((a.sender.editable.validatable.validate())){
                                var rowData = {!uniqueId}getSelectedSalesTaxItemRowData(a, false);
                                
                                if(rowData != null && rowData.STI_Id != null && rowData.STI_Id != ""){
                                    {!uniqueId}addNewSalesTaxItemRow(a, rowData);
                                }
                                
                                // At last save all modifications
                                //{!uniqueId}validateAndSaveSTITEMRow(a);
                            }
                        }
                         o.stopPropagation();
                    });
                    
                    // Add detail row "DELETE" button click handler
                    a.sender.element.on("click", "#{!uniqueId}STI_Delete_Button", "click", function (o) {
                        if( a.sender.tbody.children().hasClass("k-grid-edit-row")) {
                            {!uniqueId}STIGridDeleteButtonClickEvent(this, a);


                            {!uniqueId}toggleSTToolbarButtons(false);
                          //  {!uniqueId}refreshGridSalesTaxItem(a);
                        }
                         o.stopPropagation();
                    });
                    
                    // Load document click bindings
                    $(document).on('click', function (event) {
                    if(Ajaxstatus==0 && $(event.target).attr('class').indexOf("overlay") == -1)


                    {
                        {!uniqueId}toggleSTToolbarButtons(false);
                        {!uniqueId}toggleSTIToolbarButtons(this, true);

                        
                        if( a.sender.tbody.children().hasClass("k-grid-edit-row")) {
                            {!uniqueId}validateAndSaveSTITEMRow(a);
                        }else {
                            var parentHasEditedRow = {!uniqueId}salesTaxGrid.tbody.children().hasClass("k-grid-edit-row");
                            if(parentHasEditedRow){
                                // Save
                                var isSuccessfullySaved = {!uniqueId}validateAndSaveSTRow(a);
                            }
                        }
                        }
                    });
                }
            }
            
            // Display popup notiications:
            function {!uniqueId}showPopupNotification(message, msgType){
                {!uniqueId}popupNotification.hide();
                {!uniqueId}popupNotification.show(kendo.toString(message), msgType);
            }
            
            var asd;
            var asd1;
        </script>
</apex:component>