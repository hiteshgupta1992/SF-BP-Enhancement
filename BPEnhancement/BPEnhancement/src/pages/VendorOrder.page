<apex:page standardStylesheets="false"
           showChat="false" showHeader="false" sidebar="false" Controller="VendorOrderCtrl">
    
<html ng-app="vendorOrderApp">
    <head>
        <title>Vendor Order</title>  
    </head>

    <c:Css_and_Js ></c:Css_and_Js> 
    <apex:includeScript value="{!$Resource.niceScroll}"/>  
    <apex:includeScript value="{!$Resource.d3}"/>
    
    <c:PageStyle />
    <c:Price_mini_page_layout ></c:Price_mini_page_layout>
    <c:Customer_mini_page_layout />
    <c:Invoice_mini_page_layout />
    <c:AutoCompleteSuggestion /> 
    <c:dirPagination />
    <c:PopUp />
    <c:COPopup />
    <c:PartPopUpOnVendorOrder />
    <c:VenderOrderLineItemPartDetail />
    <c:NewViewCustomerStyle />
    <c:VendorOrderStyle />
    
    <style>
        .dynamic_heading{
            top: 113px !important;
        }
    </style>
    <script>
        var orderName = '';
        var top_for_scroll = 0;
        $(document).ready(function () {
            $('#collapsible-header .navbar-header').hide();
            $('#collapsible-header #bs-example-navbar-collapse-1>div').hide();
            $('#collapsible-header #bs-example-navbar-collapse-1>ul').hide();
            $('#headerHidebtn').hide();
            $('#headershowbtn').show();
            setTimeout(function () {
                $("body").niceScroll({
                    mousescrollstep : 50
                });
                top_for_scroll = $('#collapsible-header').height() + $('#fixed-seacrh-row').height() + $('#sticky-heading').height();
        
                $('#headerHidebtn').click(function () {
                    $('#collapsible-header .navbar-header').hide();
                    $('#collapsible-header #bs-example-navbar-collapse-1>div').hide();
                    $('#collapsible-header #bs-example-navbar-collapse-1>ul').hide();
                    $('#headerHidebtn').hide();
                    $('#headershowbtn').show();
                    $('#workflow-sidepanel').css('top', $('#collapsible-header').height());
                    $('#fixed-seacrh-row').css('top', $('#collapsible-header').height());
                    $('#sticky-heading').css('top', $('#collapsible-header').height() + $('#fixed-seacrh-row').height());
                    top_for_scroll = $('#collapsible-header').height() + $('#fixed-seacrh-row').height() + $('#sticky-heading').height();
                });
                $('#headershowbtn').click(function () {
                    $('#collapsible-header .navbar-header').show();
                    $('#collapsible-header #bs-example-navbar-collapse-1>div').show();
                    $('#collapsible-header #bs-example-navbar-collapse-1>ul').show();
                    $('#headershowbtn').hide();
                    $('#headerHidebtn').show();
                    $('#workflow-sidepanel').css('top', $('#collapsible-header').height());
                    $('#fixed-seacrh-row').css('top', $('#collapsible-header').height());
                    $('#sticky-heading').css('top', $('#collapsible-header').height() + $('#fixed-seacrh-row').height());
                    top_for_scroll = $('#collapsible-header').height() + $('#fixed-seacrh-row').height() + $('#sticky-heading').height();
                });
        
                $(document).on("scroll", onScroll);
                $('.sections-link a[href*=#]:not([href=#])').click(function (e) {
                    $(document).off("scroll");
                    var target = $(this).attr("href");
                    $($(this).attr("rel")).show();
        
                    $('html, body').stop().animate({
                        scrollTop : $(target).offset().top - top_for_scroll - 0
                    }, 1000, function () {
                        $(document).on("scroll", onScroll);
                        onScroll();
                        return false;
                    });
                });
            }, 1000);
        });
        
        function onScroll(event) {  
            var heading = '';
            var scrollPos = $(document).scrollTop();
            if (scrollPos < $('#VO_Info_Block').position().top + $('#VO_Info_Block').height() -50) {
                heading = $('.VO_Info_Block_classClone h1 ').html();
            } else if (scrollPos < $('.Order_Section').position().top + $('.Order_Section').height() -50) {
                heading = $('.Order_Section h1').html();
            } 
             else if (scrollPos < $('.Excess_Section').position().top + $('.Excess_Section').height() -100) {
               heading = $('.Excess_Section h1').html();
            }  
            else if(scrollPos < $('.Receiving_History_Section').position().top + $('.Receiving_History_Section').height() -50) {
                heading = $('.Receiving_History_Section h1').html();
            }
            else if(scrollPos < $('.Finalize_Section').position().top + $('.Finalize_Section').height() -50) {
                heading = $('.Finalize_Section h1').html();
            }
            $('#sticky-heading h1').html(heading);
            
           /* if (scrollPos < $('#VO_Info_Block').position().top + $('#VO_Info_Block').height() - 100) {
                heading = 'A   Info';
            } else if (scrollPos < $('.Order_Section').position().top + $('.Order_Section').height() -200) {
                heading = ' B  Order  ';
                debug($('.Order_Section').position().top); 
                debug($('.Order_Section').height());
                debug(scrollPos);
                
            } else if (scrollPos < $('.special_order_section').position().top + $('.special_order_section').height() - 50) {
                heading = '<span class="heading_icon"><img src="{!URLFOR($Resource.icon_images, ' images / heding_icon.png ')}" /></span> B   Order ';
            } else if (scrollPos < $('.Excess_Section').position().top + $('.Excess_Section').height() - 30) {
                heading = '<span class="heading_icon"><img src="{!URLFOR($Resource.icon_images, ' images / heding_icon.png ')}" /></span> C  Stock Excess ';
            } else if (scrollPos < $('.Finalize_Section').position().top + $('.Finalize_Section').height() - 50) {
                heading = '<span class="heading_icon"><img src="{!URLFOR($Resource.icon_images, ' images / heding_icon.png ')}" /></span> D   Finalize Order';
            }
            $('#sticky-heading h1 .header_icon_text').html(heading);*/
        }
        
        var vendorOrderApp = angular.module('vendorOrderApp', ['searchToAddModule', 'BPGlobalHeader', 'dir.listPagination', 'ngAnimate', 'ui-notification', 'partsChart']);
        
        //Directive to Retrict number only
        vendorOrderApp.directive('numberOnlyInput', function () {
            return {
                restrict: 'EA',
                template: '<input type="text" class="form-control" ng-model="inputValue" />',
                scope: {
                    inputValue: '='

                },
                link: function (scope) {
                    scope.$watch('inputValue', function(newValue,oldValue) {
                        var arr = String(newValue).split("");
                        var pieces = String(newValue).split(".");
                        if (arr.length === 0) return;
                        if(arr[0] == '-'){
                            scope.inputValue = oldValue;
                        }
                        else if (isNaN(newValue)) {
                            scope.inputValue = oldValue;
                        }
                        else if(typeof(pieces[1]) != "undefined" && pieces[1].length > 2){
                            scope.inputValue = oldValue;
                        }
                    });
                }
            };
        });
        
        
        //controlller
        vendorOrderApp.controller('vendorOrderController', function ($scope, $sce, $q, $timeout, Notification, vendorOrderService) {
            //declarations
            $scope.VendorOrderModel = {};
            
            // Set permission ability for current user
            $scope.VendorOrderModel.isPermittedToEditVOHeader = {!isPermittedToEditVOHeader};
            
            $scope.VendorOrderModel.VendorOrderHeader = {};
            $scope.VendorOrderModel.vendorOrderLineItemGroupList = {};
            $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = {};
            $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = {};
            $scope.VendorOrderModel.groupItems_editRow = [];
            $scope.VendorOrderModel.requiredForCustomerItems_editRow = [];
            $scope.VendorOrderModel.requiredForStockItems_editRow = [];
            $scope.FilterID="";
            $scope.SearchToadd = {};
            $scope.typeToSearch = "";
            $scope.PreferredObject = "Vendor";
            
            $scope.labelDataValue = {
                QtyComitted : 0,
                QtyAvalable : 0,
                Instock : 0,
                QtyOnOrder : 0,
                ReOrderMin : 0,
                ReOrderMax : 0,
                maxPoint : 0,
            };
            
            $scope.partChartsDetails = {
                QtyComitted : {
                    startAngle : 0,
                    endAngle : 0
                },
                QtyAvalable : {
                    startAngle : 0,
                    endAngle : 0
                },
                Instock : {
                    startAngle : 0,
                    endAngle : 0
                },
                QtyOnOrder : {
                    startAngle : 0,
                    endAngle : 0
                },
            };
            
            $scope.chartData = {
                QtyComitted : {
                    Angle : 4.3617251235193315
                },
                QtyAvalable : {
                    Angle : 6.397068040872217
                },
                Instock : {
                    Angle : 6.397068040872217
                },
                QtyOnOrder : {
                    Angle : 7.0
                },
                minPoint : {
                    Angle : 2.827433388230814
                },
                maxPoint : {
                    Angle : 12.00741192144774
                },
                ReOrderMin : {
                    Angle : 0
                },
                ReOrderMax : {
                    Angle : 0
                }
            };

            // Map variable to hold order of sorting
            var sortOrderMap = {
                "ASC"   :   "DESC",
                "DESC"  :   ""
            };
            
            // Pagination and sort related JSON
            $scope.VendorOrderModel.itemsPageSortAttrsJSON = {};
            $scope.VendorOrderModel.customersPageSortAttrsJSON = {};
            $scope.VendorOrderModel.stocksPageSortAttrsJSON = {};
            
            // Method to set default page sort attributes JSON
            $scope.VendorOrderModel.setDefaultPageSortAttrs = function() {
                
                $scope.VendorOrderModel.itemsPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "ItemDesc",
                        SortDirection   :   "ASC"
                    }]
                };
                try{
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
                
                $scope.VendorOrderModel.customersPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "Item",
                        SortDirection   :   "ASC"
                    }]
                };
                try{
                    $scope.VendorOrderModel.customersPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
                
                $scope.VendorOrderModel.stocksPageSortAttrsJSON = {
                    ChangesCount    :   0,
                    CurrentPage     :   1,
                    PageSize        :   10,
                    Sorting :   [{
                        FieldName       :   "Item",
                        SortDirection   :   "ASC"
                    }]
                };
                try{
                    $scope.VendorOrderModel.stocksPageSortAttrsJSON.PageSize = '{!JSENCODE(TEXT(Related_List_Page_Size))}';
                } catch (ex){}
            }
            
            //Load suggestion and items of a vender order
            $scope.VendorOrderModel.loadVendor = function () {
                $scope.VendorOrderModel.voHeaderId = "{!JSENCODE(URLENCODE($CurrentPage.parameters.id))}" ? "{!JSENCODE(URLENCODE($CurrentPage.parameters.id))}" : null;
                $scope.VendorOrderModel.setDefaultPageSortAttrs();
                $scope.SearchToAddCallback = $scope.VendorOrderModel.searchToAddCallback;
                
                $scope.VendorOrderModel.loadAllGridDetails();
            }
            
            $scope.VendorOrderModel.hidePanel = function(event, id){
                    var targetelement = angular.element(event.target).closest('h1').find('.fa:first');
                    if(targetelement.hasClass('fa-chevron-right')){
                        targetelement.removeClass('fa-chevron-right');
                        targetelement.addClass('fa-chevron-down');
                    } else {
                        targetelement.removeClass('fa-chevron-down');
                        targetelement.addClass('fa-chevron-right');
                    }
                    $('#'+id).toggle();
                }
            
            $scope.VendorOrderModel.loadAllGridDetails = function() {
                if ($scope.VendorOrderModel.voHeaderId != null) {
                    var RequiredType=null 
                    //Called service to get Vendor Order line
                    vendorOrderService.getVOLineItem($scope.VendorOrderModel.voHeaderId, 
                                                     $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                     $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                     $scope.VendorOrderModel.stocksPageSortAttrsJSON,
                                                     RequiredType
                                                    )
                    .then(function (successfulResult) {
                        $scope.VendorOrderModel.populatePageModels(successfulResult);
                    });
                }
            }
            
            // Add Vendor callback method
            $scope.VendorOrderModel.addVendor = function (selectedVendorId) {
          
            
            
                $scope.VendorOrderModel.setDefaultPageSortAttrs();
                
                //Called service to get Vendor Order line
                vendorOrderService.addVendor(selectedVendorId,
                                             $scope.VendorOrderModel.voHeaderId, 
                                             $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                             $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                             $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                            )
                .then(function (successfulResult) {
                    $scope.VendorOrderModel.populatePageModels(successfulResult);
                });
             
            }
            
            
            
            
            //Populate Left Side panel Items
            $scope.VendorOrderModel.populateLeftSideHeadingLables = function(){
            
                $scope.VendorOrderModel.LeftSideHeadingLables = {};
                var currentHeadingSequenceIndex = 65;
                
                // Info Header
                
                $scope.VendorOrderModel.LeftSideHeadingLables['Info'] = String.fromCharCode(currentHeadingSequenceIndex++);
                
                $scope.VendorOrderModel.LeftSideHeadingLables['Order'] = String.fromCharCode(currentHeadingSequenceIndex++);
                
                
                $scope.VendorOrderModel.LeftSideHeadingLables['I_General'] =1
                
                $scope.VendorOrderModel.LeftSideHeadingLables['I_Receiving_For_Vendor'] =2
                
                // Merchandise: Items Header
                $scope.VendorOrderModel.LeftSideHeadingLables['Received'] = String.fromCharCode(currentHeadingSequenceIndex++);;
                
                
                $scope.VendorOrderModel.LeftSideHeadingLables['R_Items'] = 1
                $scope.VendorOrderModel.LeftSideHeadingLables['R_Outstanding']  = 2  
                 
                
                // Checkout Header
                if($scope.VORModel.VOR_Header.Status =="In Progress" ){
                    $scope.VendorOrderModel.LeftSideHeadingLables['Finalize'] = String.fromCharCode(currentHeadingSequenceIndex++);
                }
                
                
                
                // Invoice History Header
                if($scope.VORModel.VOR_Header.Status =="Invoiced" ||  $scope.VORModel.VOR_Header.Status =="Stocked" ){
                    $scope.VORModel.LeftSideHeadingLables['Invoice_History'] = String.fromCharCode(currentHeadingSequenceIndex++);
                    debug(String.fromCharCode(currentHeadingSequenceIndex++))
                }
                
                
            }
            
            // Populate new models
            $scope.VendorOrderModel.populatePageModels = function(newResult) {
                debug(newResult);
                
                if($scope.VendorOrderModel.voHeaderId == null || $scope.VendorOrderModel.voHeaderId == 'undefined') {
                	var url = '?id=' + newResult.VendorOrderHeader.Id;
					window.history.pushState("string", "Title" , url);
                }
                $scope.VendorOrderModel.voHeaderId = newResult.VendorOrderHeader.Id;
                
                $scope.VendorOrderModel.GroupTotalCost = newResult.GroupTotalCost;
                $scope.VendorOrderModel.TotalLineItemGroups = newResult.TotalLineItemGroups;
                $scope.VendorOrderModel.vendorOrderLineItemGroupList = newResult.VendorOrderLineItemGroupList;
                $scope.VendorOrderModel.populateGroupItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemGroupList);
                
                $scope.VendorOrderModel.TotalRequiredForCustomers = newResult.TotalRequiredForCustomers;
                $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = newResult.VOLineItemRequiredForCustomer;
                $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList);
                
                $scope.VendorOrderModel.TotalRequiredForStocks = newResult.TotalRequiredForStocks;
                $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = newResult.VOLineItemRequiredForStock;
                $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                
                $scope.VendorOrderModel.VendorOrderHeader = newResult.VendorOrderHeader;
                $scope.VendorOrderModel.OrderTypes = newResult.OrderTypes;
                debug('Data Pushing Start ->');
                debug($scope.VendorOrderModel.VendorOrderHeader.OrderType);
                
                for(var i = 0; i < newResult.OrderTypes.length; i++){
                    if(newResult.OrderTypes[i].Id == $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id){
                        $scope.VendorOrderModel.VendorOrderHeader.OrderType = newResult.OrderTypes[i];
                    }
                    if($scope.VendorOrderModel.VendorOrderHeader.OrderType.Id == null || $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id == undefined) {
                    	if(newResult.OrderTypes[i].IsDefault) {
                    		$scope.VendorOrderModel.VendorOrderHeader.OrderType = newResult.OrderTypes[i];
                    	}
                    }
                }
                
                $scope.FilterID  = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                
                $scope.VendorOrderModel.StockExcessList = newResult.StockExcessList;
                $scope.VendorOrderModel.VRHistoryList =newResult.VRHistoryList;
                
                
                debug('------------------------------------');
                debug($scope.VendorOrderModel.StockExcessList);
                
                if($scope.VendorOrderModel.vendorOrderLineItemGroupList.length==0)
                {
                    $scope.SearchableObjects = 'Vendor,Part__c';
                }
                else{
                        if($scope.VendorOrderModel.VendorOrderHeader.VendorId == null || $scope.VendorOrderModel.VendorOrderHeader.VendorId == ''){
                            $scope.SearchableObjects = 'Vendor';
                        } else {
                            $scope.SearchableObjects = 'Part__c';
                        }
                
                
                }
                
                
            }
            
            // On Demand Popolate data On in the case of serach to add
            $scope.VendorOrderModel.PopulateOnDemandAddSearched = function(Result){
            
                $scope.VendorOrderModel.TotalLineItemGroups = Result.TotalLineItemGroups;
                $scope.VendorOrderModel.vendorOrderLineItemGroupList = Result.VendorOrderLineItemGroupList;
                $scope.VendorOrderModel.groupItems_editRow=[];
                
                debug(Result.NewLineItemId);
                
                    var IdToEdit=Result.NewLineItemId;
                debug(IdToEdit);
                    var vendorGroupItems =$scope.VendorOrderModel.vendorOrderLineItemGroupList;
                    debug($scope.VendorOrderModel.vendorOrderLineItemGroupList);
                 
                    for (var i = 0; i < vendorGroupItems.length; i++) {
                        voLineItems = vendorGroupItems[i].VendorOrderLineItemList;
                        voLineItems_editRow = [];
                      
                        var EditableGroupId=0;
                        
                        for (var j = 0; j < voLineItems.length; j++) {
                         debug('ID for groups');
                         debug(voLineItems[j].Id );
                         
                        if(voLineItems[j].Id == IdToEdit){
                        
                                voLineItems_editRow.push({
                                    isEdit : true,
                                    radioValue : 1,
                                    optionSelected : 0
                                });
                                EditableGroupId= 1;
                                debug('IN'+voLineItems_editRow )
                            }
                            else{
                                
                                 voLineItems_editRow.push({
                                    isEdit : false,
                                    radioValue : 1,
                                    optionSelected : 0
                                });
                           
                                
                            
                            }
                        }
                        
                        if(EditableGroupId==1){
                                 debug('IN'+$scope.VendorOrderModel.groupItems_editRow )
                                 $scope.VendorOrderModel.groupItems_editRow.push({
                                    isEdit : true,
                                    radioValue : 1,
                                    optionSelected : 0,
                                    voLineItems_editRow : voLineItems_editRow
                                });
                                 EditableGroupId= 0;
                        }
                        else{
                        
                                $scope.VendorOrderModel.groupItems_editRow.push({
                                    isEdit : false,
                                    radioValue : 1,
                                    optionSelected : 0,
                                    voLineItems_editRow : voLineItems_editRow
                                });
                        
                        
                        }
                       
    
                    }
                    
                             $scope.VendorOrderModel.TotalLineItemGroups = Result.TotalLineItemGroups;
     
                             $scope.VendorOrderModel.TotalRequiredForCustomers = Result.TotalRequiredForCustomers;
                             $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = Result.VOLineItemRequiredForCustomer;
                             $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList);
                             
                             $scope.VendorOrderModel.TotalRequiredForStocks = Result.TotalRequiredForStocks;
                             $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = Result.VOLineItemRequiredForStock;
                             $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                             
                             $scope.VendorOrderModel.VendorOrderHeader = Result.VendorOrderHeader;
                             $scope.VendorOrderModel.OrderTypes = Result.OrderTypes;
                             for(var i = 0; i < Result.OrderTypes.length; i++){
                              if(Result.OrderTypes[i].Id == $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id){
                              $scope.VendorOrderModel.VendorOrderHeader.OrderType = Result.OrderTypes[i];
                              }
                             }
                             
                             $scope.FilterID  = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                             
                             if($scope.VendorOrderModel.VendorOrderHeader.VendorId == null || $scope.VendorOrderModel.VendorOrderHeader.VendorId == ''){
                              $scope.SearchableObjects = 'Vendor';
                             } else {
                              $scope.SearchableObjects = 'Part__c';
                             }
                       
                 
            }
            
            //Populate Vendor Edit Status reserve model all called when New data Populate fromm server for Vendor Order Items
            $scope.VendorOrderModel.populateGroupItemsEditableModel = function (vendorGroupItems) {
             $scope.VendorOrderModel.groupItems_editRow =[];
                for (var i = 0; i < vendorGroupItems.length; i++) {
                    voLineItems = vendorGroupItems[i].VendorOrderLineItemList;
                    voLineItems_editRow = [];
                    for (var j = 0; j < voLineItems.length; j++) {
                        voLineItems_editRow.push({
                            isEdit : false,
                            radioValue : 1,
                            optionSelected : 0
                        });
                    }
                    $scope.VendorOrderModel.groupItems_editRow.push({
                        isEdit : false,
                        radioValue : 1,
                        optionSelected : 0,
                        voLineItems_editRow : voLineItems_editRow
                    });

                }
            }

            //Function To open & close edit Mode only work for parent rows
            // On Click Group Row Edit & Expand Row Method
            $scope.VendorOrderModel.editGroupItem = function (event, index) {
                var isEditModeEnabled = false;
                var lineitem = [];
                 //if($scope.VendorOrderModel.VendorOrderHeader.Status !='On Order' ){
                
                    for (i = 0; i < $scope.VendorOrderModel.groupItems_editRow.length; i++) {
                        if ($scope.VendorOrderModel.groupItems_editRow[i].isEdit == true) {
                            isEditModeEnabled = true;
                        }
                       $scope.VendorOrderModel.groupItems_editRow[i].isEdit = false;
                    }
                    if (!isEditModeEnabled) {
                        $scope.VendorOrderModel.groupItems_editRow[index].isEdit = true;
                    } else {
                    
                         var RequiredType = null;
                         vendorOrderService.getVOLineItem($scope.VendorOrderModel.voHeaderId, 
                                                             $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                             $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                             $scope.VendorOrderModel.stocksPageSortAttrsJSON,
                                                             RequiredType
                                                            )
                            .then(function (successfulResult) {
                                $scope.VendorOrderModel.populatePageModels(successfulResult);
                            });
                        
                    }
               //}
            }
            
           
            
            
            //Function To open & close edit Mode only work for child  rows
            // On Click Group Row Edit & Expand Row Method
            $scope.VendorOrderModel.editvoLineItem = function (event, parentindex, index) {
                debug(parentindex);
                var isEditModeEnabled = false;
                  var lineitem = [];
                     var partId= null;
                     var voLineItem = null;
                     var qtyRequired = null;
                  if($scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[index].isEdit == true)
                  {
                                
                  }
                  else{
                        for (i = 0; i < $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow.length; i++) {
                            
                            if ($scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit == true) {
                                
                                $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit
                                
                                isEditModeEnabled = true;
                                 var partId=$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[i].PartId;
                                 var voLineItem=$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[i].Id;
                                 var qtyRequired = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[i].Need;
                                
                            }
                             $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit = false;
                         }
                  }
                if (!isEditModeEnabled) {
                    
                    if($scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[index].IsExcess == false ){
                            $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[index].isEdit = true;
                    }
                    
                } else {
                        if(partId !=null && voLineItem !=null && qtyRequired !=null )
                            {
                                $scope.VendorOrderModel.saveVolineItems(partId,voLineItem,qtyRequired,parentindex)
                            }
                            
                }
            }
            
            
            // Tab Out save Data
            $scope.VendorOrderModel.editRowTabOut=function(event, parentindex ,index){
                     if (!event.shiftKey && event.keyCode == 9){
                            
                            
                            var partId=$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[index].PartId;
                            var voLineItem=$scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[index].Id;
                            var qtyRequired = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList[index].Need;
                        
                        
                             $scope.VendorOrderModel.saveVolineItems(partId,voLineItem,qtyRequired,parentindex)
                        //debug(partId +', ' + qtyRequired + ' ,' + ',' + voLineItem);
                        
                    }
            }
            
            $scope.VendorOrderModel.saveVolineItems= function(partId,voLineItem,qtyRequired,parentindex){
                    
                    //$scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit = false;
                    
                    var vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId =  $scope.VendorOrderModel.voHeaderId;
                    var itemsPageSortAttrsJSON =  $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON;
                    var IsSearched=false;
                    
                    
                    vendorOrderService.addSearchedRecord(partId,  vendorId,  voHeaderId,  qtyRequired,
                         itemsPageSortAttrsJSON,  customersPageSortAttrsJSON, 
                         stocksPageSortAttrsJSON,voLineItem,IsSearched)
                    .then(function(resultInfo) {
                    
                        $scope.VendorOrderModel.populateGroupOnly(parentindex,resultInfo);
                       
                        
                        /*$scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                        $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                        $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                        
                        setTimeout(function () {
                            $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                        }, 10);*/
                    }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
               
            }
            
             $scope.VendorOrderModel.populateGroupOnly= function(parentindex,resultInfo){
                        if(resultInfo.RecentlyEditedGroupList.length > 0)
                         {
                         $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex]= resultInfo.RecentlyEditedGroupList[0];
                         
                                    debug(resultInfo.RecentlyEditedGroupList)
                                    debug($scope.VendorOrderModel.vendorOrderLineItemGroupList)
                                    var voLineItems=[]
                                    var voLineItems = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentindex].VendorOrderLineItemList;
                                    
                               
                                 
                                    var voLineItems_editRow = [];
                                    
                                    
                                    debug(voLineItems)
                                    for (var j = 0; j < voLineItems.length; j++) {
                                        voLineItems_editRow.push({
                                            isEdit : false,
                                            radioValue : 1,
                                            optionSelected : 0
                                        });
                                    }
                                    
                                        var groupItems_editRow ={
                                            isEdit : true,
                                            radioValue : 1,
                                            optionSelected : 0,
                                            voLineItems_editRow : voLineItems_editRow
                                        }
                                    
                                    $scope.VendorOrderModel.groupItems_editRow[parentindex]=groupItems_editRow;
                                    
                                    $scope.VendorOrderModel.TotalLineItemGroups = resultInfo.TotalLineItemGroups;
               
                                       $scope.VendorOrderModel.TotalRequiredForCustomers = resultInfo.TotalRequiredForCustomers;
                                       $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = resultInfo.VOLineItemRequiredForCustomer;
                                       $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList);
                                       
                                       $scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                                       $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                                       $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                                       
                                       $scope.VendorOrderModel.VendorOrderHeader = resultInfo.VendorOrderHeader;
                                       $scope.VendorOrderModel.OrderTypes = resultInfo.OrderTypes;
                                       for(var i = 0; i < resultInfo.OrderTypes.length; i++){
                                        if(resultInfo.OrderTypes[i].Id == $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id){
                                        $scope.VendorOrderModel.VendorOrderHeader.OrderType = resultInfo.OrderTypes[i];
                                        }
                                       }
                                       
                                       $scope.FilterID  = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                                       
                                       if($scope.VendorOrderModel.VendorOrderHeader.VendorId == null || $scope.VendorOrderModel.VendorOrderHeader.VendorId == ''){
                                        $scope.SearchableObjects = 'Vendor';
                                       } else {
                                        $scope.SearchableObjects = 'Part__c';
                                       }
                                 }else{
                                 
                                   $scope.VendorOrderModel.populatePageModels(resultInfo);
                                 }
                                                
               }
            
            // Close Items
             $scope.VendorOrderModel.closeEditVoliRow = function(parentindex){
                         
             }
             
             //function
             /* for (i = 0; i < $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow.length; i++) {
                             $scope.VendorOrderModel.groupItems_editRow[parentindex].voLineItems_editRow[i].isEdit = false;
                         }*/
                         
             
             //
            
            // Method to handle any updates in sort controls
            $scope.VendorOrderModel.itemsPageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = 1;
                $scope.VendorOrderModel.Items_paginationControlsAction();
            }
            
            // Method to handle any updates in pagination controls
            $scope.VendorOrderModel.Items_paginationControlsAction = function () {
                vendorOrderService.getPaginatedItemsForVOHeader( 'Items',
                                                                 $scope.VendorOrderModel.voHeaderId, 
                                                                 $scope.VendorOrderModel.itemsPageSortAttrsJSON
                                                                )
                .then(function(resultInfo) {
                    $scope.VendorOrderModel.TotalLineItemGroups = resultInfo.TotalLineItemGroups;
                    $scope.VendorOrderModel.vendorOrderLineItemGroupList = resultInfo.VendorOrderLineItemGroupList;
                    $scope.VendorOrderModel.populateGroupItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemGroupList);
                    
                    setTimeout(function () {
                        $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                    }, 10);
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
            
            $scope.VendorOrderModel.groupAllSimilarVOLineItem = function(partId) {
                vendorOrderService.groupAllSimilarVOLineItem( $scope.VendorOrderModel.VendorOrderHeader.VendorId,
                                                              partId,
                                                              $scope.VendorOrderModel.voHeaderId, 
                                                              $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                              $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                              $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                                             )
                .then(function(resultInfo) {
                    $scope.VendorOrderModel.populatePageModels(resultInfo);
                    
                    setTimeout(function () {
                        $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                        $scope.VendorOrderModel.customersPageSortAttrsJSON.ChangesCount++;
                        $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                    }, 100);
                    setTimeout(function () {
                        if(!$scope.$$phase) {
                            $scope.$digest();
                        }
                    }, 1000);
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
            
            // Edit row "GO" Action
           //  to do work
            $scope.VendorOrderModel.groupItemsGoAction = function (index, parentGirdIndex) {
                // parentGirdIndex == null: Parent grid (Group grid)
                var selectedRadioValue = 1;
                if(parentGirdIndex == null) {
                      selectedRadioValue = $scope.VendorOrderModel.groupItems_editRow[index].radioValue;
                } else {
                         selectedRadioValue = $scope.VendorOrderModel.groupItems_editRow[parentGirdIndex].voLineItems_editRow[index].radioValue;
                }
                debug(parentGirdIndex + "   " + index);
                debug($scope.VendorOrderModel.groupItems_editRow);
                
                // selected radio value == 1 Means delete the record from the list
                
                if(selectedRadioValue == 1){
                    var partId = (parentGirdIndex == null) 
                                    ? $scope.VendorOrderModel.vendorOrderLineItemGroupList[index].PartId
                                    : $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentGirdIndex].VendorOrderLineItemList[index].PartId;
                    $scope.VendorOrderModel.groupAllSimilarVOLineItem(partId);
                } 
                else if(selectedRadioValue == 2){
                    if(parentGirdIndex == null) {
                        var voLineItemGroupId = $scope.VendorOrderModel.vendorOrderLineItemGroupList[index].Id;
                        
                        // Calculate for new page number of items grid
                        var itemsGridNewPN = $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage;
                        if($scope.VendorOrderModel.TotalLineItemGroups % $scope.VendorOrderModel.itemsPageSortAttrsJSON.PageSize == 1){
                            $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = (itemsGridNewPN > 1) ? (itemsGridNewPN - 1) : 1;
                        }

                        vendorOrderService.removeGroupFromOrder(voLineItemGroupId,
                                                                $scope.VendorOrderModel.VendorOrderHeader.VendorId,
                                                                $scope.VendorOrderModel.voHeaderId, 
                                                                $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                                $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                                $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                                             )
                        .then(function(resultInfo) {
                            debug(resultInfo);
                            $scope.VendorOrderModel.populatePageModels(resultInfo);
                            
                            setTimeout(function () {
                                $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                                $scope.VendorOrderModel.customersPageSortAttrsJSON.ChangesCount++;
                                $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                            }, 100);
                            setTimeout(function () {
                                if(!$scope.$$phase) {
                                    $scope.$digest();
                                }
                            }, 1000);
                        }, function(errorSearchResult) {
                            Notification.error('Some error occurred, please try again.');
                        });
                    } else {
                        var voLineItemGroupId = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentGirdIndex].Id;
                        var voLineItemId = $scope.VendorOrderModel.vendorOrderLineItemGroupList[parentGirdIndex].VendorOrderLineItemList[index].Id;
                        vendorOrderService.removeLineItemFromOrder( voLineItemId, voLineItemGroupId,
                                                                    $scope.VendorOrderModel.voHeaderId,
                                                                    $scope.VendorOrderModel.VendorOrderHeader.VendorId,
                                                                    $scope.VendorOrderModel.itemsPageSortAttrsJSON, 
                                                                    $scope.VendorOrderModel.customersPageSortAttrsJSON, 
                                                                    $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                                                 )
                        .then(function(resultInfo) {
                            $scope.VendorOrderModel.populateGroupOnly(parentGirdIndex,resultInfo);
                            setTimeout(function () {
                                $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                                $scope.VendorOrderModel.customersPageSortAttrsJSON.ChangesCount++;
                                $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                            }, 10);
                        }, function(errorSearchResult) {
                            Notification.error('Some error occurred, please try again.');
                        });
                    }
                }
            }
            
            // Populate required for customer edit list
            $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel = function (requiredForCustomerItems) {
                $scope.VendorOrderModel.requiredForCustomerItems_editRow = [];
                
                for (var i = 0; i < requiredForCustomerItems.length; i++) {
                    $scope.VendorOrderModel.requiredForCustomerItems_editRow.push({
                        isEdit : false,
                        radioValue : 1,
                        optionSelected : 0
                    });
                }
            }

            // Function To open & close edit Mode 
            // On Click Group Row Edit & Expand Row Method
            $scope.VendorOrderModel.editRequiredForCustomerItem = function (event, index) {
                var isEditModeEnabled = false;
                var lineitem = [];
                for (i = 0; i < $scope.VendorOrderModel.requiredForCustomerItems_editRow.length; i++) {
                    if ($scope.VendorOrderModel.requiredForCustomerItems_editRow[i].isEdit == true) {
                        isEditModeEnabled = true;
                        $scope.VendorOrderModel.requiredForCustomerItems_editRow[i].isEdit = false;
                    }
                }

                if (!isEditModeEnabled) {
                    $scope.VendorOrderModel.requiredForCustomerItems_editRow[index].isEdit = true;
                } else {
                    // ToDo: perform any action
                }
            }
            
            // Method to handle any updates in sort controls
            $scope.VendorOrderModel.customersPageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = 1;
                $scope.VendorOrderModel.RequiredByCustomer_paginationControlsAction();
            }
            
            $scope.VendorOrderModel.RequiredByCustomer_paginationControlsAction = function () {
                vendorOrderService.getPaginatedItemsForVOHeader( 'Customers',
                                                                 $scope.VendorOrderModel.voHeaderId,
                                                                 $scope.VendorOrderModel.customersPageSortAttrsJSON
                                                            )
                .then(function(resultInfo) {
                    $scope.VendorOrderModel.TotalRequiredForCustomers = resultInfo.TotalRequiredForCustomers;
                    $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList = resultInfo.VOLineItemRequiredForCustomer;
                    $scope.VendorOrderModel.populateReqForCustomerItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList);
                    
                    setTimeout(function () {
                        $scope.VendorOrderModel.customersPageSortAttrsJSON.ChangesCount++;
                    }, 10);
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
            
            // Edit row "GO" Action
            $scope.VendorOrderModel.requiredForCustomerItemsGoAction = function (index) {
                // selected radio value == 1 Means delete the record from the list
                debug($scope.VendorOrderModel.requiredForCustomerItems_editRow[index].radioValue)
                if($scope.VendorOrderModel.requiredForCustomerItems_editRow[index].radioValue == 1){
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = 1;
                    
                    var partId = $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList[index].PartId;
                    $scope.VendorOrderModel.groupAllSimilarVOLineItem(partId);
                }
                else if($scope.VendorOrderModel.requiredForCustomerItems_editRow[index].radioValue == 2){
                    var partId = $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList[index].PartId;
                    var  vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId= $scope.VendorOrderModel.voHeaderId;
                    var qtyRequired = $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList[index].Need;
                    var  itemsPageSortAttrsJSON  = $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON
                    var voLineItem=  $scope.VendorOrderModel.vendorOrderLineItemReqByCustomerList[index].Id;  
                    
                    // Calculate for new page number of items grid
                    var itemsGridNewPN = $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage;
                    if($scope.VendorOrderModel.TotalRequiredForCustomers % $scope.VendorOrderModel.customersPageSortAttrsJSON.PageSize == 1){
                        $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = (itemsGridNewPN > 1) ? (itemsGridNewPN - 1) : 1;
                    }
                    
                    debug(partId + ',' + vendorId  + ',' +  voHeaderId  + ',' +  qtyRequired  + ',' +
                         itemsPageSortAttrsJSON  + ',' +  customersPageSortAttrsJSON + ',' + 
                         stocksPageSortAttrsJSON  + ',' +voLineItem)              
                                                            
                    var IsSearched=false;
                    
                     vendorOrderService.addSearchedRecord(partId,  vendorId,  voHeaderId,  qtyRequired,
                         itemsPageSortAttrsJSON,  customersPageSortAttrsJSON, 
                         stocksPageSortAttrsJSON,voLineItem,IsSearched)
                    .then(function(resultInfo) {
                    
                        debug(resultInfo)
                        debug(resultInfo.NewLineItemId)
                        
                       
                         $scope.VendorOrderModel.populatePageModels(resultInfo);
                        
                        /*$scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                        $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                        $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                        
                        setTimeout(function () {
                            $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                        }, 10);*/
                    }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
                }
            }
            
            // Populate required for customer edit list
            $scope.VendorOrderModel.populateReqForStockItemsEditableModel = function (requiredForStockItems) {
                $scope.VendorOrderModel.requiredForStockItems_editRow = [];
                
                for (var i = 0; i < requiredForStockItems.length; i++) {
                    $scope.VendorOrderModel.requiredForStockItems_editRow.push({
                        isEdit : false,
                        radioValue : 1,
                        optionSelected : 0
                    });
                }
            }

            // Function To open & close edit Mode 
            // On Click Group Row Edit & Expand Row Method
            $scope.VendorOrderModel.editRequiredForStockItem = function (event, index) {
                var isEditModeEnabled = false;
                var lineitem = [];
                
                if($scope.VendorOrderModel.VendorOrderHeader.Status== 'On Order'){
                    return;
                }
                
                if($scope.VendorOrderModel.requiredForStockItems_editRow[index].isEdit == true ){
                
                     for (i = 0; i < $scope.VendorOrderModel.requiredForStockItems_editRow.length; i++) {
                            $scope.VendorOrderModel.requiredForStockItems_editRow[i].isEdit=false
                        }
                }
                else{
                        for (i = 0; i < $scope.VendorOrderModel.requiredForStockItems_editRow.length; i++) {
                            if ($scope.VendorOrderModel.requiredForStockItems_editRow[i].isEdit == true) {
                                isEditModeEnabled = true;
                                
                            }
                            
                            $scope.VendorOrderModel.requiredForStockItems_editRow[i].isEdit = false;
                        }
        
                        if (!isEditModeEnabled) {
                            $scope.VendorOrderModel.requiredForStockItems_editRow[index].isEdit = true;
                        } else {
                            // ToDo: perform any action
                        }
                }
            }
            
            // Method to handle any updates in sort controls
            $scope.VendorOrderModel.stocksPageSortControlsAction = function () {
                var newSortOrder = sortOrderMap[$scope.VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection];
                if(newSortOrder == null || newSortOrder == undefined){
                    newSortOrder = "ASC";
                }
                $scope.VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection = newSortOrder;
                
                // Set current page to 1
                $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = 1;
                $scope.VendorOrderModel.RequiredByStock_paginationControlsAction();
            }
            
            $scope.VendorOrderModel.RequiredByStock_paginationControlsAction = function () {
                vendorOrderService.getPaginatedItemsForVOHeader( 'Stocks',
                                                                 $scope.VendorOrderModel.voHeaderId, 
                                                                 $scope.VendorOrderModel.stocksPageSortAttrsJSON
                                                            )
                .then(function(resultInfo) {
                    $scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                    $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                    $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                    
                    setTimeout(function () {
                        $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                    }, 10);
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
            
            // Edit row "GO" Action
            $scope.VendorOrderModel.requiredForStockItemsGoAction = function (index) {
                // selected radio value == 1
                if($scope.VendorOrderModel.requiredForStockItems_editRow[index].radioValue == 1){
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = 1;
                    
                    var partId = $scope.VendorOrderModel.vendorOrderLineItemReqByStockList[index].PartId;
                    $scope.VendorOrderModel.groupAllSimilarVOLineItem(partId);
                }
                else if($scope.VendorOrderModel.requiredForStockItems_editRow[index].radioValue == 2){
                        
                    var partId = $scope.VendorOrderModel.vendorOrderLineItemReqByStockList[index].PartId;
                    var  vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId= $scope.VendorOrderModel.voHeaderId;
                    var qtyRequired = $scope.VendorOrderModel.vendorOrderLineItemReqByStockList[index].Need;
                    var  itemsPageSortAttrsJSON  = $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON
                    var voLineItem=  $scope.VendorOrderModel.vendorOrderLineItemReqByStockList[index].Id;  
                    
                    // Calculate for new page number of items grid
                    var itemsGridNewPN = $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage;
                    if($scope.VendorOrderModel.TotalRequiredForStocks % $scope.VendorOrderModel.stocksPageSortAttrsJSON.PageSize == 1){
                        $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = (itemsGridNewPN > 1) ? (itemsGridNewPN - 1) : 1;
                    }
                    
                    debug(partId + ',' + vendorId  + ',' +  voHeaderId  + ',' +  qtyRequired  + ',' +
                         itemsPageSortAttrsJSON  + ',' +  customersPageSortAttrsJSON + ',' + 
                         stocksPageSortAttrsJSON  + ',' +voLineItem)              
                                                            
                    var  IsSearched = false
                    
                     vendorOrderService.addSearchedRecord(partId,  vendorId,  voHeaderId,  qtyRequired,
                         itemsPageSortAttrsJSON,  customersPageSortAttrsJSON, 
                         stocksPageSortAttrsJSON,voLineItem,IsSearched)
                    .then(function(resultInfo) {
                    
                        debug(resultInfo)
                        debug(resultInfo.NewLineItemId)
                        
                       
                         $scope.VendorOrderModel.populatePageModels(resultInfo);
                        
                        /*$scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                        $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                        $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                        
                        setTimeout(function () {
                            $scope.VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount++;
                        }, 10);*/
                    }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
                  
                  
                  
                  }
            }
        
            // Select callback when a record is selected in search to add autocomplete box
            $scope.VendorOrderModel.searchToAddCallback = function (selectedRecord) {
                debug(selectedRecord);
               if($scope.VendorOrderModel.VendorOrderHeader.Status !='On Order' ){ 
                
                // If selected value is a Vendor, then add the record in related cutomers list
                if (selectedRecord.originalObject.Info == 'Merchandise') {
                    $scope.VendorOrderModel.addOneItemOnly(selectedRecord.originalObject,1,null);
                    //$scope.VendorOrderModel.AlternateParts_addActionSearchRecSelectCallback(selectedRecordId);
                } else if (selectedRecord.originalObject.Info == 'Vendor') {
                    var selectedRecordId = selectedRecord.originalObject.Value;
                    if (selectedRecordId.length == 18) {
                        selectedRecordId = selectedRecordId.substring(0, 15);
                    }
                    $scope.VendorOrderModel.addVendor(selectedRecordId);
                 }
               }
               else
               {
                 Notification.error('Cannot add items, Order is submited');
               }
               
                $scope.VendorOrderModel.resetSearchBox();
            }
            
            $scope.VendorOrderModel.addOneItemOnly = function(originalObject , qtyRequired, voLineItem ){
                
                    var partId = originalObject.Value;
                    var vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId =  $scope.VendorOrderModel.voHeaderId;
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0]["FieldName"]="LastModified";
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0]["SortDirection"]="";
                    $scope.VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.customersPageSortAttrsJSON.CurrentPage = 1;
                    $scope.VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage = 1;
                    
                    var itemsPageSortAttrsJSON =  $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON;
                     var IsSearched=true;
                    
                    debug(itemsPageSortAttrsJSON)
                 vendorOrderService.addSearchedRecord(partId,  vendorId,  voHeaderId,  qtyRequired,
                         itemsPageSortAttrsJSON,  customersPageSortAttrsJSON, 
                         stocksPageSortAttrsJSON,voLineItem,IsSearched)
                    .then(function(resultInfo) {
                    
                        debug(resultInfo)
                        debug(resultInfo.NewLineItemId)
                        debug("-----------------------------------------")
                        $scope.VendorOrderModel.PopulateOnDemandAddSearched(resultInfo);
                        
                        // Set Edit Mode for Line Item
                        debug('My Edit Mode -->> ');
                        if(resultInfo.NewLineItemId != null) {
	                        var parentIndex = -1;
	                        var childIndex = -1;
	                        for(var i = 0; i < $scope.VendorOrderModel.vendorOrderLineItemGroupList.length; i++) {
	                        	for(var j = 0; j < $scope.VendorOrderModel.vendorOrderLineItemGroupList[i].VendorOrderLineItemList.length; j++) {
	                        		if($scope.VendorOrderModel.vendorOrderLineItemGroupList[i].VendorOrderLineItemList[j].Id == resultInfo.NewLineItemId) {
	                        			parentIndex = i;
	                        			childIndex = j;
	                        		}
	                        	}
	                        }
	                        debug('parentIndex  ' + parentIndex);
	                        debug('childIndex  ' + childIndex);
	                        
	                        if(parentIndex != -1 && childIndex != -1) {
	                        	$scope.VendorOrderModel.groupItems_editRow[parentIndex].voLineItems_editRow[childIndex].isEdit = true;
	                        }
                        }
                        debug('My Edit Mode Finish-->> ');
                        /*$scope.VendorOrderModel.TotalRequiredForStocks = resultInfo.TotalRequiredForStocks;
                        $scope.VendorOrderModel.vendorOrderLineItemReqByStockList = resultInfo.VOLineItemRequiredForStock;
                        $scope.VendorOrderModel.populateReqForStockItemsEditableModel($scope.VendorOrderModel.vendorOrderLineItemReqByStockList);
                        */
                        
                        setTimeout(function () {
                            $scope.VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount++;
                        }, 1000);
                    }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
            }
            
            
               $scope.VendorOrderModel.groupAllVOLineItemByRequiredType = function(isRequiredForCustomer){
                
                    
                    var vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId;
                    var voHeaderId =  $scope.VendorOrderModel.voHeaderId;
                    var itemsPageSortAttrsJSON =  $scope.VendorOrderModel.itemsPageSortAttrsJSON;
                    var customersPageSortAttrsJSON = $scope.VendorOrderModel.customersPageSortAttrsJSON;
                    var stocksPageSortAttrsJSON =  $scope.VendorOrderModel.stocksPageSortAttrsJSON;
                  
                    
                    vendorOrderService.groupAllVOLineItem(vendorId,  voHeaderId,  isRequiredForCustomer,  itemsPageSortAttrsJSON,customersPageSortAttrsJSON, stocksPageSortAttrsJSON)
                     .then(function(resultInfo) {
                     
                           $scope.VendorOrderModel.populatePageModels(resultInfo);
                     
                     }, function(errorSearchResult) {
                        Notification.error('Some error occurred, please try again.');
                    });
               
            }
            
            // Method for DOM action: Update Order Status for Vendor Order Header
            $scope.VendorOrderModel.updateVOHederOrderStatus = function (status) {
                if(status != null){
                    $scope.VendorOrderModel.VendorOrderHeader.Status = status;
                }
                
                vendorOrderService.updateVOHederOrderType($scope.VendorOrderModel.voHeaderId, $scope.VendorOrderModel.VendorOrderHeader.OrderType.Id, $scope.VendorOrderModel.VendorOrderHeader.Status)
                .then(function(resultInfo) {
                    if(status == null){
                        $scope.VendorOrderModel.loadAllGridDetails();
                    }
                    Notification.success('Successfuly updated.');
                }, function(errorSearchResult) {
                    Notification.error('Some error occurred, please try again.');
                });
            }
        
            // Method for DOM action: Add
            $scope.VendorOrderModel.RelatedList_addAction = function (event, typeToSearch) {
                $scope.VendorOrderModel.setFocusToSearchBox(typeToSearch);
            }
        
            // Set focus on search text box
            // used when to add related records via page level search box
            $scope.VendorOrderModel.setFocusToSearchBox = function (typeToSearch) {
                $scope.typeToSearch = typeToSearch;
                $scope.PreferredObject = typeToSearch;
                angular.element('#SearchToaddCutomer').focus();
            }
        
            // Reset the search object in serch autocomplete
            $scope.VendorOrderModel.resetSearchBox = function () {
                $scope.typeToSearch = "";
                $scope.PreferredObject = "";
            }
            
            // Pop Up opening and hiding functions
            $scope.VendorOrderModel.showNeededForPopUp = function (event, voGroupId, voHeaderId) {
                $scope.applyCssOnPopUp(event, '.Vendor-Order-popup');
                vendorOrderService.getGroupRecDetail(voGroupId, voHeaderId).then(function (voGroupRecord) {
                    debug(voGroupRecord);
                    if (voGroupRecord.length > 0) {
                        $scope.VendorOrderModel.voGroupRecordDetail = voGroupRecord[0];
                    }
                }, function (errorSearchResult) {
                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
                });
            }
            
            $scope.VendorOrderModel.hideNeededForPopUp = function () {
                angular.element('.Vendor-Order-popup').hide();
            }
    
            $scope.VendorOrderModel.showCOPopUp = function (event, coHeaderId) {
                $scope.applyCssOnPopUp(event, '.Vendor-Order-CODetail-Popup');
                //coHeaderId = 'a0Io0000006YgOo';
                vendorOrderService.getCOHeaderRec(coHeaderId).then(function (coHeaderRecord) {
                    debug(coHeaderRecord);
                    if (coHeaderRecord.length > 0) {
                        $scope.VendorOrderModel.coHeaderInfoDetail = coHeaderRecord[0];
                    }
                }, function (errorSearchResult) {
                    $scope.CustomerOrder.OverlayInfo = errorSearchResult;
                });
            }
    
            $scope.VendorOrderModel.hideCOPopUp = function () {
                angular.element('.Vendor-Order-CODetail-Popup').hide();
            }
    
            $scope.VendorOrderModel.showPartPopUp = function (event, partId) {
                $scope.applyCssOnPopUp(event, '.Vendor-Order-Part-Popup');
                
                vendorOrderService.getPartRecord(partId).then(function (partRecord) {
                    if (partRecord.PartDetailRec != undefined) {
                        $scope.VendorOrderModel.partInfoDetail = partRecord.PartDetailRec;
                        $scope.VendorOrderModel.loadChartData();
                    }
                }, function (errorSearchResult) {
                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
                });
            }
            
            
            $scope.VendorOrderModel.showPopUpVendorOrderPartDetails=function(event, voli){
            
                $scope.applyCssOnPopUpRight(event, '.Vendor-Order-Needpopup');
                
                vendorOrderService.getStockRecDetail(voli).then(function (partRecord) {
                      $scope.VendorOrderModel.voliPartDetails = partRecord[0];
                   
                     debug( $scope.VendorOrderModel.voliPartDetails);
                }, function (errorSearchResult) {
                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
                });
            
            
            }
            $scope.VendorOrderModel.hidePopUpVendorOrderPartDetails=function(){
            
             angular.element('.Vendor-Order-Needpopup').hide();
            }
    
            $scope.VendorOrderModel.getLocations = function () {
                if ($scope.VendorOrderModel.partInfoDetail != undefined && $scope.VendorOrderModel.partInfoDetail.Location != null) {
                    return $scope.VendorOrderModel.partInfoDetail.Location.split(';');
                }
            }
    
            $scope.VendorOrderModel.hidePartPopUp = function () {
                angular.element('.Vendor-Order-Part-Popup').hide();
            }
    
            $scope.applyCssOnPopUp = function (event, className) {
                var targetEle = angular.element(event.target);
                var elementWidth = targetEle.width();
                if (targetEle.width() > targetEle.parent().width()) {
                    elementWidth = targetEle.parent().width() - 15;
                }
                angular.element(className).css('top', targetEle.offset().top - 22);
                angular.element(className).css('left', targetEle.offset().left + elementWidth + 20);
                angular.element(className).show();
                
                $scope.VendorOrderModel.LockVendorOrder=function(){
                    $scope.VendorOrderModel.VendorOrderHeader.Status = 'Locked';
                }
            }
            
            $scope.applyCssOnPopUpRight = function (event, className) {
                var targetEle = angular.element(event.target);
                var elementWidth = targetEle.width();
                if (targetEle.width() > targetEle.parent().width()) {
                    elementWidth = targetEle.parent().width() - 15;
                }
                angular.element(className).css('top', targetEle.offset().top - 22);
                angular.element(className).css('left', targetEle.offset().left + elementWidth-400);
                angular.element(className).show();
                
                $scope.VendorOrderModel.LockVendorOrder=function(){
                    $scope.VendorOrderModel.VendorOrderHeader.Status = 'Locked';
                }
            }
            
            //function Enable /Disable Submit order Button
             $scope.VendorOrderModel.EnableFinaliseOrder = function(){
                if($scope.VendorOrderModel.VendorOrderHeader.Status == 'On Order'  || $scope.VendorOrderModel.vendorOrderLineItemGroupList.length == 0 ||
                        $scope.VendorOrderModel.VendorOrderHeader.Status == 'Partially Received' || $scope.VendorOrderModel.VendorOrderHeader.Status == 'Received'){
                    return false;
                }
                else{
                 return true;
                }
             }
             
             
             //Submit Order
            $scope.VendorOrderModel.finalizeOrder = function(){
             
            var  voHeaderId = $scope.VendorOrderModel.VendorOrderHeader.Id;
            var vendorId = $scope.VendorOrderModel.VendorOrderHeader.VendorId
            
            debug(voHeaderId +','+ vendorId  +','+  $scope.VendorOrderModel.itemsPageSortAttrsJSON +','+  $scope.VendorOrderModel.customersPageSortAttrsJSON
            +','+  $scope.VendorOrderModel.stocksPageSortAttrsJSON)
             vendorOrderService.finalizeVendorOrder( voHeaderId , vendorId , $scope.VendorOrderModel.itemsPageSortAttrsJSON , $scope.VendorOrderModel.customersPageSortAttrsJSON, $scope.VendorOrderModel.stocksPageSortAttrsJSON)
                .then(function (successfulResult) {
                        $scope.VendorOrderModel.populatePageModels(successfulResult);
                        
                }, function (errorSearchResult) {
                    $scope.VendorOrderModel.OverlayInfo = errorSearchResult;
                });
                
             }
            
            $scope.VendorOrderModel.loadChartData = function () {
            
                var index = [];
            
                var MaxOrder = $scope.VendorOrderModel.partInfoDetail.AutoReorderTo;
                MaxOrder = MaxOrder + (MaxOrder * .1);
            
                $scope.partChartsDetails.MaxOrder = MaxOrder;
            
                debug('max' + $scope.partChartsDetails.MaxOrder)
            
                /*  $scope.partChartsDetails ={QtyComitted : {startAngle:2.827433388230814 , endAngle :4.3617251235193315  } ,
                QtyAvalable : {startAngle:4.3617251235193315 , endAngle : 6.397068040872217},
                Instock :{startAngle:2.827433388230814 , endAngle : 6.397068040872217},
                QtyOnOrder :{startAngle:6.397068040872217 , endAngle : 7.0},
                };  */
            
                $scope.chartData = {
                    QtyComitted : {
                        Angle : 4.3617251235193315
                    },
                    QtyAvalable : {
                        Angle : 6.397068040872217
                    },
                    Instock : {
                        Angle : 6.397068040872217
                    },
                    QtyOnOrder : {
                        Angle : 7.0
                    },
                    minPoint : {
                        Angle : 2.827433388230814
                    },
                    maxPoint : {
                        Angle : 12.00741192144774
                    },
                    ReOrderMin : {
                        Angle : 0
                    },
                    ReOrderMax : {
                        Angle : 0
                    }
            
                };
            
                $scope.labelDataValue = {
                    QtyComitted : $scope.VendorOrderModel.partInfoDetail.QtyCommited,
                    QtyAvalable : $scope.VendorOrderModel.partInfoDetail.QtyAvailable,
                    Instock : $scope.VendorOrderModel.partInfoDetail.InStockQty,
                    QtyOnOrder : $scope.VendorOrderModel.partInfoDetail.QtyOnOrder,
                    ReOrderMin : $scope.VendorOrderModel.partInfoDetail.AutoReorderAt,
                    ReOrderMax : $scope.VendorOrderModel.partInfoDetail.AutoReorderTo,
                    maxPoint : $scope.partChartsDetails.MaxOrder
                };
            
                debug($scope.labelDataValue)
            
                index.splice(1, 0, {
                    key : 'QtyComitted',
                    value : $scope.VendorOrderModel.partInfoDetail.QtyCommited,
                    lastAngle : 'init'
            
                });
            
                index.splice(2, 0, {
                    key : 'QtyAvalable',
                    value : $scope.VendorOrderModel.partInfoDetail.QtyAvailable,
                    lastAngle : 'QtyComitted'
            
                })
            
                index.splice(3, 0, {
                    key : 'Instock',
                    value : $scope.VendorOrderModel.partInfoDetail.InStockQty,
                    lastAngle : 'init'
            
                })
                index.splice(4, 0, {
                    key : 'QtyOnOrder',
                    value : $scope.VendorOrderModel.partInfoDetail.QtyOnOrder,
                    lastAngle : 'QtyAvalable'
            
                })
            
                index.splice(5, 0, {
                    key : 'maxOrder',
                    value : $scope.VendorOrderModel.partInfoDetail.AutoReorderTo,
                    lastAngle : 'QtyOnOrder'
            
                })
            
                index.splice(6, 0, {
                    key : 'ReOrderMin',
                    value : $scope.VendorOrderModel.partInfoDetail.AutoReorderAt,
                    lastAngle : 'ReOrderMin'
            
                })
            
                index.splice(7, 0, {
                    key : 'ReOrderMax',
                    value : $scope.VendorOrderModel.partInfoDetail.AutoReorderTo,
                    lastAngle : 'ReOrderMax'
            
                })
            
                $scope.temp = {}
            
                for (i = 0; i < index.length; i++) {
            
                    var firstangle = index[i].value;
                    var lastangle = index[i].lastAngle;
                    var key = index[i].key;
            
                    if (lastangle == 'init') {
            
                        var maxOrder = $scope.partChartsDetails.MaxOrder;
            
                        var endAngleVal = ((.45 * Math.PI * 2) + ((Math.PI * 2) * (0.009 * ((firstangle / maxOrder) * 100))));
            
                        $scope.temp[key] = {
                            startAngle : 2.827433388230814,
                            endAngle : endAngleVal
                        }
            
                        $scope.chartData[key] = {
                            Angle : endAngleVal
                        }
            
                    } else {
            
                        if (key == lastangle) {
            
                            var angleValue = ((.45 * Math.PI * 2) + (Math.PI * 2) * (0.009 * ((firstangle / maxOrder) * 100)))
                            $scope.chartData[key] = {
                                Angle : angleValue
                            };
                        } else {
            
                            var startAngleVal = $scope.temp[lastangle].endAngle;
                            var endAngleval = (startAngleVal +
                                ((Math.PI * 2) * (0.009 * ((firstangle / maxOrder) * 100))));
            
                            $scope.temp[key] = {
                                startAngle : startAngleVal,
                                endAngle : endAngleval
                            }
            
                            $scope.chartData[key] = {
                                Angle : $scope.temp[key].endAngle
                            };
            
                        }
                    }
            
                }
            
                $scope.chartData['minPoint'] = {
                    Angle : 2.827433388230814
                };
                $scope.chartData['maxPoint'] = {
                    Angle : 8.482300164692441
                };
            
                angular.copy($scope.temp, $scope.partChartsDetails);
            }
        });
        
        vendorOrderApp.service("vendorOrderService", function ($q) {
        
            //Finalise order Service
             
            
            this.finalizeVendorOrder = function(voHeaderId,vendorId,itemsPageSortAttrsJSON,customersPageSortAttrsJSON,stocksPageSortAttrsJSON){
                 voHeaderId = encodeString(voHeaderId);
                 vendorId = encodeString(vendorId);
                 itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                 customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                 stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                 var deferred = $q.defer();
                     Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.VendorOrderCtrl.finalizeVendorOrder}',
                                              voHeaderId,vendorId,  itemsPageSortAttrsJSON ,customersPageSortAttrsJSON
                                              ,stocksPageSortAttrsJSON,
                                                function (result, event) {
                                                if (event.type == 'exception') {
                                                    deferred.reject(event.message);
                                                } else { 
                                                    var vendorOrder = decodeString(result);
                                                    var find = '\'';
                                                    var re = new RegExp(find, 'g');
                                                    vendorOrder = vendorOrder.replace(re, '');
                                                    deferred.resolve(JSON.parse(vendorOrder));
                                                }
                                            }, {
                                                escape : true
                                            });
                                            return deferred.promise;
            }
            
        
            //Part Details
            this.getStockRecDetail = function(voliId){
                 voliId = encodeString(voliId);
                 var deferred = $q.defer();
                     Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.VendorOrderCtrl.getStockRecDetail}',
                                              voliId,
                                                function (result, event) {
                                                if (event.type == 'exception') {
                                                    deferred.reject(event.message);
                                                } else {
                                                    var vendorOrder = decodeString(result);
                                                    var find = '\'';
                                                    var re = new RegExp(find, 'g');
                                                    vendorOrder = vendorOrder.replace(re, '');
                                                    deferred.resolve(JSON.parse(vendorOrder));
                                                }
                                            }, {
                                                escape : true
                                            });
                                            return deferred.promise;
            }
            
            // service Function to Pick all item from Group type required for customer of required for stcock
            this.groupAllVOLineItem= function( vendorId,  voHeaderId,  isRequiredForCustomer,  itemsPageSortAttrsJSON,
                                      customersPageSortAttrsJSON,  stocksPageSortAttrsJSON){
                                       vendorId = encodeString(vendorId);
                                       voHeaderId = encodeString(voHeaderId);
                                       itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                                       customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                                       stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                                       var deferred = $q.defer();
                                            Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.VendorOrderCtrl.groupAllVOLineItem}',
                                                vendorId,  voHeaderId,  isRequiredForCustomer,  itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                                                function (result, event) {
                                                if (event.type == 'exception') {
                                                    deferred.reject(event.message);
                                                } else {
                                                    var vendorOrder = decodeString(result);
                                                    var find = '\'';
                                                    var re = new RegExp(find, 'g');
                                                    vendorOrder = vendorOrder.replace(re, '');
                                                    deferred.resolve(JSON.parse(vendorOrder));
                                                }
                                            }, {
                                                escape : true
                                            });
                                            return deferred.promise;
                                     }
        
        
        
            this.getVOLineItem = function (voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,RequiredType) {
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                RequiredType = encodeString(RequiredType);
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getVOLineItemWrapperJSON}',
                    null, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,null,RequiredType,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var vendorOrder = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        vendorOrder = vendorOrder.replace(re, '');
                        deferred.resolve(JSON.parse(vendorOrder));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            this.addVendor = function (vendorId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON) {
                vendorId = encodeString(vendorId);
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                var deferred = $q.defer();
        
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.addVendor}',
                    vendorId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    function (result, event) {
                    if (event.type == 'exception') {
                        deferred.reject(event.message);
                    } else {
                        var vendorOrder = decodeString(result);
                        var find = '\'';
                        var re = new RegExp(find, 'g');
                        vendorOrder = vendorOrder.replace(re, '');
                        deferred.resolve(JSON.parse(vendorOrder));
                    }
                }, {
                    escape : true
                });
                return deferred.promise;
            }
            
            this.getPartRecord = function (partId){
                partId = encodeString(partId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getPartByPartId}',
                                partId,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var partRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            partRec = partRec.replace(re, '');
                            deferred.resolve(JSON.parse(partRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.getCOHeaderRec = function (coHeaderId){
            	coHeaderId = encodeString(coHeaderId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getCoHeaderById}',
                                coHeaderId,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var coHeaderRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            coHeaderRec = coHeaderRec.replace(re, '');
                            deferred.resolve(JSON.parse(coHeaderRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.getGroupRecDetail = function (voGroupId, voHeaderId){
                voGroupId = encodeString(voGroupId);
                voHeaderId = encodeString(voHeaderId);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getGroupRecDetail}',
                                voGroupId, voHeaderId, 
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var vogDetailRec = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            vogDetailRec = vogDetailRec.replace(re, '');
                            deferred.resolve(JSON.parse(vogDetailRec));
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.getPaginatedItemsForVOHeader = function (gridName, voHeaderId, pageSortAttrsJSON){
                gridName = encodeString(gridName);
                voHeaderId = encodeString(voHeaderId);
                pageSortAttrsJSON = encodeString(angular.toJson(pageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.getPaginatedItemsForVOHeader}',
                    gridName, voHeaderId, pageSortAttrsJSON,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.groupAllSimilarVOLineItem = function (vendorId, partId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON){
                vendorId = encodeString(vendorId);
                partId = encodeString(partId);
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.groupAllSimilarVOLineItem}',
                    vendorId, partId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.removeGroupFromOrder = function (voLineItemGroupId, vendorId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON){
                voLineItemGroupId = encodeString(voLineItemGroupId);
                vendorId = encodeString(vendorId);
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.removeGroupFromOrder}',
                    voLineItemGroupId, vendorId, voHeaderId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            this.removeLineItemFromOrder = function (voLineItemId, voLineItemGroupId, voHeaderId, vendorId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON){
                voLineItemId = encodeString(voLineItemId);
                voLineItemGroupId = encodeString(voLineItemGroupId);
                voHeaderId = encodeString(voHeaderId);
                vendorId = encodeString(vendorId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.removeLineItemFromOrder}',
                    voLineItemId, voLineItemGroupId, voHeaderId, vendorId, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            
            // Add Searched Item
            this.addSearchedRecord = function (partId, vendorId, voHeaderId, qtyRequired, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON , voLineItem,IsSearched){
               debug(IsSearched);
                partId = encodeString(partId);
                vendorId = encodeString(vendorId);
                voHeaderId = encodeString(voHeaderId);
                itemsPageSortAttrsJSON = encodeString(angular.toJson(itemsPageSortAttrsJSON));
                customersPageSortAttrsJSON = encodeString(angular.toJson(customersPageSortAttrsJSON));
                stocksPageSortAttrsJSON = encodeString(angular.toJson(stocksPageSortAttrsJSON));
                voLineItem = encodeString(voLineItem);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.addVOLineItemFromSearchToAdd}',
                    partId, vendorId, voHeaderId, +qtyRequired, itemsPageSortAttrsJSON, customersPageSortAttrsJSON, stocksPageSortAttrsJSON,
                    voLineItem,IsSearched,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            resultInfo = JSON.parse(resultInfo.replace(re, ''));
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
            
            // Update Order Status
            this.updateVOHederOrderType = function (voHeaderId, orderType, orderStatus){
               
                voHeaderId = encodeString(voHeaderId);
                orderType = encodeString(orderType);
                orderStatus = encodeString(orderStatus);
                var deferred = $q.defer();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.VendorOrderCtrl.updateVOHederOrderType}',
                    voHeaderId, orderType, orderStatus,
                    function (result, event) {
                        if (event.type == 'exception') {
                            deferred.reject(event.message);
                        } else {
                            var resultInfo = decodeString(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            if(resultInfo != null){
                                resultInfo = resultInfo.replace(re, '');
                            }
                            deferred.resolve(resultInfo);
                        }
                    }, {
                        escape : true
                });
                return deferred.promise;
            }
        });
    </script>
        
    <body ng-controller="vendorOrderController" ng-init="VendorOrderModel.loadVendor()" ng-cloak="ng-cloak">
        <!-- Header start -->
        <c:BPGlobalHeader />
        <!-- Header End -->
        
        <!-- content start here -->
        <div  id="CO_sidebar_div1">
            <div class="row" id="CO_sidebar_div2">
                <!-- Side panel start -->   
                <div class="col-lg-3 col-md-3 col-sm-3 sidepanel" id="workflow-sidepanel">
                    <div class="row" id="VO_workflow_sidepanel_div1">
                        <div class="customerSelector" ng-if="VendorOrderModel.VendorOrderHeader.VendorName == null || VendorOrderModel.VendorOrderHeader.VendorName.length == 0" id="VO_workflow_sidepanel_div2">
                            <div id="VO_workflow_sidepanel_div3">
                                <div class="customerImage" id="CO_workflow_sidepanel_div4">
                                </div>
                                <div class="add-new" id="VO_workflow_sidepanel_div5">
                                    <span  style="font-style: italic;" id="CO_workflow_sidepanel_span_no_customer">No Vendor</span>
                                    <div id="VO_workflow_sidepanel_div6">
                                        <img src="{!URLFOR($Resource.icon_images, 'images/hashimg1.png')}" style="height:32px; width:20px;" id="VO_workflow_sidepanel_vendor_image"/>
                                        <a href="" ng-click="VendorOrderModel.RelatedList_addAction($event, 'Vendor')" id="Vo_workflow_sidepanel_add_vendor_link">Add One!</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="selectedUserBox" ng-if="VendorOrderModel.VendorOrderHeader.VendorName != null && VendorOrderModel.VendorOrderHeader.VendorName.length != 0" id="CO_workflow_sidepanel_div8">
                            <div class="customerImage" id="VO_workflow_sidepanel_div9">
                                <img src="{!URLFOR($Resource.UserImage, 'profile-pic.jpg')}" style="height:32px; width:32px;" id="VO_workflow_sidepanel_user_image"/>
                            </div>
                            <div class="userinfo" id="VO_workflow_sidepanel_div10">
                                <a href="" ng-mouseover="CustomerOrder.showCustomerInfoOverlay($event, VendorOrderModel.VendorOrderHeader.VendorId);" 
                                    ng-mouseleave="CustomerOrder.hideCustomerInfoOverlay();" id="VO_workflow_sidepanel_cust_name_link">{{VendorOrderModel.VendorOrderHeader.VendorName}} 
                                </a>
                            </div>
                            <div class="customerImage" id="VO_workflow_sidepanel_div11">
                                <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" id="CO_workflow_sidepanel_user_image_link"/>
                            </div>
                        </div>
                    </div>
                    <!-- 
                        <div class="row items-info">
                                <i class="fa fa-bicycle"></i>
                                <i class="fa fa-bicycle"></i>
                                <i class="fa fa-wrench"></i>
                                <span class="pull-right"><a href="">2 Owned</a></span>
                        </div>
                         -->
                    <div class="row" id="VO_workflow_sidepanel_div12">
                        <div class="selectedUserBox" id="VO_workflow_sidepanel_div13">
                            <div class="customerImage" id="VO_workflow_sidepanel_div14">
                                <img src="{!URLFOR($Resource.UserImage, 'profile-pic.jpg')}" style="height:32px; width:32px;" id="VO_workflow_sidepanel_user_img"/>
                            </div>
                            <div class="userinfo" id="VO_workflow_sidepanel_div15">
                                <a href="" ng-mouseover="CustomerOrder.showUserInfoOverlay($event, '{!$User.Id}');" 
                                    ng-mouseleave="CustomerOrder.hideCustomerInfoOverlay();" id="VO_workflow_sidepanel_user_name_link">{!$User.FirstName} {!$User.LastName}</a>
                            </div>
                            <div class="customerImage" id="VO_workflow_sidepanel_cust_image_div">
                                <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" id="VO_workflow_sidepanel_cust_image1"/>
                            </div>
                        </div>
                    </div>
                    <div class="row " style="margin-top:10px;" id="VO_workflow_sidepanel_info_div1" >
                        <div class="status_Info" id="VO_workflow_sidepanel_info_div1_div1">
                            <span style=" text-transform: uppercase">  <strong id="VO_workflow_sidepanel_info_div1_p_1">{{VendorOrderModel.VendorOrderHeader.Status}}</strong></span>
                            <button type="button" ng-if="VendorOrderModel.isPermittedToEditVOHeader" ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Open'" class="btn btn-default" id="VO_workflow_sidepanel_info_div1_button1" ng-click="VendorOrderModel.updateVOHederOrderStatus('Locked')" >Lock</button>
                            <button type="button" ng-if="VendorOrderModel.isPermittedToEditVOHeader" ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Locked'" class="btn btn-default" id="VO_workflow_sidepanel_info_div1_button2" ng-click="VendorOrderModel.updateVOHederOrderStatus('Open')" >Open</button>
                        </div>
                    </div >
                    <div class="row" style="margin-top:10px;" id="VO_workflow_sidepanel_info_div2">
                        <div class="col-lg-4 col-md-4 form-label" id="VO_workflow_sidepanel_info_div2_div1">
                            <strong id="VO_workflow_sidepanel_info_div2_p_1">ORDER TYPE</strong>
                        </div>
                        <div class="form-label" id="VO_workflow_sidepanel_info_div2_div2">
                            <span id="VO_workflow_sidepanel_info_div2_span">{{VendorOrderModel.VendorOrderHeader.OrderType.Name}}</span>
                        </div>
                    </div >
                    <div class="row" style="margin-top:10px;" id="VO_workflow_sidepanel_info_div3">
                        <div class="col-lg-4 col-md-4 form-label" id="VO_workflow_sidepanel_info_div3_div1">
                            <strong id="VO_workflow_sidepanel_info_div3_p_1">DATES</strong>
                        </div>
                        <div class="form-label" style="width:248px;" id="CO_workflow_sidepanel_info_div3_div2">
                            <span id="VO_workflow_sidepanel_info_div3_span1"><a href="" id="VO_workflow_sidepanel_info_div3_link1">Fullfil - 3 Days</a></span>
                            <span class="pull-right" style="margin-right:10px;" id="CVO_workflow_sidepanel_info_div3_span2">
                            <img src="{!URLFOR($Resource.icon_images, 'images/editicon.png')}" style="height:22px; width:18px;" id="VO_workflow_sidepanel_info_div3_image_1"/>
                            </span>
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px;" id="VO_workflow_sidepanel_info_div4">
                        <div class="col-lg-4 col-md-4 form-label" id="VO_workflow_sidepanel_info_div4_div1">
                            <strong id="VO_workflow_sidepanel_info_div3_p_1">&nbsp;</strong>
                        </div>
                        <div class="form-label" style="width:248px;" id="VO_workflow_sidepanel_info_div3_div2">
                            <span id="VO_workflow_sidepanel_info_div4_span1"><a href="" id="VO_workflow_sidepanel_info_div4_link2">Fullfil - 3 Days</a></span>
                            <span class="pull-right" style="margin-right:10px;" id="VO_workflow_sidepanel_info_div4_span2">
                            <img src="{!URLFOR($Resource.icon_images, 'images/editicon.png')}" style="height:22px; width:18px;" id="VO_workflow_sidepanel_info_div4_image_2"/>
                            </span>
                        </div>
                    </div>
                    <div class="row sections-link" id="workflow-actions" >
                        <div class="heading" id="VO_workflow_workflow_actions_div1">
                            <a href="#VO_Info_Block" rel="#VO_Info_Block" id="VO_workflow_workflow_actions_link1" ng-click="VendorOrderModel.setHighlightedSection = 'Info'">
                            <span id="VO_workflow_workflow_actions_span1" ng-class="{'color-orange' : VendorOrderModel.setHighlightedSection == 'Info'}">A &nbsp; Info </span>
                            </a>    
                        </div>
                        <div class="heading" id="CO_workflow_workflow_actions_div2">
                            <a href="#VO_Order_Section" rel="#VO_Order_Section" id="VO_workflow_workflow_actions_link2" ng-click="VendorOrderModel.setHighlightedSection = 'Order'">
                            <span id="CO_workflow_workflow_actions_span1" ng-class="{'color-orange' : VendorOrderModel.setHighlightedSection == 'Order'}">B &nbsp; Order </span>
                            </a>    
                        </div>
                        <div class="sub-heading" id="VO_workflow_workflow_actions_div2">
                            <a href="#VO_Order_Section" rel="#VO_Order_Section" id="VO_workflow_workflow_actions_link2" ng-click="VendorOrderModel.setHighlightedSection = 'Items'">
                                <span class="link" id="VO_workflow_workflow_actions_span2" ng-class="{'color-orange' : VendorOrderModel.setHighlightedSection == 'Items'}"><strong id="CO_workflow_workflow_actions_p2"></strong> &nbsp; Items</span>
                            </a>
                            <span class="icons" id="CO_workflow_workflow_actions_span2_1">
                            <i class="fa fa-circle online" id="VO_workflow_workflow_actions_p3"></i>
                            </span>
                        </div>
                        <div class="sub-heading" id="CO_workflow_workflow_actions_div3" ng-show="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForCustomers != 0">
                            <a href="#Order_Items_Required_Customer" rel="#Order_Items_Required_Customer" id="Vo_workflow_workflow_actions_link3" ng-click="VendorOrderModel.setHighlightedSection = 'RFC'">
                                <span class="link" id="VO_workflow_workflow_actions_span3" ng-class="{'color-orange' : VendorOrderModel.setHighlightedSection == 'RFC'}"><strong id="VO_workflow_workflow_actions_p3"></strong>  &nbsp; Required For Customer</span>
                            </a>
                            <span class="icons" id="VO_workflow_workflow_actions_span3_1">
                                <i class="fa fa-circle offline" id="VO_workflow_workflow_actions_p3_1"></i>
                                <img src="{!URLFOR($Resource.icon_images, 'images/editicon.png')}" style="height:22px; width:18px;" id="VO_workflow_workflow_actions_image3"/>
                            </span>
                        </div>
                        <div class="sub-heading" id="VO_workflow_workflow_actions_div4" ng-show="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForStocks != 0">
                            <a href="#Order_Items_Required_InStock" rel="#Order_Items_Required_InStock" id="CO_workflow_workflow_actions_link4" ng-click="VendorOrderModel.setHighlightedSection = 'RFS'">
                            <span class="link" id="CO_workflow_workflow_actions_span4" ng-class="{'color-orange' : VendorOrderModel.setHighlightedSection == 'RFS'}"><strong id="CO_workflow_workflow_actions_p4" ></strong>  &nbsp;  Required For Stock</span>
                            </a>
                            <span class="icons" id="CO_workflow_workflow_actions_span4_1">
                            <i class="fa fa-circle offline" id="CO_workflow_workflow_actions_p4_1"></i>
                            <img src="{!URLFOR($Resource.icon_images, 'images/editicon.png')}" style="height:22px; width:18px;" id="CO_workflow_workflow_actions_image4"/>
                            </span>
                        </div>
                        <div class="heading"  id="CO_workflow_workflow_actions_div5" ng-show="VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0">
                            <a href="#Stock_Excess_Block" rel="#Stock_Excess_Block" id="VO_workflow_workflow_actions_link5" ng-click="VendorOrderModel.setHighlightedSection = 'StockExcess'">
                            <span class="link" id="VO_workflow_workflow_actions_span5" ng-class="{'color-orange' : VendorOrderModel.setHighlightedSection == 'StockExcess'}">C &nbsp; Stock Excess  </span>
                            </a>
                            <span class="icons" id="VO_workflow_workflow_actions_span5_1">
                            <i class="fa fa-circle offline" id="VO_workflow_workflow_actions_p5"></i>
                            <img src="{!URLFOR($Resource.icon_images, 'images/editicon.png')}" id="VO_workflow_workflow_actions_image5" style="height:22px; width:18px;" />
                            </span>
                        </div>
                        <div class="heading" id="VO_workflow_workflow_actions_div71">
                            <a href="#Receiving_History" rel="#Receiving_History" id="VO_workflow_workflow_actions_link7" ng-click="VendorOrderModel.setHighlightedSection = 'Receiving_History'">
                            <span id="VO_workflow_workflow_actions_span7" ng-class="{'color-orange' : VendorOrderModel.setHighlightedSection == 'Finalize'}">D &nbsp; Receiving History </span>
                            </a>
                        </div>
                        <div class="heading" id="VO_workflow_workflow_actions_div7">
                            <a href="#VO_Finalize_Section" rel="#VO_Finalize_Section" id="VO_workflow_workflow_actions_link7" ng-click="VendorOrderModel.setHighlightedSection = 'Finalize'">
                            <span id="VO_workflow_workflow_actions_span7" ng-class="{'color-orange' : VendorOrderModel.setHighlightedSection == 'Finalize'}">E &nbsp; Finalize </span>
                            </a>
                        </div>
                    </div>
                    <div class="left-panel-price" id="CO_left-panel-price">
                        <div class="row" style="margin-top:40px;" id="CO_left-panel-price_row1">
                            <div class="col-lg-5 col-md-5 form-label" id="CO_left-panel-price_row1_form-label1">
                                <span id="CO_left-panel-price_row1_form-label_span">ORDER TOTAL</span>
                            </div>
                            <div class="col-lg-3 col-md-3 price" id="CO_left-panel-price_row1_price">
                                <span id="CO_left-panel-price_row1_price_span">{{VendorOrderModel.GroupTotalCost | currency}}</span>
                            </div>
                            <div class="col-lg-4 col-md-4">
                                &nbsp;
                            </div>
                            <div class="col-lg-5 col-md-4 form-label" id="CO_left-panel-price_row1_form-label2">
                                <span id="CO_left-panel-price_row1_form-label2_span">RECEIVED</span>
                            </div>
                            <div class="col-lg-3 col-md-5 price" id="CO_left-panel-price_row1_form-label2_price">
                                <span id="CO_left-panel-price_row1_form-label2_price_span">($0)</span>
                            </div>
                            <div class="col-lg-4 col-md-4">
                                &nbsp;
                            </div>
                        </div>
                        <div class="row total_price" id="CO_left-panel-price_total_price">
                            <div class="col-lg-5 col-md-5 form-label" id="CO_left-panel-price_total_price_form-label" style="margin-top: 3%;">
                                <strong>UNRECEIVED</strong>
                            </div>
                            <div class="col-lg-3 col-md-3 price" id="CO_left-panel-price_total_price_price" style="font-size: 21px;">
                                <span id="CO_left-panel-price_total_price_price_span" style="color: #00C853; text-decoration: underline;">
                                    {{VendorOrderModel.GroupTotalCost | currency}}
                                </span>
                            </div>
                            <div class="col-lg-4 col-md-4">
                                &nbsp;
                            </div>
                        </div>
                    </div>
                </div>
                <!-- End Left Side Bar --> 
                <!-- Start Center Panel -->
                <div class="col-lg-9 col-md-9 col-sm-9 topPadding" style="position: absolute; top: 30px; right: 0;">
                    <div class="row sub-search-row" id="fixed-seacrh-row">
                        <div class="col-lg-4 col-md-4 order-number" id="CO_fixed-seacrh-row_order-number">
                            <span id="CO_fixed-seacrh-row_order-number_span">{{VendorOrderModel.VendorOrderHeader.VOName}}</span>
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 sub-search" id="CO_fixed-seacrh-row_sub-search">
                            <div id="CO_fixed-seacrh-row_sub-search_padded-row" class="padded-row" style="width:100%">
                                <!--                                  <angucomplete id="CO_SearchToAdd" placeholder="Search To add" pause="200"   selectedobject="VendorOrderModel"   searchfields="Name" titlefield="Name" descriptionField="Info" otherdesc="Description" minlength="2" inputclass="form-control form-control-small" matchclass="highlight" /> -->
                                <c:AutoSuggestVendorOrder />
                            </div>
                        </div>
                        <div class="new-div" id="CO_fixed-seacrh-row_sub-search_new-div">
                            <a href="">New</a>
                        </div>
                        <div class="icons-div pull-right" id="CO_fixed-seacrh-row_sub-search_icons-div">
                            <div>
                                <a id="CO_fixed-seacrh-row_sub-search_icons-div_a" href=""><i class="fa fa-floppy-o"></i></a>
                            </div>
                            <div>
                                <a aria-expanded="false" class="dropdown-toggle" data-toggle="dropdown" href="#" role="button">
                                <span class="fa fa-cog"></span>
                                </a>
                                <ul id="CO_fixed-seacrh-row_sub-search_icons-div_link_dropdown" class="link_dropdown dropdown-menu" role="menu">
                                    <li><a href="">Convert to Quote</a></li>
                                    <li><a href="">Delete Vendor Order</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="row dynamic_heading heading_panel backgroundOrange VO_Info_Block_classClone" >
                        <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
                            <h1 id="CO_dynamic_heading_panel_left_heading_h1">
                                <span class="heading_icon handCursor" ng-click="VendorOrderModel.hidePanel($event, 'VO_Info_Block')">
                                    <i class="fa fa-chevron-circle-right"></i>
                                </span>
                                <p class="header_icon_text"> A Info</p>
                            </h1>
                        </div>
                    </div>
                    
                    <div class="clearfix"></div>
                    
                    <div class="row dynamic_heading heading_panel backgroundOrange VO_Info_Block_class" id="sticky-heading">
                        <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
                            <h1 id="CO_dynamic_heading_panel_left_heading_h1">
                                <span class="heading_icon handCursor" ng-click="VendorOrderModel.hidePanel($event, 'VO_Info_Block')">
                                    <i class="fa fa-chevron-circle-right"></i>
                                </span>
                                <p class="header_icon_text"> A Info</p>
                            </h1>
                        </div>
                    </div>
                    <!-- scrollable content  --> 
                    <div class="row content" id="scrollable">
                        <!-- geneal section -->
                        <div class="VO-form" id="VO_Info_Block">
                            <div class="row heading_panel_secondary">
                                <div class="left_heading_secondary">
                                    <h1 >General </h1>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-md-8">
                                    <div class="row general_section_row">
                                        <div class="col-lg-3 col-md-3 form-label Info_section_left_div" id="VO_info_form-label_VENDOR">
                                            <strong  >VENDOR <i class="fa fa-question-circle gray" data-toggle="tooltip" title="Vendor"></i> </strong>
                                        </div>
                                        <div class="customerSelector" id="VO_info_customerSelector" ng-if="VendorOrderModel.VendorOrderHeader.VendorName == null || VendorOrderModel.VendorOrderHeader.VendorName.length == 0">
                                            <div>
                                                <div class="customerImage" id="customer-order-info_customerSelector_customerImage">
                                                </div>
                                                <div class="add-new" id="customer-order-info_customerSelector_customerImage_add-new">
                                                    <span id="customer-order-info_customerSelector_customerImage_add-new_span"  style="font-style: italic;">No Vendor</span>
                                                    <div>
                                                        <img src="{!URLFOR($Resource.icon_images, 'images/hashimg1.png')}" style="height:32px; width:20px;" />
                                                        <a  id="customer-order-info_customerSelector_customerImage_add-new_addone" href=""
                                                            ng-click="VendorOrderModel.RelatedList_addAction($event, 'Vendor')">Add One!</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="selectedUserBox" id="customer-order-info_selectedUserBox" ng-if="VendorOrderModel.VendorOrderHeader.VendorName != null && VendorOrderModel.VendorOrderHeader.VendorName.length != 0">
                                            <div class="customerImage" id="customer-order-info_selectedUserBox_customerImage">
                                                <img src="{!URLFOR($Resource.UserImage, 'profile-pic.jpg')}" style="height:32px; width:32px;" />
                                            </div>
                                            <div class="userinfo" id="customer-order-info_selectedUserBox_userinfo">
                                                <a href="">{{VendorOrderModel.VendorOrderHeader.VendorName}}</a>
                                            </div>
                                            <div id="customer-order-info_selectedUserBox_customerImage" class="customerImage">
                                                <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row general_section_row">
                                        <div class="col-lg-3 col-md-3 form-label Info_section_left_div" id="customer-order-info_form-label_OWNER">
                                            <strong>OWNER <i class="fa fa-question-circle gray" data-toggle="tooltip" title="Owner"></i> </strong>
                                        </div>
                                        <div class="selectedUserBox" id="customer-order-info_OWNER_selectedUserBox">
                                            <div class="customerImage" id="customer-order-info_OWNER_selectedUserBox_customerImage">
                                                <img src="{!URLFOR($Resource.UserImage, 'profile-pic.jpg')}" style="height:32px; width:32px;" />
                                            </div>
                                            <div id="customer-order-info_OWNER_selectedUserBox_userinfo" class="userinfo">
                                                <a href="">{!$User.FirstName} {!$User.LastName}</a>
                                            </div>
                                            <div id="customer-order-info_OWNER_selectedUserBox_customerImage"  class="customerImage">
                                                <img src="{!URLFOR($Resource.icon_images, 'images/hashimg.png')}" style="height:32px; width:20px;" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row general_section_row">
                                        <div class="col-lg-3 col-md-3 form-label Info_section_left_div" id="customer-order-info_ASSIGNEE">
                                            <strong>STATUS <i class="fa fa-question-circle gray" data-toggle="tooltip" title="Status"></i> </strong>
                                        </div>
                                        <div class="status_Info_general">
                                            <div class="status_Info" id="VO_info_div1_div1">
                                                <div class="status_Info" id="VO_info_div1_div1">
                                                    <span>  <strong id="VO_workflow_sidepanel_info_div1_p_1">{{VendorOrderModel.VendorOrderHeader.Status}}</strong></span>
                                                    <button type="button" 
                                                            ng-if="VendorOrderModel.isPermittedToEditVOHeader"
                                                            ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Open'" 
                                                            class="btn btn-default" 
                                                            id="VO_workflow_sidepanel_info_div1_button1"
                                                            ng-click="VendorOrderModel.updateVOHederOrderStatus('Locked')">Lock</button>
                                                            
                                                    <button type="button" 
                                                            ng-if="VendorOrderModel.isPermittedToEditVOHeader"
                                                            ng-show="VendorOrderModel.VendorOrderHeader.Status == 'Locked'" 
                                                            class="btn btn-default" 
                                                            id="VO_workflow_sidepanel_info_div1_button2"
                                                            ng-click="VendorOrderModel.updateVOHederOrderStatus('Open')">Open</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-3 col-md-3 form-label Info_section_left_div" id="customer-order-info_STATUS">
                                            <strong>ORDER TYPE <i class="fa fa-question-circle gray" data-toggle="tooltip" title="Order Type"></i> </strong>
                                        </div>
                                        <div class="form-label " id="customer-order-info_STATUS_form-label">
                                            <select class="form-control" 
                                                    ng-if="VendorOrderModel.isPermittedToEditVOHeader"
                                                    ng-model="VendorOrderModel.VendorOrderHeader.OrderType" 
                                                    ng-click="$event.stopPropagation();"
                                                    ng-change="VendorOrderModel.updateVOHederOrderStatus()" 
                                                    ng-options = "orderType.Name for orderType in VendorOrderModel.OrderTypes"
                                                    style = "width: 38%">
                                            </select>
                                            <span id="customer-order-info_OrderType" ng-if="!VendorOrderModel.isPermittedToEditVOHeader">{{VendorOrderModel.VendorOrderHeader.OrderType.Name}}</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4" style="margin-top: 12%;">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6">
                                            <strong> Ordered Date : </strong>
                                        </div>
                                        <div class="col-lg-5 col-md-5">
                                             {{VendorOrderModel.VendorOrderHeader.OrderedDate}}
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6">
                                            <strong> Expected Date : </strong>
                                        </div>
                                        <div class="col-lg-5 col-md-5">
                                            {{VendorOrderModel.VendorOrderHeader.ExpectedDate}} 
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6">
                                            <strong> Receiving Date : </strong>
                                        </div>
                                        <div class="col-lg-5 col-md-5">
                                            {{VendorOrderModel.VendorOrderHeader.ReceivedDate}} 
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6">
                                            <strong> Created Date : </strong>
                                        </div>
                                        <div class="col-lg-5 col-md-5">
                                            {{VendorOrderModel.VendorOrderHeader.CreatedDate}} 
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="clearfix"></div>
                        
                        <div class="Order_Section" id="VO_Order_Section">
                            <div  id="VO_order_section_heading">
                                <div class="row  heading_panel_Main  backgroundOrange" >
                                    <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
                                        <h1 id="CO_dynamic_heading_panel_left_heading_h1">
                                            <span class="heading_icon handCursor" ng-click="VendorOrderModel.hidePanel($event, 'Vendor_Orders')" >
                                                <i class="fa fa-chevron-circle-right"></i>
                                            </span>
                                            <p class="header_icon_text"> B Order ....TOTAL {{VendorOrderModel.GroupTotalCost | currency}}</p>
                                        </h1>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            
                            <!-- START: ITEMS grid -->
                            <div class="VO_outer_block" id="Vendor_Orders">
                                <div class="VO-form" id="Order_Block" style="margin-bottom: 20px;">
                                    <div class="row heading_panel_secondary">
                                        <div class="left_heading_secondary pull-left" >
                                            <h1 >Items
                                                <i class="fa fa-plus-square plush_sign Orange handCursor" id="Order_Block_heading_panel_left_sub_h1_text_plus_icon"
                                                    ng-if="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && (VendorOrderModel.VendorOrderHeader.VendorId != null && VendorOrderModel.VendorOrderHeader.VendorId != '')"
                                                    ng-click="VendorOrderModel.RelatedList_addAction($event, 'Merchandise')"></i>
                                            </h1>
                                        </div>
                                        <div class="right_sub pull-right" id="Merchandise_block_heading_panel_right_sub">
                                            <i class="fa   fa-cog Orange Customtool" style="margin-right: 7px;" data-toggle="tooltip"> </i>
                                            <i class="fa fa-question-circle question_mark Orange Customtool"></i>
                                        </div>
                                    </div>
                                    
                                    <div class="gid_container" id="VO_Order_block_grid_container_Empty_Div" 
                                        ng-show="VendorOrderModel.vendorOrderLineItemGroupList.length == 0">
                                        No records found
                                    </div>
                                    
                                    <div id="1" ng-show="VendorOrderModel.vendorOrderLineItemGroupList.length != 0">
                                        <div class=" general_section_row">
                                            <div class="gid_container" id="VO_Order_block_grid_container">
                                                <table class="table" id="VendorOrderItem_Grid">
                                                    <col width="4%"  />
                                                    <col width="4%"  />
                                                    <col width="30%" />
                                                    <col width="7%"  />
                                                    <col width="13%" />
                                                    <col width="10%" />
                                                    <col width="10%"  />
                                                    <col width="10%" />
                                                    <col width="12%"  />
                                                    <tr  class="tableHeader">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.itemsPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.itemsPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            ITEM/DESC
                                                        </th>
                                                        <th>NEED</th>
                                                        <th>NEEDED FOR</th>
                                                        <th>NEEDED BY</th>
                                                        <th>ORDER</th>
                                                        <th>COST</th>
                                                        <th>TOTAL</th>
                                                    </tr>
                                                    <tbody  ng-repeat="voGroupItem in VendorOrderModel.vendorOrderLineItemGroupList" >
                                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit"  
                                                            ng-click="VendorOrderModel.editGroupItem($event, $index)"
                                                            ng-blur = "VendorOrderModel.editGroupItem($event, $index)" >
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}" class="group_exapnded_tr">
                                                                <i class="fa fa-wrench"></i>
                                                            </td >
                                                            <td></td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" >
                                                                 <div>
                                                                    
                                                                    <a ng-mouseover="VendorOrderModel.showPartPopUp($event, voGroupItem.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();"> 
                                                                        {{ voGroupItem.ItemDesc }}
                                                                    </a>
                                                                 </div>
                                                                 <div ng-if="voGroupItem.UnitType !=null" style="color:red">{{ voGroupItem.OrderType }}</div>
                                                                
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" >
                                                                {{ voGroupItem.Need }} 
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}" >
                                                                
                                                                <div>{{voGroupItem.NeededFor}}</div>
                                                                <div><span ng-if="voGroupItem.IsExcess" style="Color:red">
                                                                    <a ng-mouseover="VendorOrderModel.showNeededForPopUp($event, voGroupItem.Id, VendorOrderModel.voHeaderId);" ng-mouseleave="VendorOrderModel.hideNeededForPopUp();" style="color:red"> 
                                                                        With Excess
                                                                    </a>
                                                                </span>
                                                                </div>
                                                                
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" >
                                                                {{ voGroupItem.NeededBy  ==  null ? ' ' :voGroupItem.NeededBy }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}" >
                                                                {{ voGroupItem.OrderValue }} {{ voGroupItem.UnitType == null || voGroupItem.UnitType == "NULL" ?  " " :" " + voGroupItem.UnitType }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" >
                                                                {{ voGroupItem.Cost  | currency}}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}" >
                                                                {{ voGroupItem.Total  | currency}}
                                                            </td>
                                                        </tr>
                                                        <tr ng-show="VendorOrderModel.groupItems_editRow[$index].isEdit">
                                                          <td colspan="9" class="group_exapnded_tr">
                                                                 <div class="show_Availableline">
                                                                       AVAILABLE INVENTORY  {{voGroupItem.AvailablePart}}
                                                                 </div>
                                                          </td>
                                                        </tr>
                                                        <tr ng-show="VendorOrderModel.groupItems_editRow[$index].isEdit && VendorOrderModel.VendorOrderHeader.Status == 'Open'"
                                                            class="edit_panel sample-show-hide" id="vogroup_item_row{{$index}}_edit">
                                                            <td colspan="9" id="CO_Merchandise_block_grid_container_tbody_expandtr_td_1_{{$index}}">
                                                                <div id="vogroup_tbody_expandtr_edit_box_{{$index}}" class="edit_box col-lg-9 col-md-9" >
                                                                    <div class="its-heading" id="CO_Merchandise_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
                                                                        <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" styleClass="img_action"/>
                                                                        <span>Actions (2 Actions Available)</span>
                                                                    </div>
                                                                    <div id=" vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}} " class="edit-body">
                                                                        <form>
                                                                            <div class="radio" id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
                                                                                <label>
                                                                                <input type="radio" name="optionsRadios" id="optionsRadios1" value="1"  
                                                                                    ng-model= "VendorOrderModel.groupItems_editRow[$index].radioValue"/>
                                                                                <span>Add All Required For This Item</span>
                                                                                </label>
                                                                            </div>
                                                                            <div class="radio" id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
                                                                                <label>
                                                                                <input type="radio" name="optionsRadios" id="optionsRadios2" value="2"  
                                                                                    ng-model= "VendorOrderModel.groupItems_editRow[$index].radioValue"/>
                                                                                <span>Remove From Order</span>
                                                                                </label>
                                                                            </div>
                                                                            <a href="" id="vogroup_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" class="btn btn-default editform_btn" role="button"
                                                                                ng-click="VendorOrderModel.groupItemsGoAction($index, null)" >Go</a>                                
                                                                        </form>
                                                                    </div>
                                                                    <a href="" class="faq_link">
                                                                    <i class="fa fa-question-circle qmark"></i>
                                                                    </a>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                        <tr ng-show="VendorOrderModel.groupItems_editRow[$index].isEdit">
                                                            <td colspan="9" class="group_exapnded_tr">
                                                                <div ng-repeat="voLineItems in voGroupItem.VendorOrderLineItemList " class="volineItem_row_clickable"
                                                                     ng-click="VendorOrderModel.editvoLineItem($event,$parent.$index,$index)">
                                                                    <div class=" volineItem_row_item ">
                                                                        <div class="firstchild " ng-if="voLineItems.IsExcess == false" >{{voLineItems.ItemDesc}} </div>
<!--                                                                         <div class="firstchild " ng-if="voLineItems.IsExcess == true" >{{voLineItems.Location ==null ? ' ': voLineItems.Location }} </div> -->
                                                                        <div class="firstchild " ng-if="voLineItems.IsExcess == true"  >Location:{{voLineItems.Location}}</div>
                                                                       
                                                                       
                                                                        <div class="secondchild" ng-keydown="VendorOrderModel.editRowTabOut($event, $parent.$index ,$index)" 
                                                                            ng-show="(VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit &&
                                                                             voLineItems.IsRequiredForCustomer == false &&  voLineItems.IsExcess == false
                                                                             && (VendorOrderModel.VendorOrderHeader.Status == 'Open'|| VendorOrderModel.VendorOrderHeader.Status == 'Locked' )) || 
                                                                             (VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit 
                                                                             && voLineItems.IsSearchAdded==true
                                                                             && (VendorOrderModel.VendorOrderHeader.Status == 'Open'|| VendorOrderModel.VendorOrderHeader.Status == 'Locked' ))"> 
                                                                            <number-only-input input-value="voLineItems.Need" />
                                                                         </div> 
                                                                        
                                                                        <div class="secondchild" ng-show="(VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit==false)
                                                                                            ||(VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && voLineItems.IsRequiredForCustomer == true) 
                                                                                            || (VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && voLineItems.IsExcess == true)" >
                                                                             <span >
                                                                                   {{voLineItems.Need}}
                                                                             </span>
                                                                        </div>
                                                                         <div class="secondchild" ng-if="(VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && 
                                                                                    VendorOrderModel.VendorOrderHeader.Status != 'Open' &&  VendorOrderModel.VendorOrderHeader.Status != 'Locked' )"  >
                                                                             <span >
                                                                                            
                                                                                   {{voLineItems.Need}}
                                                                             </span>
                                                                        </div>
                                                                        <div class="thirdchild"  ng-if="voLineItems.IsExcess == false &&  voLineItems.IsRequiredForCustomer ==  true"> 
                                                                            <a ng-mouseover="VendorOrderModel.showCOPopUp($event, voLineItems.CoHeaderId);" ng-mouseleave="VendorOrderModel.hideCOPopUp();">
                                                                                {{voLineItems.NeededFor ==null ? ' ' : voLineItems.NeededFor }} 
                                                                            </a>
                                                                        </div>
                                                                        <div class="thirdchild"  ng-if="voLineItems.IsExcess == true"> Stock <div style="Color:red">Excess</div> </div>
                                                                         <div class="thirdchild"  ng-if="voLineItems.IsExcess == false &&  
                                                                          voLineItems.IsRequiredForCustomer == false && voLineItems.IsSearchAdded==false"> Stock </div>
                                                                        
                                                                        <div class="thirdchild"  ng-if="voLineItems.IsExcess == false &&  
                                                                          voLineItems.IsRequiredForCustomer == false && voLineItems.IsSearchAdded==true"> Stock </div>
                                                                       
                                                                        <div class="otherchild">&nbsp;</div>
                                                                        <div class="otherchild">  </div>
                                                                        <div class="lastchild "> </div>
                                                                    </div>
                                                                    <div class="edit_panel row" ng-show="VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].isEdit && voLineItems.IsExcess == false && VendorOrderModel.VendorOrderHeader.Status== 'Open'">
                                                                        <div id="volineitem_tbody_expandtr_edit_box_{{$index}}" class="edit_box col-lg-9 col-md-9" >
                                                                            <div class="its-heading" id="volineitem_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
                                                                                <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" styleClass="img_action"/>
                                                                                <span>Actions (2 Actions Available)</span>
                                                                            </div>
                                                                            <div id=" volineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}} " class="edit-body">
                                                                                <form>
                                                                                    <div class="radio" id="volineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
                                                                                        <label>
                                                                                        <input type="radio" name="optionsRadios" id="optionsRadios1" value="1"  
                                                                                            ng-model= "VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].radioValue"/>
                                                                                        <span>Add All Required For This Item</span>
                                                                                        </label>
                                                                                    </div>
                                                                                    <div class="radio" id="volineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
                                                                                        <label>
                                                                                        <input type="radio" name="optionsRadios" id="optionsRadios2" value="2"  
                                                                                            ng-model= "VendorOrderModel.groupItems_editRow[$parent.$index].voLineItems_editRow[$index].radioValue"/>
                                                                                        <span>Remove From Order</span>
                                                                                        </label>
                                                                                    </div>
                                                                                    <a href="" id="volineitem_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" class="btn btn-default editform_btn" role="button"
                                                                                        ng-click="VendorOrderModel.groupItemsGoAction($index, $parent.$index)" >Go</a>                                
                                                                                </form>
                                                                            </div>
                                                                            <a href="" class="faq_link">
                                                                            <i class="fa fa-question-circle qmark"></i>
                                                                            </a>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        
                                        <!-- Pagination container -->
                                        <div class="row pagination_container" id="Vendor_Order_Items_Pagination" ng-if="VendorOrderModel.TotalLineItemGroups != undefined" >
                    <!--                        ng-show="VendorOrderModel.TotalLineItemGroups > VendorOrderModel.itemsPageSortAttrsJSON.PageSize" > -->
                                            <list-pagination id-value = "Vendor_Order_Items_Pagination_" 
                                                             total-records-length = "VendorOrderModel.TotalLineItemGroups"
                                                             page-size = "VendorOrderModel.itemsPageSortAttrsJSON.PageSize"
                                                             current-page = "VendorOrderModel.itemsPageSortAttrsJSON.CurrentPage"
                                                             changes-count = "VendorOrderModel.itemsPageSortAttrsJSON.ChangesCount"
                                                             pagination-control-method = "VendorOrderModel.Items_paginationControlsAction" />
                                        </div>
                                    </div>
                                </div>
                            <!-- END: ITEMS grid -->
                            
                            <!-- START: REQUIRED FOR CUSTOMERS grid -->
                            <div class="VO-form" id="Order_Items_Required_Customer"
                                ng-if="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForCustomers != 0">
                                <div class="row heading_panel_secondary">
                                    <div class="left_heading_secondary pull-left">
                                        <h1>Required For Customer</h1>
                                    </div>
                                    <div class="right_sub pull-right" id="Merchandise_block_heading_panel_right_sub">

                                        <div class="dropdown custom-cog-dropdown">
                                            <button
                                                class="btn btn-default dropdown-toggle custom-cog-button"
                                                style="margin-right: 7px;" type="button" id="menu1"
                                                data-toggle="dropdown">
                                                <i class="fa   fa-cog Orange Customtool"
                                                    data-toggle="tooltip"> </i>
                                            </button>
                                            <ul class="dropdown-menu custom-cog-dropdown-menu"
                                                role="menu" aria-labelledby="menu1">
                                                <li role="presentation"><a role="menuitem itemtab"
                                                    tabindex="-1"
                                                    ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(true)">Add
                                                        All Items</a></li>

                                            </ul>
                                        </div>

                                        <i
                                            class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>
                                    </div>
                                </div>

                                <div class="gid_container"
                                    id="VO_Order_block_grid_container_Empty_Div"
                                    ng-show="VendorOrderModel.vendorOrderLineItemReqByCustomerList.length == 0">
                                    No records found</div>

                                <div id="1"
                                    ng-show="VendorOrderModel.vendorOrderLineItemReqByCustomerList.length != 0">
                                    <div class=" general_section_row">
                                        <div class="gid_container" id="VO_Order_block_grid_container">
                                            <table class="table" id="VendorOrderItem_Grid">
                                                <col width="4%" />
                                                <col width="4%" />
                                                <col width="30%" />
                                                <col width="7%" />
                                                <col width="13%" />
                                                <col width="10%" />
                                                <col width="10%" />
                                                <col width="10%" />
                                                <col width="12%" />
                                                <tr class="tableHeader">
                                                    <th></th>
                                                    <th></th>
                                                    <th style="cursor: pointer;"
                                                        ng-click="VendorOrderModel.customersPageSortControlsAction();">
                                                        <i class="fa fa-sort-asc"
                                                        ng-show="VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'" />
                                                        <i class="fa fa-sort-desc"
                                                        ng-show="VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'" />
                                                        <i class="fa fa-sort"
                                                        ng-show="VendorOrderModel.customersPageSortAttrsJSON.Sorting[0].SortDirection == ''" />
                                                        ITEM/DESC
                                                    </th>
                                                    <th>NEEDED FOR</th>
                                                    <th>CUSTOMER</th>
                                                    <th>NEEDED BY</th>
                                                    <th>NEED</th>
                                                    <th>COST</th>
                                                    <th>TOTAL</th>
                                                </tr>
                                                <tbody
                                                    ng-repeat="reqByCustomer in VendorOrderModel.vendorOrderLineItemReqByCustomerList">
                                                    <tr class="clickable_row" id="rowGroup{{$index}}"
                                                        rel="vogroup_item_row{{$index}}_edit"
                                                        ng-click="VendorOrderModel.editRequiredForCustomerItem($event, $index)">
                                                        <td
                                                            id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}">
                                                            <i class="fa fa-wrench"></i>
                                                        </td>
                                                        <td></td>
                                                        <td
                                                            id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}">
                                                            <a ng-mouseover="VendorOrderModel.showPartPopUp($event, reqByCustomer.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();">
                                                                    {{ reqByCustomer.Item }}
                                                            </a>
                                                        </td>
                                                        <td
                                                            id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}">
                                                            <a ng-mouseover="VendorOrderModel.showCOPopUp($event, reqByCustomer.CoHeaderId);" ng-mouseleave="VendorOrderModel.hideCOPopUp();">
                                                                {{ reqByCustomer.NeededFor }}
                                                            </a>
                                                        </td>
                                                        <td
                                                            id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}">
                                                            {{reqByCustomer.Customer }}</td>
                                                        <td
                                                            id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}">
                                                            {{ reqByCustomer.NeededBy == null ? ' '
                                                            :reqByCustomer.NeededBy }}</td>
                                                        <td
                                                            id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}">
                                                            {{ reqByCustomer.Need }}</td>
                                                        <td
                                                            id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}">
                                                            {{ reqByCustomer.Cost | currency}}</td>
                                                        <td
                                                            id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}">
                                                            {{ reqByCustomer.Total | currency}}</td>
                                                    </tr>

                                                    <tr
                                                        ng-show="VendorOrderModel.requiredForCustomerItems_editRow[$index].isEdit"
                                                        class="edit_panel sample-show-hide"
                                                        id="req_for_customer_item_row{{$index}}_edit">
                                                        <td colspan="9"
                                                            id="ReqFor_Customer_block_grid_container_tbody_expandtr_td_1_{{$index}}">
                                                            <div
                                                                id="ReqFor_Customer_tbody_expandtr_edit_box_{{$index}}"
                                                                class="edit_box col-lg-9 col-md-9">
                                                                <div class="its-heading"
                                                                    id="ReqFor_Customer_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
                                                                    <img
                                                                        src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}"
                                                                        styleClass="img_action" /> <span>Actions (2 Actions Available)</span>
                                                                </div>
                                                                <div
                                                                    id="ReqFor_Customer_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}} "
                                                                    class="edit-body">
                                                                    <form>
                                                                        <div class="radio"
                                                                            id="ReqFor_Customer_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
                                                                            <label> <input type="radio"
                                                                                name="optionsRadios" id="optionsRadios1" value="1"
                                                                                ng-model="VendorOrderModel.requiredForCustomerItems_editRow[$index].radioValue" />
                                                                                <span>Add All Required For This Item</span>
                                                                            </label>
                                                                        </div>
                                                                        <div class="radio"
                                                                            id="ReqFor_Customer_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
                                                                            <label> <input type="radio"
                                                                                name="optionsRadios" id="optionsRadios2" value="2"
                                                                                ng-model="VendorOrderModel.requiredForCustomerItems_editRow[$index].radioValue" />
                                                                                <span>Add this item only</span>
                                                                            </label>
                                                                        </div>
                                                                        <a href=""
                                                                            id="ReqFor_Customer_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn"
                                                                            class="btn btn-default editform_btn" role="button"
                                                                            ng-click="VendorOrderModel.requiredForCustomerItemsGoAction($index)">Go</a>
                                                                    </form>
                                                                </div>
                                                                <a href="" class="faq_link"> <i
                                                                    class="fa fa-question-circle qmark"></i>
                                                                </a>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- Pagination container -->
                                    <div class="pagination_container"
                                        id="Vendor_Order_Items_Pagination"
                                        ng-if="VendorOrderModel.TotalRequiredForCustomers != undefined">
                                        <!--                        ng-show="VendorOrderModel.TotalRequiredForCustomers > VendorOrderModel.customersPageSortAttrsJSON.PageSize" > -->
                                        <list-pagination id-value="Vendor_Order_Items_Pagination_"
                                            total-records-length="VendorOrderModel.TotalRequiredForCustomers"
                                            page-size="VendorOrderModel.customersPageSortAttrsJSON.PageSize"
                                            current-page="VendorOrderModel.customersPageSortAttrsJSON.CurrentPage"
                                            changes-count="VendorOrderModel.customersPageSortAttrsJSON.ChangesCount"
                                            pagination-control-method="VendorOrderModel.RequiredByCustomer_paginationControlsAction" />
                                    </div>
                                </div>
                            </div>
                            <!-- END: REQUIRED FOR CUSTOMERS grid -->
                            
                            <!-- START: REQUIRED FOR STOCK grid -->
                                <div class="VO-form" id="Order_Items_Required_InStock" ng-if="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForStocks != 0">
                                    <div class="row heading_panel_secondary">
                                        <div class="left_heading_secondary pull-left">
                                            <h1> Required For Stock </h1>
                                        </div>
                                        <div class="right_sub pull-right" id="Merchandise_block_heading_panel_right_sub">
                                                  <div class="dropdown custom-cog-dropdown">
                                                 <button class="btn btn-default dropdown-toggle custom-cog-button" style="margin-right: 7px;" type="button" id="menu1" data-toggle="dropdown">
                                                    <i class="fa   fa-cog Orange Customtool"  data-toggle="tooltip"> </i></button>
                                                    <ul class="dropdown-menu custom-cog-dropdown-menu" role="menu" aria-labelledby="menu1">
                                                      <li role="presentation"><a role="menuitem itemtab" tabindex="-1" ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(false)">Add All Items</a></li>
                                                     
                                                    </ul>
                                              </div>
                                              <i class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>
                                        </div>
                                    </div>
                                    
                                    <div class="gid_container" id="VO_Order_block_grid_container_Empty_Div" 
                                        ng-show="VendorOrderModel.vendorOrderLineItemReqByStockList.length == 0">
                                        No records found
                                    </div>
                                    
                                    <div id="1" ng-show="VendorOrderModel.vendorOrderLineItemReqByStockList.length != 0">
                                        <div class=" general_section_row">
                                            <div class="gid_container" id="VO_Order_block_grid_container">
                                                <table class="table" id="VendorOrderItem_Grid">
                                                    <col width="4%"  />
                                                    <col width="4%"  />
                                                    <col width="30%" />
                                                    <col width="7%"  />
                                                    <col width="13%" />
                                                    <col width="10%" />
                                                    <col width="10%"  />
                                                    <col width="10%" />
                                                    <col width="12%"  />
                                                    <tr class="tableHeader">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.stocksPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            ITEM/DESC
                                                        </th>
                                                        <th>LOCATION</th>
                                                        <th>AVAILABLE</th>
                                                        <th>INCOMING</th>
                                                        <th>NEED</th>
                                                        <th>COST</th>
                                                        <th>TOTAL</th>
                                                    </tr>
                                                    <tbody  ng-repeat="reqByStock in VendorOrderModel.vendorOrderLineItemReqByStockList" >
                                                        <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit"  
                                                            ng-click="VendorOrderModel.editRequiredForStockItem($event, $index)" >
                                                            <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}">
                                                                <i class="fa fa-wrench"></i>
                                                            </td >
                                                            <td></td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" >
                                                                <a ng-mouseover="VendorOrderModel.showPartPopUp($event,reqByStock.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();"> 
                                                                    {{ reqByStock.Item }} 
                                                                </a>
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" >
                                                                {{ reqByStock.Location }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}" >
                                                                {{reqByStock.QtyAvailable }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" >
                                                                {{ reqByStock.Incoming }}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_6_{{$index}}" >
                                                                <a ng-mouseover="VendorOrderModel.showPopUpVendorOrderPartDetails($event, reqByStock.Id);" ng-mouseleave="VendorOrderModel.hidePopUpVendorOrderPartDetails()" >
                                                                    {{ reqByStock.Need }}
                                                                </a>
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" >
                                                                {{ reqByStock.Cost | currency}}
                                                            </td>
                                                            <td  id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}" >
                                                                {{ reqByStock.Total | currency}}
                                                            </td>
                                                        </tr>
                                                        
                                                        <tr ng-show="VendorOrderModel.requiredForStockItems_editRow[$index].isEdit"
                                                            class="edit_panel sample-show-hide" id="req_for_stock_item_row{{$index}}_edit">
                                                            <td colspan="9" id="ReqFor_Stock_block_grid_container_tbody_expandtr_td_1_{{$index}}">
                                                                <div id="ReqFor_Stock_tbody_expandtr_edit_box_{{$index}}" class="edit_box col-lg-9 col-md-9" >
                                                                    <div class="its-heading" id="ReqFor_Stock_block_grid_container_tbody_expandtr_edit_box_its-heading_{{$index}}">
                                                                        <img src="{!URLFOR($Resource.icon_images, 'images/edit_icon.png')}" styleClass="img_action"/>
                                                                        <span>Actions (2 Actions Available)</span>
                                                                    </div>
                                                                    <div id="ReqFor_Stock_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}} " class="edit-body">
                                                                        <form>
                                                                            <div class="radio" id="ReqFor_Stock_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_1">
                                                                                <label>
                                                                                <input type="radio" name="optionsRadios" id="optionsRadios1" value="1"  
                                                                                    ng-model= "VendorOrderModel.requiredForStockItems_editRow[$index].radioValue"/>
                                                                                <span>Add All Required For This Item</span>
                                                                                </label>
                                                                            </div>
                                                                            <div class="radio" id="ReqFor_Stock_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_radio_2">
                                                                                <label>
                                                                                <input type="radio" name="optionsRadios" id="optionsRadios2" value="2"  
                                                                                    ng-model= "VendorOrderModel.requiredForStockItems_editRow[$index].radioValue"/>
                                                                                <span>Add this item only</span>
                                                                                </label>
                                                                            </div>
                                                                            <a href="" id="ReqFor_Stock_tbody_expandtr_edit_box_its-heading_edit-body_{{$index}}_go_btn" class="btn btn-default editform_btn" role="button"
                                                                                ng-click="VendorOrderModel.requiredForStockItemsGoAction($index)" >Go</a>                                
                                                                        </form>
                                                                    </div>
                                                                    <a href="" class="faq_link">
                                                                        <i class="fa fa-question-circle qmark"></i>
                                                                    </a>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        
                                        <!-- Pagination container -->
                                        <div class="pagination_container" id="Vendor_Order_Items_Pagination" ng-if="VendorOrderModel.TotalRequiredForStocks != undefined" >
                    <!--                        ng-show="VendorOrderModel.TotalRequiredForStocks > VendorOrderModel.stocksPageSortAttrsJSON.PageSize" > -->
                                            <list-pagination id-value = "Vendor_Order_Items_Pagination_" 
                                                             total-records-length = "VendorOrderModel.TotalRequiredForStocks"
                                                             page-size = "VendorOrderModel.stocksPageSortAttrsJSON.PageSize"
                                                             current-page = "VendorOrderModel.stocksPageSortAttrsJSON.CurrentPage"
                                                             changes-count = "VendorOrderModel.stocksPageSortAttrsJSON.ChangesCount"
                                                             pagination-control-method = "VendorOrderModel.RequiredByStock_paginationControlsAction" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- END: REQUIRED FOR STOCK grid -->
                        </div>

                        <div class="clearfix"></div>
                 
                    
                         <div class="Excess_Section" id="Stock_Excess_Block" ng-show="VendorOrderModel.StockExcessList != undefined && VendorOrderModel.StockExcessList.length != 0">
                            <div  id="VO_order_section_heading">
                                <div class="row  heading_panel_Main  backgroundOrange" >
                                    <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
                                        <h1 id="CO_dynamic_heading_panel_left_heading_h1">
                                            <span class="heading_icon handCursor" ng-click="VendorOrderModel.hidePanel($event, 'Vendor_Orders')" >
                                                <i class="fa fa-chevron-circle-right"></i>
                                            </span>
                                            <p class="header_icon_text">C Stock Excess</p>
                                        </h1>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="clearfix"></div>
                             
                           
                            <div class="VO_outer_block" id="Vendor_Orders_Excess">
                            
                                <div class="VO-form" id="Order_Items_Required_InStock" ng-if="(VendorOrderModel.VendorOrderHeader.Status == 'Open' || VendorOrderModel.VendorOrderHeader.Status == 'Locked') && VendorOrderModel.TotalRequiredForStocks != 0">
                                    <div class="row heading_panel_secondary">
                                        <div class="left_heading_secondary pull-left">
<!--                                             <h1> Stock Excess </h1> -->
                                        </div>
                                            <div class="right_sub pull-right" id="Merchandise_block_heading_panel_right_sub">
                                                      <div class="dropdown custom-cog-dropdown">
                                                     <button class="btn btn-default dropdown-toggle custom-cog-button" style="margin-right: 7px;" type="button" id="menu1" data-toggle="dropdown">
                                                        <i class="fa   fa-cog Orange Customtool"  data-toggle="tooltip"> </i></button>
                                                        <ul class="dropdown-menu custom-cog-dropdown-menu" role="menu" aria-labelledby="menu1">
                                                          <li role="presentation"><a role="menuitem itemtab" tabindex="-1" ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(false)">Add All Items</a></li>
                                                         
                                                        </ul>
                                                  </div>
                                                  <i class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>
                                            </div>
                                    </div>
                              </div>
                              <div >
                                        <div class=" general_section_row">
                                            <div class="gid_container" id="VO_Order_block_grid_container">
                                                <table class="table" id="VendorOrderItem_Grid">
                                                    <col width="4%"  />
                                                    <col width="4%"  />
                                                    <col width="26%" />
                                                    <col width="9%"  />
                                                    <col width="8%" />
                                                    <col width="10%" />
                                                    <col width="10%"  />
                                                    <col width="10%" />
                                                    <col width="10%"  />
                                                    <tr class="tableHeader">
                                                        <th></th>
                                                        <th></th>
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.stocksPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            ITEM/DESC
                                                        </th>
                                                        <th>NEED</th>
                                                        <th>PKG QTY</th>
                                                        <th>ORDER LOTS</th>
                                                        <th>EXCESS</th>
                                                        <th>COST</th>
                                                        <th>STOCK EXCESS TOTAL</th>
                                                    </tr>
                                                    <tbody ng-repeat="stockExcess in VendorOrderModel.StockExcessList" >
                                                            <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit" >
                                                                <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}"> 
                                                                    <i class="fa fa-wrench"></i>
                                                                </td>
                                                                <td></td>
                                                                <td  id="VO_Group_block_grid_container_tbody_tr_td_2_{{$index}}" >
                                                                    <a ng-mouseover="VendorOrderModel.showPartPopUp($event, stockExcess.PartId);" ng-mouseleave="VendorOrderModel.hidePartPopUp();"> 
                                                                        {{ stockExcess.ItemDesc }} 
                                                                    </a>
                                                                </td>
                                                                <td  id="VO_Group_block_grid_container_tbody_tr_td_3_{{$index}}" >
                                                                    {{ stockExcess.Need}}
                                                                </td>
                                                                <td  id="VO_Group_block_grid_container_tbody_tr_td_4_{{$index}}" >
                                                                    {{stockExcess.PackageQty }}
                                                                </td>
                                                                <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" >
                                                                    {{ stockExcess.OrderLot }}
                                                                </td>
                                                                 <td  id="VO_Group_block_grid_container_tbody_tr_td_5_{{$index}}" >
                                                                    <a ng-mouseover="VendorOrderModel.showNeededForPopUp($event, stockExcess.VOLIGroupId, VendorOrderModel.voHeaderId);" ng-mouseleave="VendorOrderModel.hideNeededForPopUp();">
                                                                        {{ stockExcess.ExcessQty }}
                                                                    </a>
                                                                </td>
                                                                <td  id="VO_Group_block_grid_container_tbody_tr_td_7_{{$index}}" >
                                                                    {{ stockExcess.Cost | currency}}
                                                                </td>
                                                                <td  id="VO_Group_block_grid_container_tbody_tr_td_8_{{$index}}" >
                                                                    {{ stockExcess.Total | currency}}
                                                                </td>
                                                        </tr>
                                                     
                                                    </tbody>
                                    </table>
                                    </div>
                                    </div>
                                    </div>
                                    
                            </div>
                        </div>
                
                    <div class="clearfix"></div>
                    <!-- Receiving section history -->
                    
                    <div class="Receiving_History_Section" id="Receiving_History">
                            <div  id="VO_order_section_heading">
                                <div class="row  heading_panel_Main  backgroundOrange" >
                                    <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
                                        <h1 id="CO_dynamic_heading_panel_left_heading_h1">
                                            <span class="heading_icon handCursor" ng-click="VendorOrderModel.hidePanel($event, 'Vendor_Orders')" >
                                                <i class="fa fa-chevron-circle-right"></i>
                                            </span>
                                            <p class="header_icon_text">D Receiving History</p>
                                        </h1>
                                    </div>
                                </div>
                            </div>
                         <div class="clearfix"></div>
                           <div class="VO_outer_block" id="Vendor_Orders_Excess">
                            
                                <div class="VO-form" id="Order_Items_Required_InStock" >
                                    <div class="row heading_panel_secondary">
                                        <div class="left_heading_secondary pull-left">
                                            <h1 >Items
                                                <i class="fa fa-plus-square plush_sign Orange handCursor" id="Order_Block_heading_panel_left_sub_h1_text_plus_icon"
                                                    ng-click="VendorOrderModel.RelatedList_addAction($event, 'Merchandise')"></i>
                                            </h1>
                                        </div>
                                            <div class="right_sub pull-right" id="Merchandise_block_heading_panel_right_sub">
                                                      <div class="dropdown custom-cog-dropdown">
                                                     <button class="btn btn-default dropdown-toggle custom-cog-button" style="margin-right: 7px;" type="button" id="menu1" data-toggle="dropdown">
                                                        <i class="fa   fa-cog Orange Customtool"  data-toggle="tooltip"> </i></button>
                                                        <ul class="dropdown-menu custom-cog-dropdown-menu" role="menu" aria-labelledby="menu1">
                                                          <li role="presentation"><a role="menuitem itemtab" tabindex="-1" ng-click="VendorOrderModel.groupAllVOLineItemByRequiredType(false)">Add All Items</a></li>
                                                         
                                                        </ul>
                                                  </div>
                                                  <i class="fa fa-question-circle question_mark Orange Customtool custom-question"></i>
                                            </div>
                                    </div>
                                    
                                    
                              </div>
                                            <div class=" general_section_row">
                                           
                                           <div class="gid_container" id="VO_Order_block_grid_container">
                                               
                                                <table class="table" id="VendorOrderItem_Grid">
                                                    <col width="4%"  />
                                                    <col width="15%" />
                                                    <col width="10%"  />
                                                    <col width="10%" />
                                                    <col width="10%" />
                                                    <col width="14%"  />
                                                    <col width="15%" />
                                                   
                                                    <tr class="tableHeader">
                                                        <th></th>
                                                        
                                                        <th style="cursor: pointer;" ng-click="VendorOrderModel.stocksPageSortControlsAction();">
                                                            <i class="fa fa-sort-asc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'ASC'"/>
                                                            <i class="fa fa-sort-desc" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == 'DESC'"/>
                                                            <i class="fa fa-sort" ng-show="VendorOrderModel.stocksPageSortAttrsJSON.Sorting[0].SortDirection == ''"/>
                                                            PACKAGING SLIP
                                                        </th>
                                                        <th> RECEIVED</th>
                                                        <th> LINE ITEMS</th>
                                                        <th> TOTAL COST</th>
                                                        <th>RECEIVED BY</th>
                                                        <th>STATUS</th>
                                                       
                                                    </tr>
                                                   <tbody ng-repeat="VRHistory in VendorOrderModel.VRHistoryList" >
                                                            <tr class="clickable_row" id="rowGroup{{$index}}" rel="vogroup_item_row{{$index}}_edit" >
                                                                <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}"> 
                                                                    <i class="fa fa-wrench"></i>
                                                                </td>
                                                             
                                                                <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}"> 
                                                                    {{VRHistory.PackingSlipNumber}}
                                                                </td>
                                                             
                                                                <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}"> 
                                                                    {{VRHistory.ReceivedDate}}
                                                                </td>
                                                             
                                                                <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}"> 
                                                                    {{VRHistory.TotalLineItems}}
                                                                </td>
                                                             
                                                                <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}"> 
                                                                    {{VRHistory.TotalCost | currency}}
                                                                </td>
                                                                 <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}"> 
                                                                    {{VRHistory.ReceivedByName}}
                                                                </td>
                                                                <td id="VO_Group_block_grid_container_tbody_tr_td_1_{{$index}}"> 
                                                                    {{VRHistory.Status}}
                                                                </td>
                                                             </tr>
                                                    </tbody>           
                                                  </table>
                                                  
                                                    
                                            </div>
                                </div>      
                           </div>
                              
                      </div>          
                              
                              
                     <div class="clearfix"></div>    
                    
                     <div class="Finalize_Section" id="VO_Finalize_Section">
                            <div  id="VO_order_section_heading">
                                <div class="row  heading_panel_Main  backgroundOrange" >
                                    <div class="left_heading col-lg-12 col-md-12" id="CO_dynamic_heading_panel_left_heading">
                                        <h1 id="CO_dynamic_heading_panel_left_heading_h1">
                                            <span class="heading_icon handCursor" ng-click="VendorOrderModel.hidePanel($event, 'Vendor_Orders')" >
                                                <i class="fa fa-chevron-circle-right"></i>
                                            </span>
                                            <p class="header_icon_text">E Finalize Order</p>
                                        </h1>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="clearfix"></div>
                             
                           
                            <div id="Vendor_Orders_Excess">
                            
                                
                              
                                    <div >
                                        <div>
                                            <div class="gid_container" id="VO_Order_block_grid_container">
                                                    <button id="CO_active_invoice_not_Invoiced_gid_container_finalize_btn" class="large_btn btn" ng-class="{'active_btn' : VendorOrderModel.EnableFinaliseOrder()}"  ng-disabled='!VendorOrderModel.EnableFinaliseOrder()' ng-click="VendorOrderModel.finalizeOrder()" >SUBMIT ORDER</button>
                                    </div>
                                    </div>
                                    </div>
                                    
                                    
                                    
                                    <!-- Finalise Order -->
                            </div>
                        </div>
                    </div>
                    
                    <div style="height: 300px;" id="VO_dummydiv"></div>
                </div>
              
        
                </div>
                   
            </div>
        
        
        <c:PartsChartPopup />
    </body>
</html>
</apex:page>